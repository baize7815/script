{
  "LimitSingleInstance": true,
  "SummaryExpression": "$$",
  "SubPrograms": [
    {
      "Id": "3fdf7345-0162-45de-9323-4f6e2be1c2b6",
      "Icon": null,
      "Name": "执行js",
      "Description": "",
      "SummaryExpression": "$$",
      "CreateTimeUtc": "2022-08-26T03:42:09.1373283Z",
      "LastEditTimeUtc": "2022-08-26T03:47:18.3210375Z",
      "IsLocalEdited": true,
      "Variables": [
        {
          "Key": "选中值",
          "Type": 1,
          "Desc": "默认的文本变量",
          "DefaultValue": "",
          "SaveState": false,
          "IsInput": true,
          "IsOutput": false,
          "ParamName": "",
          "InputParamInfo": null,
          "OutputParamInfo": null,
          "TableDef": null,
          "CustomType": null,
          "Group": null
        },
        {
          "Key": "ps",
          "Type": 0,
          "Desc": "",
          "DefaultValue": "",
          "SaveState": false,
          "IsInput": false,
          "IsOutput": false,
          "ParamName": "",
          "InputParamInfo": null,
          "OutputParamInfo": null,
          "TableDef": null,
          "CustomType": null,
          "Group": null
        }
      ],
      "Steps": [],
      "SubPrograms": null,
      "TemplateId": null,
      "TemplateRevision": 0,
      "UseServerVersion": null,
      "IsProtected": null,
      "SharedId": null,
      "ShareTimeUtc": null
    },
    {
      "Id": "f60ff22b-4027-4b51-8ffe-8d67f990fc4d",
      "Icon": null,
      "Name": "RunScript",
      "Description": "",
      "SummaryExpression": "$$",
      "CreateTimeUtc": "2022-08-26T04:03:45.1014229Z",
      "LastEditTimeUtc": "2024-09-03T05:04:31.9744246Z",
      "IsLocalEdited": true,
      "Variables": [
        {
          "Key": "选中值",
          "Type": 0,
          "Desc": "默认的文本变量",
          "DefaultValue": "",
          "SaveState": false,
          "IsInput": true,
          "IsOutput": false,
          "ParamName": "",
          "InputParamInfo": null,
          "OutputParamInfo": null,
          "TableDef": null,
          "CustomType": null,
          "Group": null
        },
        {
          "Key": "path",
          "Type": 0,
          "Desc": "",
          "DefaultValue": "",
          "SaveState": false,
          "IsInput": false,
          "IsOutput": false,
          "ParamName": "",
          "InputParamInfo": null,
          "OutputParamInfo": null,
          "TableDef": null,
          "CustomType": null,
          "Group": null
        }
      ],
      "Steps": [
        {
          "StepRunnerKey": "sys:getActiveProcessInfo",
          "InputParams": {
            "stopIfFail": {
              "VarKey": null,
              "Value": "1"
            }
          },
          "OutputParams": {
            "path": "path",
            "procName": null,
            "pid": null,
            "isSuccess": null
          },
          "IfSteps": null,
          "ElseSteps": null,
          "Note": "",
          "Disabled": false,
          "Collapsed": false,
          "DelayMs": 0
        },
        {
          "StepRunnerKey": "sys:simpleIf",
          "InputParams": {
            "condition": {
              "VarKey": null,
              "Value": "$$ {选中值} == 1"
            }
          },
          "OutputParams": {},
          "IfSteps": [
            {
              "StepRunnerKey": "sys:runScript",
              "InputParams": {
                "script": {
                  "VarKey": null,
                  "Value": "// This script exports photoshop layers as individual PNGs. It also\r\n// writes a JSON file that can be imported into Spine where the images\r\n// will be displayed in the same positions and draw order.\r\n\r\n// Setting defaults.\r\nvar writePngs = true;\r\nvar writeTemplate = false;\r\nvar writeJson = true;\r\nvar ignoreHiddenLayers = true;\r\nvar pngScale = 1;\r\nvar groupsAsSkins = false;\r\nvar useRulerOrigin = false;\r\nvar imagesDir = \"./images/\";\r\nvar projectDir = \"\";\r\nvar padding = 1;\r\n\r\n// IDs for saving settings.\r\nconst settingsID = stringIDToTypeID(\"settings\");\r\nconst writePngsID = stringIDToTypeID(\"writePngs\");\r\nconst writeTemplateID = stringIDToTypeID(\"writeTemplate\");\r\nconst writeJsonID = stringIDToTypeID(\"writeJson\");\r\nconst ignoreHiddenLayersID = stringIDToTypeID(\"ignoreHiddenLayers\");\r\nconst groupsAsSkinsID = stringIDToTypeID(\"groupsAsSkins\");\r\nconst useRulerOriginID = stringIDToTypeID(\"useRulerOrigin\");\r\nconst pngScaleID = stringIDToTypeID(\"pngScale\");\r\nconst imagesDirID = stringIDToTypeID(\"imagesDir\");\r\nconst projectDirID = stringIDToTypeID(\"projectDir\");\r\nconst paddingID = stringIDToTypeID(\"padding\");\r\n\r\nvar originalDoc;\r\ntry {\r\n\toriginalDoc = app.activeDocument;\r\n} catch (ignored) {}\r\nvar settings, progress;\r\nloadSettings();\r\nshowDialog();\r\n\r\nfunction run () {\r\n\t// Output dirs.\r\n\tvar absProjectDir = absolutePath(projectDir);\r\n\tnew Folder(absProjectDir).create();\r\n\tvar absImagesDir = absolutePath(imagesDir);\r\n\tvar imagesFolder = new Folder(absImagesDir);\r\n\timagesFolder.create();\r\n\tvar relImagesDir = imagesFolder.getRelativeURI(absProjectDir);\r\n\trelImagesDir = relImagesDir == \".\" ? \"\" : (relImagesDir + \"/\");\r\n\r\n\t// Get ruler origin.\r\n\tvar xOffSet = 0, yOffSet = 0;\r\n\tif (useRulerOrigin) {\r\n\t\tvar ref = new ActionReference();\r\n\t\tref.putEnumerated(charIDToTypeID(\"Dcmn\"), charIDToTypeID(\"Ordn\"), charIDToTypeID(\"Trgt\"));\r\n\t\tvar desc = executeActionGet(ref);\r\n\t\txOffSet = desc.getInteger(stringIDToTypeID(\"rulerOriginH\")) >> 16;\r\n\t\tyOffSet = desc.getInteger(stringIDToTypeID(\"rulerOriginV\")) >> 16;\r\n\t}\r\n\r\n\tactiveDocument.duplicate();\r\n\r\n\t// Output template image.\r\n\tif (writeTemplate) {\r\n\t\tif (pngScale != 1) {\r\n\t\t\tscaleImage();\r\n\t\t\tstoreHistory();\r\n\t\t}\r\n\r\n\t\tvar file = new File(absImagesDir + \"template\" + \".png\");\r\n\t\tif (file.exists) file.remove();\r\n\r\n\t\tvar opts;\r\n\t\topts = new ExportOptionsSaveForWeb();\r\n\t\topts.format = SaveDocumentType.PNG;\r\n\t\topts.PNG8 = false;\r\n\t\topts.quality = 100;\r\n\r\n\t\tactiveDocument.exportDocument(file, ExportType.SAVEFORWEB, opts);\r\n\r\n\t\tif (pngScale != 1) restoreHistory();\r\n\t}\r\n\r\n\tif (!writeJson && !writePngs) {\r\n\t\tactiveDocument.close(SaveOptions.DONOTSAVECHANGES);\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Rasterize all layers.\r\n\ttry {\r\n\t\texecuteAction(stringIDToTypeID( \"rasterizeAll\" ), undefined, DialogModes.NO);\r\n\t} catch (ignored) {}\r\n\r\n\t// Collect and hide layers.\r\n\tvar layers = [];\r\n\tcollectLayers(activeDocument, layers);\r\n\tvar layersCount = layers.length;\r\n\r\n\tstoreHistory();\r\n\r\n\t// Store the slot names and layers for each skin.\r\n\tvar slots = {}, skins = { \"default\": [] };\r\n\tfor (var i = layersCount - 1; i >= 0; i--) {\r\n\t\tvar layer = layers[i];\r\n\r\n\t\t// Use groups as skin names.\r\n\t\tvar potentialSkinName = trim(layer.parent.name);\r\n\t\tvar layerGroupSkin = potentialSkinName.indexOf(\"-NOSKIN\") == -1;\r\n\t\tvar skinName = (groupsAsSkins && layer.parent.typename == \"LayerSet\" && layerGroupSkin) ? potentialSkinName : \"default\";\r\n\r\n\t\tvar skinLayers = skins[skinName];\r\n\t\tif (!skinLayers) skins[skinName] = skinLayers = [];\r\n\t\tskinLayers[skinLayers.length] = layer;\r\n\r\n\t\tslots[layerName(layer)] = true;\r\n\t}\r\n\r\n\t// Output skeleton and bones.\r\n\tvar json = '{\"skeleton\":{\"images\":\"' + relImagesDir + '\"},\\n\"bones\":[{\"name\":\"root\"}],\\n\"slots\":[\\n';\r\n\r\n\t// Output slots.\r\n\tvar slotsCount = countAssocArray(slots);\r\n\tvar slotIndex = 0;\r\n\tfor (var slotName in slots) {\r\n\t\tif (!slots.hasOwnProperty(slotName)) continue;\r\n\r\n\t\t// Use image prefix if slot's attachment is in the default skin.\r\n\t\tvar attachmentName = slotName;\r\n\t\tvar defaultSkinLayers = skins[\"default\"];\r\n\t\tfor (var i = defaultSkinLayers.length - 1; i >= 0; i--) {\r\n\t\t\tif (layerName(defaultSkinLayers[i]) == slotName) {\r\n\t\t\t\tattachmentName = slotName;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tjson += '\\t{\"name\":\"' + slotName + '\",\"bone\":\"root\",\"attachment\":\"' + attachmentName + '\"}';\r\n\t\tslotIndex++;\r\n\t\tjson += slotIndex < slotsCount ? \",\\n\" : \"\\n\";\r\n\t}\r\n\tjson += '],\\n\"skins\":{\\n';\r\n\r\n\t// Output skins.\r\n\tvar skinsCount = countAssocArray(skins);\r\n\tvar skinIndex = 0;\r\n\tfor (var skinName in skins) {\r\n\t\tif (!skins.hasOwnProperty(skinName)) continue;\r\n\t\tjson += '\\t\"' + skinName + '\":{\\n';\r\n\r\n\t\tvar skinLayers = skins[skinName];\r\n\t\tvar skinLayersCount = skinLayers.length;\r\n\t\tvar skinLayerIndex = 0;\r\n\t\tfor (var i = skinLayersCount - 1; i >= 0; i--) {\r\n\t\t\tvar layer = skinLayers[i];\r\n\t\t\tvar slotName = layerName(layer);\r\n\t\t\tvar placeholderName, attachmentName;\r\n\t\t\tif (skinName == \"default\") {\r\n\t\t\t\tplaceholderName = slotName;\r\n\t\t\t\tattachmentName = placeholderName;\r\n\t\t\t} else {\r\n\t\t\t\tplaceholderName = slotName;\r\n\t\t\t\tattachmentName = skinName + \"/\" + slotName;\r\n\t\t\t}\r\n\r\n\t\t\tvar x = activeDocument.width.as(\"px\") * pngScale;\r\n\t\t\tvar y = activeDocument.height.as(\"px\") * pngScale;\r\n\r\n\t\t\tlayer.visible = true;\r\n\t\t\tif (!layer.isBackgroundLayer) activeDocument.trim(TrimType.TRANSPARENT, false, true, true, false);\r\n\t\t\tx -= activeDocument.width.as(\"px\") * pngScale;\r\n\t\t\ty -= activeDocument.height.as(\"px\") * pngScale;\r\n\t\t\tif (!layer.isBackgroundLayer) activeDocument.trim(TrimType.TRANSPARENT, true, false, false, true);\r\n\t\t\tvar width = activeDocument.width.as(\"px\") * pngScale + padding * 2;\r\n\t\t\tvar height = activeDocument.height.as(\"px\") * pngScale + padding * 2;\r\n\r\n\t\t\t// Save image.\r\n\t\t\tif (writePngs) {\r\n\t\t\t\tif (pngScale != 1) scaleImage();\r\n\t\t\t\tif (padding > 0) activeDocument.resizeCanvas(width, height, AnchorPosition.MIDDLECENTER);\r\n\r\n\t\t\t\tif (skinName != \"default\") new Folder(absImagesDir + skinName).create();\r\n\r\n\t\t\t\tvar opts;\r\n\t\t\t\topts = new ExportOptionsSaveForWeb();\r\n\t\t\t\topts.format = SaveDocumentType.PNG;\r\n\t\t\t\topts.PNG8 = false;\r\n\t\t\t\topts.quality = 100;\r\n\r\n\t\t\t\tactiveDocument.exportDocument(new File(absImagesDir + attachmentName + \".png\"), ExportType.SAVEFORWEB, opts);\r\n\t\t\t}\r\n\r\n\t\t\trestoreHistory();\r\n\t\t\tlayer.visible = false;\r\n\r\n\t\t\tx += Math.round(width) / 2;\r\n\t\t\ty += Math.round(height) / 2;\r\n\r\n\t\t\t// Make relative to the Photoshop document ruler origin.\r\n\t\t\tif (useRulerOrigin) {\r\n\t\t\t\tx -= xOffSet * pngScale;\r\n\t\t\t\ty -= activeDocument.height.as(\"px\") * pngScale - yOffSet * pngScale; // Invert y.\r\n\t\t\t}\r\n\r\n\t\t\tif (attachmentName == placeholderName) {\r\n\t\t\t\tjson += '\\t\\t\"' + slotName + '\":{\"' + placeholderName + '\":{'\r\n\t\t\t\t\t+ '\"x\":' + x + ',\"y\":' + y + ',\"width\":' + Math.round(width) + ',\"height\":' + Math.round(height) + '}}';\r\n\t\t\t} else {\r\n\t\t\t\tjson += '\\t\\t\"' + slotName + '\":{\"' + placeholderName + '\":{\"name\":\"' + attachmentName + '\", '\r\n\t\t\t\t\t+ '\"x\":' + x + ',\"y\":' + y + ',\"width\":' + Math.round(width) + ',\"height\":' + Math.round(height) + '}}';\r\n\t\t\t}\r\n\r\n\t\t\tskinLayerIndex++;\r\n\t\t\tjson += skinLayerIndex < skinLayersCount ? \",\\n\" : \"\\n\";\r\n\t\t}\r\n\t\tjson += \"\\t\\}\";\r\n\r\n\t\tskinIndex++;\r\n\t\tjson += skinIndex < skinsCount ? \",\\n\" : \"\\n\";\r\n\t}\r\n\tjson += '},\\n\"animations\":{\"animation\":{}}\\n}';\r\n\r\n\tactiveDocument.close(SaveOptions.DONOTSAVECHANGES);\r\n\r\n\t// Output JSON file.\r\n\tif (writeJson) {\r\n\t\tvar name = decodeURI(originalDoc.name);\r\n\t\tname = name.substring(0, name.indexOf(\".\"));\r\n\t\tvar file = new File(absProjectDir + name + \".json\");\r\n\t\tfile.remove();\r\n\t\tfile.open(\"w\", \"TEXT\");\r\n\t\tfile.lineFeed = \"\\n\";\r\n\t\tfile.write(json);\r\n\t\tfile.close();\r\n\t}\r\n}\r\n\r\n// Dialog and settings:\r\n\r\nfunction showDialog () {\r\n\tif (!originalDoc) {\r\n\t\talert(\"请打开一个文件在运行 LayersToPNG 脚本.\");\r\n\t\treturn;\r\n\t}\r\n\tif (!hasFilePath()) {\r\n\t\talert(\"请在运行 LayersToPNG 之前保存该文档.\");\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar dialog = new Window(\"dialog\", \"Spine LayersToPNG\");\r\n\tdialog.alignChildren = \"fill\";\r\n\r\n\tvar checkboxGroup = dialog.add(\"group\");\r\n\t\tvar group = checkboxGroup.add(\"group\");\r\n\t\t\tgroup.orientation = \"column\";\r\n\t\t\tgroup.alignChildren = \"left\";\r\n\t\t\tvar writePngsCheckbox = group.add(\"checkbox\", undefined, \" 导出 PNG\");\r\n\t\t\twritePngsCheckbox.value = writePngs;\r\n\t\t\tvar writeTemplateCheckbox = group.add(\"checkbox\", undefined, \" 编写模板 PNG\");\r\n\t\t\twriteTemplateCheckbox.value = writeTemplate;\r\n\t\t\tvar writeJsonCheckbox = group.add(\"checkbox\", undefined, \" 导出 JSON\");\r\n\t\t\twriteJsonCheckbox.value = writeJson;\r\n\t\tgroup = checkboxGroup.add(\"group\");\r\n\t\t\tgroup.orientation = \"column\";\r\n\t\t\tgroup.alignChildren = \"left\";\r\n\t\t\tvar ignoreHiddenLayersCheckbox = group.add(\"checkbox\", undefined, \" 忽略隐藏图层\");\r\n\t\t\tignoreHiddenLayersCheckbox.value = ignoreHiddenLayers;\r\n\t\t\tvar groupsAsSkinsCheckbox = group.add(\"checkbox\", undefined, \" 使用组作为皮肤\");\r\n\t\t\tgroupsAsSkinsCheckbox.value = groupsAsSkins;\r\n\t\t\tvar useRulerOriginCheckbox = group.add(\"checkbox\", undefined, \" 使用标尺原点为 0,0\");\r\n\t\t\tuseRulerOriginCheckbox.value = useRulerOrigin;\r\n\r\n\tvar slidersGroup = dialog.add(\"group\");\r\n\t\tgroup = slidersGroup.add(\"group\");\r\n\t\t\tgroup.orientation = \"column\";\r\n\t\t\tgroup.alignChildren = \"right\";\r\n\t\t\tgroup.add(\"statictext\", undefined, \"PNG比例:\");\r\n\t\t\tgroup.add(\"statictext\", undefined, \"边缘像素:\");\r\n\t\tgroup = slidersGroup.add(\"group\");\r\n\t\t\tgroup.orientation = \"column\";\r\n\t\t\tvar scaleText = group.add(\"edittext\", undefined, pngScale * 100);\r\n\t\t\tscaleText.characters = 4;\r\n\t\t\tvar paddingText = group.add(\"edittext\", undefined, padding);\r\n\t\t\tpaddingText.characters = 4;\r\n\t\tgroup = slidersGroup.add(\"group\");\r\n\t\t\tgroup.orientation = \"column\";\r\n\t\t\tgroup.add(\"statictext\", undefined, \"%\");\r\n\t\t\tgroup.add(\"statictext\", undefined, \"px\");\r\n\t\tgroup = slidersGroup.add(\"group\");\r\n\t\t\tgroup.alignment = [\"fill\", \"\"];\r\n\t\t\tgroup.orientation = \"column\";\r\n\t\t\tgroup.alignChildren = [\"fill\", \"\"];\r\n\t\t\tvar scaleSlider = group.add(\"slider\", undefined, pngScale * 100, 1, 100);\r\n\t\t\tvar paddingSlider = group.add(\"slider\", undefined, padding, 0, 4);\r\n\tscaleText.onChanging = function () { scaleSlider.value = scaleText.text; };\r\n\tscaleSlider.onChanging = function () { scaleText.text = Math.round(scaleSlider.value); };\r\n\tpaddingText.onChanging = function () { paddingSlider.value = paddingText.text; };\r\n\tpaddingSlider.onChanging = function () { paddingText.text = Math.round(paddingSlider.value); };\r\n\r\n\tvar outputGroup = dialog.add(\"panel\", undefined, \"输出目录\");\r\n\t\toutputGroup.alignChildren = \"fill\";\r\n\t\toutputGroup.margins = [10,15,10,10];\r\n\t\tvar textGroup = outputGroup.add(\"group\");\r\n\t\t\tgroup = textGroup.add(\"group\");\r\n\t\t\t\tgroup.orientation = \"column\";\r\n\t\t\t\tgroup.alignChildren = \"right\";\r\n\t\t\t\tgroup.add(\"statictext\", undefined, \"图片:\");\r\n\t\t\t\tgroup.add(\"statictext\", undefined, \"JSON:\");\r\n\t\t\tgroup = textGroup.add(\"group\");\r\n\t\t\t\tgroup.orientation = \"column\";\r\n\t\t\t\tgroup.alignChildren = \"fill\";\r\n\t\t\t\tgroup.alignment = [\"fill\", \"\"];\r\n\t\t\t\tvar imagesDirText = group.add(\"edittext\", undefined, imagesDir);\r\n\t\t\t\tvar projectDirText = group.add(\"edittext\", undefined, projectDir);\r\n\t\toutputGroup.add(\"statictext\", undefined, \"Begin paths with \\\"./\\\" to be relative to the PSD file.\").alignment = \"center\";\r\n\r\n\tvar group = dialog.add(\"group\");\r\n\t\tgroup.alignment = \"center\";\r\n\t\tvar runButton = group.add(\"button\", undefined, \"确定\");\r\n\t\tvar cancelButton = group.add(\"button\", undefined, \"取消\");\r\n\t\tcancelButton.onClick = function () {\r\n\t\t\tdialog.close(0);\r\n\t\t\treturn;\r\n\t\t};\r\n\r\n\tfunction updateSettings () {\r\n\t\twritePngs = writePngsCheckbox.value;\r\n\t\twriteTemplate = writeTemplateCheckbox.value;\r\n\t\twriteJson = writeJsonCheckbox.value;\r\n\t\tignoreHiddenLayers = ignoreHiddenLayersCheckbox.value;\r\n\t\tvar scaleValue = parseFloat(scaleText.text);\r\n\t\tif (scaleValue > 0 && scaleValue <= 100) pngScale = scaleValue / 100;\r\n\t\tgroupsAsSkins = groupsAsSkinsCheckbox.value;\r\n\t\tuseRulerOrigin = useRulerOriginCheckbox.value;\r\n\t\timagesDir = imagesDirText.text;\r\n\t\tprojectDir = projectDirText.text;\r\n\t\tvar paddingValue = parseInt(paddingText.text);\r\n\t\tif (paddingValue >= 0) padding = paddingValue;\r\n\t}\r\n\r\n\tdialog.onClose = function() {\r\n\t\tupdateSettings();\r\n\t\tsaveSettings();\r\n\t};\r\n\t\r\n\trunButton.onClick = function () {\r\n\t\tif (scaleText.text <= 0 || scaleText.text > 100) {\r\n\t\t\talert(\"PNG scale must be between > 0 and <= 100.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (paddingText.text < 0) {\r\n\t\t\talert(\"Padding must be >= 0.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdialog.close(0);\r\n\r\n\t\tvar rulerUnits = app.preferences.rulerUnits;\r\n\t\tapp.preferences.rulerUnits = Units.PIXELS;\r\n\t\ttry {\r\n\t\t\trun();\r\n\t\t} catch (e) {\r\n\t\t\talert(\"An unexpected error has occurred.\\n\\nTo debug, run the LayersToPNG script using Adobe ExtendScript \"\r\n\t\t\t\t+ \"with \\\"Debug > Do not break on guarded exceptions\\\" unchecked.\");\r\n\t\t\tdebugger;\r\n\t\t} finally {\r\n\t\t\tif (activeDocument != originalDoc) activeDocument.close(SaveOptions.DONOTSAVECHANGES);\r\n\t\t\tapp.preferences.rulerUnits = rulerUnits;\r\n\t\t}\r\n\t};\r\n\r\n\tdialog.center();\r\n\tdialog.show();\r\n}\r\n\r\nfunction loadSettings () {\r\n\ttry {\r\n\t\tsettings = app.getCustomOptions(settingsID);\r\n\t} catch (e) {\r\n\t\tsaveSettings();\r\n\t}\r\n\tif (typeof settings == \"undefined\") saveSettings();\r\n\tsettings = app.getCustomOptions(settingsID);\r\n\tif (settings.hasKey(writePngsID)) writePngs = settings.getBoolean(writePngsID);\r\n\tif (settings.hasKey(writeTemplateID)) writeTemplate = settings.getBoolean(writeTemplateID);\r\n\tif (settings.hasKey(writeJsonID)) writeJson = settings.getBoolean(writeJsonID);\r\n\tif (settings.hasKey(ignoreHiddenLayersID)) ignoreHiddenLayers = settings.getBoolean(ignoreHiddenLayersID);\r\n\tif (settings.hasKey(pngScaleID)) pngScale = settings.getDouble(pngScaleID);\r\n\tif (settings.hasKey(groupsAsSkinsID)) groupsAsSkins = settings.getBoolean(groupsAsSkinsID);\r\n\tif (settings.hasKey(useRulerOriginID)) useRulerOrigin = settings.getBoolean(useRulerOriginID);\r\n\tif (settings.hasKey(imagesDirID)) imagesDir = settings.getString(imagesDirID);\r\n\tif (settings.hasKey(projectDirID)) projectDir = settings.getString(projectDirID);\r\n\tif (settings.hasKey(paddingID)) padding = settings.getDouble(paddingID);\r\n}\r\n\r\nfunction saveSettings () {\r\n\tvar settings = new ActionDescriptor();\r\n\tsettings.putBoolean(writePngsID, writePngs);\r\n\tsettings.putBoolean(writeTemplateID, writeTemplate);\r\n\tsettings.putBoolean(writeJsonID, writeJson);\r\n\tsettings.putBoolean(ignoreHiddenLayersID, ignoreHiddenLayers);\r\n\tsettings.putDouble(pngScaleID, pngScale);\r\n\tsettings.putBoolean(groupsAsSkinsID, groupsAsSkins);\r\n\tsettings.putBoolean(useRulerOriginID, useRulerOrigin);\r\n\tsettings.putString(imagesDirID, imagesDir);\r\n\tsettings.putString(projectDirID, projectDir);\r\n\tsettings.putDouble(paddingID, padding);\r\n\tapp.putCustomOptions(settingsID, settings, true);\r\n}\r\n\r\n// Photoshop utility:\r\n\r\nfunction scaleImage () {\r\n\tvar imageSize = activeDocument.width.as(\"px\");\r\n\tactiveDocument.resizeImage(UnitValue(imageSize * pngScale, \"px\"), null, null, ResampleMethod.BICUBICSHARPER);\r\n}\r\n\r\nvar historyIndex;\r\nfunction storeHistory () {\r\n\thistoryIndex = activeDocument.historyStates.length - 1;\r\n}\r\nfunction restoreHistory () {\r\n\tactiveDocument.activeHistoryState = activeDocument.historyStates[historyIndex];\r\n}\r\n\r\nfunction collectLayers (layer, collect) {\r\n\tfor (var i = 0, n = layer.layers.length; i < n; i++) {\r\n\t\tvar child = layer.layers[i];\r\n\t\tif (ignoreHiddenLayers && !child.visible) continue;\r\n\t\tif (child.bounds[2] == 0 && child.bounds[3] == 0) continue;\r\n\t\tif (child.layers && child.layers.length > 0)\r\n\t\t\tcollectLayers(child, collect);\r\n\t\telse if (child.kind == LayerKind.NORMAL) {\r\n\t\t\tcollect.push(child);\r\n\t\t\tchild.visible = false;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction hasFilePath () {\r\n\tvar ref = new ActionReference();\r\n\tref.putEnumerated(charIDToTypeID(\"Dcmn\"), charIDToTypeID(\"Ordn\"), charIDToTypeID(\"Trgt\"));\r\n\treturn executeActionGet(ref).hasKey(stringIDToTypeID(\"fileReference\"));\r\n}\r\n\r\nfunction absolutePath (path) {\r\n\tpath = trim(path);\r\n\tif (path.length == 0)\r\n\t\tpath = activeDocument.path.toString();\r\n\telse if (imagesDir.indexOf(\"./\") == 0)\r\n\t\tpath = activeDocument.path + path.substring(1);\r\n\tpath = path.replace(/\\\\/g, \"/\");\r\n\tif (path.substring(path.length - 1) != \"/\") path += \"/\";\r\n\treturn path;\r\n}\r\n\r\n// JavaScript utility:\r\n\r\nfunction countAssocArray (obj) {\r\n\tvar count = 0;\r\n\tfor (var key in obj)\r\n\t\tif (obj.hasOwnProperty(key)) count++;\r\n\treturn count;\r\n}\r\n\r\nfunction trim (value) {\r\n\treturn value.replace(/^\\s+|\\s+$/g, \"\");\r\n}\r\n\r\nfunction endsWith (str, suffix) {\r\n\treturn str.indexOf(suffix, str.length - suffix.length) !== -1;\r\n}\r\n\r\nfunction stripSuffix (str, suffix) {\r\n\tif (endsWith(str.toLowerCase(), suffix.toLowerCase())) str = str.substring(0, str.length - suffix.length);\r\n\treturn str;\r\n}\r\n\r\nfunction layerName (layer) {\r\n\treturn stripSuffix(trim(layer.name), \".png\").replace(/[:\\/\\\\*\\?\\\"\\<\\>\\|]/g, \"\");\r\n}\r\n"
                },
                "type": {
                  "VarKey": null,
                  "Value": "CUSTOM"
                },
                "ext": {
                  "VarKey": null,
                  "Value": ".jsx"
                },
                "encoding": {
                  "VarKey": null,
                  "Value": "default"
                },
                "runner": {
                  "VarKey": "选中值",
                  "Value": null
                },
                "argTemplate": {
                  "VarKey": null,
                  "Value": "%FILE%"
                },
                "outputEncoding": {
                  "VarKey": null,
                  "Value": "oem"
                },
                "workingDir": {
                  "VarKey": null,
                  "Value": ""
                },
                "runAsAdmin": {
                  "VarKey": null,
                  "Value": "0"
                },
                "waitToExit": {
                  "VarKey": null,
                  "Value": "0"
                }
              },
              "OutputParams": {
                "stdout": null,
                "stdoutOnly": null,
                "stderr": null
              },
              "IfSteps": null,
              "ElseSteps": null,
              "Note": "",
              "Disabled": false,
              "Collapsed": false,
              "DelayMs": 0
            }
          ],
          "ElseSteps": null,
          "Note": "LayersToPNG",
          "Disabled": false,
          "Collapsed": true,
          "DelayMs": 0
        },
        {
          "StepRunnerKey": "sys:simpleIf",
          "InputParams": {
            "condition": {
              "VarKey": null,
              "Value": "$= {选中值} == 2"
            }
          },
          "OutputParams": {},
          "IfSteps": [
            {
              "StepRunnerKey": "sys:runScript",
              "InputParams": {
                "script": {
                  "VarKey": null,
                  "Value": "//  photoshopscripts.wordpress.com\r\n\r\n////////////////////////////////////\r\n//       Split to Layers 1.0      //\r\n//       2012, David Jensen       //\r\n//                                //\r\n//         With help from         //\r\n//   pfaffenbichler and xbytor    //\r\n//        at ps-scripts.com       //\r\n////////////////////////////////////\r\n\r\n#target photoshop\r\n\r\n//更改以下5个值中的任何一个以自定义脚本的默认选项:\r\n\r\nvar showOptionsDialog = true; //设置为false以禁用对用户的提示.\r\nvar tolerance = 0;            // 将被忽略的透明像素的最大间隙。还设置默认值\r\nvar confirmThreshold = 20;    // 如果脚本要生成大量层，请提示用户确认这是正常的\r\nvar suffix = \"_\";           // 将此添加到新层的层名称中。设置为“”，不添加任何内容。\r\nvar addCount = true;          // 在每个新层的末尾添加一个数字\r\n\r\n\r\n///////////////////////////////////////\r\n///////////////////////////////////////\r\n///////////////////////////////////////\r\n///////////////////////////////////////\r\n///////////////////////////////////////\r\nvar layerNamePreview=activeDocument.activeLayer.name + suffix;\r\nif (addCount === true){\r\n    layerNamePreview += \"1\";\r\n}\r\n\r\nvar originalRulerUnits = app.preferences.rulerUnits;\r\napp.preferences.rulerUnits = Units.POINTS;\r\n\r\nbounds = activeDocument.activeLayer.bounds\r\nvar emptyLayer=false;\r\nif (Number(bounds[0]) == 0 && Number(bounds[1]) == 0 && Number(bounds[2]) == 0 && Number(bounds[3]) == 0) {emptyLayer = true};\r\n\r\ntry{\r\n    if (activeDocument.activeLayer.kind != undefined && activeDocument.activeLayer.isBackgroundLayer == false && emptyLayer == false){\r\n        activeDocument.suspendHistory(\"Separate\", \"main()\");\r\n    }else{\r\n        alert( \"没有选择支持的图层类型.\");\r\n    }\r\n}catch(err){\r\n    alert(err)\r\n}\r\n\r\napp.preferences.rulerUnits = originalRulerUnits;\r\n\r\nfunction main() {\r\n        \r\n    var ok=createDialog();\r\n    if (ok===2){\r\n        activeDocument.selection.deselect()\r\n        return false;\r\n    }\r\n    baseLayer=activeDocument.activeLayer;\r\n    activeDocument.quickMaskMode = false;\r\n    activeDocument.selection.deselect()\r\n    var layerName = activeDocument.activeLayer.name\r\n    //如果无法进行选择，请停止运行脚本\r\n  \r\n \r\n    var idCpTL = charIDToTypeID(\"CpTL\");\r\n    executeAction(idCpTL, undefined, DialogModes.NO);\r\n    \r\n    activeDocument.activeLayer.rasterize(RasterizeType.ENTIRELAYER)\r\n    try{\r\n        var idDlt = charIDToTypeID( \"Dlt \" );\r\n        var desc120 = new ActionDescriptor();\r\n        var idnull = charIDToTypeID( \"null\" );\r\n        var ref112 = new ActionReference();\r\n        var idChnl = charIDToTypeID( \"Chnl\" );\r\n        var idChnl = charIDToTypeID( \"Chnl\" );\r\n        var idMsk = charIDToTypeID( \"Msk \" );\r\n        ref112.putEnumerated( idChnl, idChnl, idMsk );\r\n        desc120.putReference( idnull, ref112 );\r\n        var idAply = charIDToTypeID( \"Aply\" );\r\n        desc120.putBoolean( idAply, true );\r\n        executeAction( idDlt, desc120, DialogModes.NO );\r\n    }catch(e){}\r\n    \r\n    \r\n    \r\n    activeDocument.activeLayer.name = layerName\r\n\r\n    baseLayer=activeDocument.activeLayer\r\n\r\n\r\n    \r\n    makeSelection()\r\n\r\n    var idMk = charIDToTypeID(\"Mk  \");\r\n    var desc642 = new ActionDescriptor();\r\n    var idNw = charIDToTypeID(\"Nw  \");\r\n    var idDcmn = charIDToTypeID(\"Dcmn\");\r\n    desc642.putClass(idNw, idDcmn);\r\n    var idUsng = charIDToTypeID(\"Usng\");\r\n    var ref535 = new ActionReference();\r\n    var idChnl = charIDToTypeID(\"Chnl\");\r\n    var idOrdn = charIDToTypeID(\"Ordn\");\r\n    var idTrgt = charIDToTypeID(\"Trgt\");\r\n    ref535.putEnumerated(idChnl, idOrdn, idTrgt);\r\n    desc642.putReference(idUsng, ref535);\r\n    executeAction(idMk, desc642, DialogModes.NO);\r\n\r\n    newDoc = activeDocument\r\n    // =======================================================\r\n    activeDocument.resizeImage(\"200%\", \"200%\", undefined, ResampleMethod.NEARESTNEIGHBOR)\r\n\r\n    // =======================================================\r\n    var idsetd = charIDToTypeID(\"setd\");\r\n    var desc934 = new ActionDescriptor();\r\n    var idnull = charIDToTypeID(\"null\");\r\n    var ref535 = new ActionReference();\r\n    var idChnl = charIDToTypeID(\"Chnl\");\r\n    var idfsel = charIDToTypeID(\"fsel\");\r\n    ref535.putProperty(idChnl, idfsel);\r\n    desc934.putReference(idnull, ref535);\r\n    var idT = charIDToTypeID(\"T   \");\r\n    var ref536 = new ActionReference();\r\n    var idChnl = charIDToTypeID(\"Chnl\");\r\n    var idOrdn = charIDToTypeID(\"Ordn\");\r\n    var idTrgt = charIDToTypeID(\"Trgt\");\r\n    ref536.putEnumerated(idChnl, idOrdn, idTrgt);\r\n    desc934.putReference(idT, ref536);\r\n    executeAction(idsetd, desc934, DialogModes.NO);\r\n\r\n\r\n    var idMk = charIDToTypeID(\"Mk  \");\r\n    var desc403 = new ActionDescriptor();\r\n    var idnull = charIDToTypeID(\"null\");\r\n    var ref288 = new ActionReference();\r\n    var idPath = charIDToTypeID(\"Path\");\r\n    ref288.putClass(idPath);\r\n    desc403.putReference(idnull, ref288);\r\n    var idFrom = charIDToTypeID(\"From\");\r\n    var ref289 = new ActionReference();\r\n    var idcsel = charIDToTypeID(\"csel\");\r\n    var idfsel = charIDToTypeID(\"fsel\");\r\n    var idfsel = charIDToTypeID(\"fsel\");\r\n    ref289.putProperty(idcsel, idfsel);\r\n    desc403.putReference(idFrom, ref289);\r\n    var idTlrn = charIDToTypeID(\"Tlrn\");\r\n    var idPxl = charIDToTypeID(\"#Pxl\");\r\n    desc403.putUnitDouble(idTlrn, idPxl, 0.500000);\r\n    executeAction(idMk, desc403, DialogModes.NO);\r\n    \r\n    var subPathsLength = activeDocument.pathItems[0].subPathItems.length\r\n    \r\n    if (subPathsLength>confirmThreshold){\r\n        var answer = confirm(\"Up to \"+subPathsLength+ \" layers will be created. Would you like to continue?\",true)\r\n        if (answer === false){\r\n            newDoc.close(SaveOptions.DONOTSAVECHANGES);\r\n            activeDocument.quickMaskMode = false;\r\n            activeDocument.selection.deselect();\r\n            return 0;\r\n        }\r\n    \r\n    }\r\n\r\n    // =======================================================\r\n    activeDocument.resizeImage(\"50%\", \"50%\", undefined, ResampleMethod.NEARESTNEIGHBOR)\r\n\r\n    var pathInfo = collectPathInfoFromDesc(activeDocument, activeDocument.pathItems[activeDocument.pathItems.length - 1])\r\n    \r\n    // =======================================================\r\n    newDoc.close(SaveOptions.DONOTSAVECHANGES)\r\n\r\n    // =======================================================\r\n    activeDocument.quickMaskMode = false\r\n\r\n    // =======================================================\r\n    //制作频道\r\n    // =======================================================\r\n    var idMk = charIDToTypeID(\"Mk  \");\r\n    var desc6 = new ActionDescriptor();\r\n    var idNw = charIDToTypeID(\"Nw  \");\r\n    var desc7 = new ActionDescriptor();\r\n    var idNm = charIDToTypeID(\"Nm  \");\r\n    desc7.putString(idNm, \"ContiguityMask\");\r\n    var idClrI = charIDToTypeID(\"ClrI\");\r\n    var idMskI = charIDToTypeID(\"MskI\");\r\n    var idMskA = charIDToTypeID(\"MskA\");\r\n    desc7.putEnumerated(idClrI, idMskI, idMskA);\r\n    var idClr = charIDToTypeID(\"Clr \");\r\n    var desc8 = new ActionDescriptor();\r\n    var idRd = charIDToTypeID(\"Rd  \");\r\n    desc8.putDouble(idRd, 255.000000);\r\n    var idGrn = charIDToTypeID(\"Grn \");\r\n    desc8.putDouble(idGrn, 0.000000);\r\n    var idBl = charIDToTypeID(\"Bl  \");\r\n    desc8.putDouble(idBl, 0.000000);\r\n    var idRGBC = charIDToTypeID(\"RGBC\");\r\n    desc7.putObject(idClr, idRGBC, desc8);\r\n    var idOpct = charIDToTypeID(\"Opct\");\r\n    desc7.putInteger(idOpct, 50);\r\n    var idChnl = charIDToTypeID(\"Chnl\");\r\n    desc6.putObject(idNw, idChnl, desc7);\r\n    var idUsng = charIDToTypeID(\"Usng\");\r\n    var ref5 = new ActionReference();\r\n    var idChnl = charIDToTypeID(\"Chnl\");\r\n    var idfsel = charIDToTypeID(\"fsel\");\r\n    ref5.putProperty(idChnl, idfsel);\r\n    desc6.putReference(idUsng, ref5);\r\n    executeAction(idMk, desc6, DialogModes.NO);\r\n\r\n\r\n    var layerCount = 1\r\n    for (i = 0; i < subPathsLength; i++) {\r\n        //deselect\r\n        var idsetd = charIDToTypeID(\"setd\");\r\n        var desc279 = new ActionDescriptor();\r\n        var idnull = charIDToTypeID(\"null\");\r\n        var ref137 = new ActionReference();\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idfsel = charIDToTypeID(\"fsel\");\r\n        ref137.putProperty(idChnl, idfsel);\r\n        desc279.putReference(idnull, ref137);\r\n        var idT = charIDToTypeID(\"T   \");\r\n        var idOrdn = charIDToTypeID(\"Ordn\");\r\n        var idNone = charIDToTypeID(\"None\");\r\n        desc279.putEnumerated(idT, idOrdn, idNone);\r\n        executeAction(idsetd, desc279, DialogModes.NO);\r\n        ///select alpha channel\r\n        var idslct = charIDToTypeID(\"slct\");\r\n        var desc315 = new ActionDescriptor();\r\n        var idnull = charIDToTypeID(\"null\");\r\n        var ref175 = new ActionReference();\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        ref175.putName(idChnl, \"ContiguityMask\");\r\n        desc315.putReference(idnull, ref175);\r\n        executeAction(idslct, desc315, DialogModes.NO);\r\n        //use magic wand\r\n        var idsetd = charIDToTypeID(\"setd\");\r\n        var desc263 = new ActionDescriptor();\r\n        var idnull = charIDToTypeID(\"null\");\r\n        var ref123 = new ActionReference();\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idfsel = charIDToTypeID(\"fsel\");\r\n        ref123.putProperty(idChnl, idfsel);\r\n        desc263.putReference(idnull, ref123);\r\n        var idT = charIDToTypeID(\"T   \");\r\n        var desc264 = new ActionDescriptor();\r\n        var idHrzn = charIDToTypeID(\"Hrzn\");\r\n        var idRlt = charIDToTypeID(\"#Rlt\");\r\n        desc264.putUnitDouble(idHrzn, idRlt, pathInfo[i][0][0]);\r\n        var idVrtc = charIDToTypeID(\"Vrtc\");\r\n        var idRlt = charIDToTypeID(\"#Rlt\");\r\n\r\n        desc264.putUnitDouble(idVrtc, idRlt, pathInfo[i][0][1]);\r\n        var idPnt = charIDToTypeID(\"Pnt \");\r\n        desc263.putObject(idT, idPnt, desc264);\r\n        var idTlrn = charIDToTypeID(\"Tlrn\");\r\n        desc263.putInteger(idTlrn, 1);\r\n        executeAction(idsetd, desc263, DialogModes.NO);\r\n\r\n        var idslct = charIDToTypeID(\"slct\");\r\n        var desc346 = new ActionDescriptor();\r\n        var idnull = charIDToTypeID(\"null\");\r\n        var ref205 = new ActionReference();\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idRGB = charIDToTypeID(\"RGB \");\r\n        ref205.putEnumerated(idChnl, idChnl, idRGB);\r\n        desc346.putReference(idnull, ref205);\r\n        var idMkVs = charIDToTypeID(\"MkVs\");\r\n        desc346.putBoolean(idMkVs, false);\r\n        executeAction(idslct, desc346, DialogModes.NO);\r\n\r\n\r\n\r\n\r\n        try {\r\n            // =======================================================\r\n            var idCpTL = charIDToTypeID(\"CpTL\");\r\n            executeAction(idCpTL, undefined, DialogModes.NO);\r\n\r\n            try {\r\n                var idrasterizeLayer = stringIDToTypeID(\"rasterizeLayer\");\r\n                var desc924 = new ActionDescriptor();\r\n                var idnull = charIDToTypeID(\"null\");\r\n                var ref721 = new ActionReference();\r\n                var idLyr = charIDToTypeID(\"Lyr \");\r\n                var idOrdn = charIDToTypeID(\"Ordn\");\r\n                var idTrgt = charIDToTypeID(\"Trgt\");\r\n                ref721.putEnumerated(idLyr, idOrdn, idTrgt);\r\n                desc924.putReference(idnull, ref721);\r\n                var idWhat = charIDToTypeID(\"What\");\r\n                var idrasterizeItem = stringIDToTypeID(\"rasterizeItem\");\r\n                var idvectorMask = stringIDToTypeID(\"vectorMask\");\r\n                desc924.putEnumerated(idWhat, idrasterizeItem, idvectorMask);\r\n                executeAction(idrasterizeLayer, desc924, DialogModes.NO);\r\n            } catch (err) {}\r\n\r\n            try {\r\n                var idIntr = charIDToTypeID(\"Intr\");\r\n                var desc864 = new ActionDescriptor();\r\n                var idnull = charIDToTypeID(\"null\");\r\n                var ref658 = new ActionReference();\r\n                var idChnl = charIDToTypeID(\"Chnl\");\r\n                var idOrdn = charIDToTypeID(\"Ordn\");\r\n                var idTrgt = charIDToTypeID(\"Trgt\");\r\n                ref658.putEnumerated(idChnl, idOrdn, idTrgt);\r\n                desc864.putReference(idnull, ref658);\r\n                var idWith = charIDToTypeID(\"With\");\r\n                var ref659 = new ActionReference();\r\n                var idChnl = charIDToTypeID(\"Chnl\");\r\n                var idfsel = charIDToTypeID(\"fsel\");\r\n                ref659.putProperty(idChnl, idfsel);\r\n                desc864.putReference(idWith, ref659);\r\n                executeAction(idIntr, desc864, DialogModes.NO);\r\n\r\n                // =======================================================\r\n                var idDlt = charIDToTypeID(\"Dlt \");\r\n                var desc865 = new ActionDescriptor();\r\n                var idnull = charIDToTypeID(\"null\");\r\n                var ref660 = new ActionReference();\r\n                var idChnl = charIDToTypeID(\"Chnl\");\r\n                var idOrdn = charIDToTypeID(\"Ordn\");\r\n                var idTrgt = charIDToTypeID(\"Trgt\");\r\n                ref660.putEnumerated(idChnl, idOrdn, idTrgt);\r\n                desc865.putReference(idnull, ref660);\r\n                executeAction(idDlt, desc865, DialogModes.NO);\r\n\r\n                // =======================================================\r\n                var idMk = charIDToTypeID(\"Mk  \");\r\n                var desc866 = new ActionDescriptor();\r\n                var idNw = charIDToTypeID(\"Nw  \");\r\n                var idChnl = charIDToTypeID(\"Chnl\");\r\n                desc866.putClass(idNw, idChnl);\r\n                var idAt = charIDToTypeID(\"At  \");\r\n                var ref661 = new ActionReference();\r\n                var idChnl = charIDToTypeID(\"Chnl\");\r\n                var idChnl = charIDToTypeID(\"Chnl\");\r\n                var idMsk = charIDToTypeID(\"Msk \");\r\n                ref661.putEnumerated(idChnl, idChnl, idMsk);\r\n                desc866.putReference(idAt, ref661);\r\n                var idUsng = charIDToTypeID(\"Usng\");\r\n                var idUsrM = charIDToTypeID(\"UsrM\");\r\n                var idRvlS = charIDToTypeID(\"RvlS\");\r\n                desc866.putEnumerated(idUsng, idUsrM, idRvlS);\r\n                executeAction(idMk, desc866, DialogModes.NO);\r\n\r\n            } catch (err) {}\r\n            \r\n            var finalSuffix=suffix;\r\n            if (addCount===true)finalSuffix += layerCount;\r\n\r\n\r\n            activeDocument.activeLayer.name = layerName + finalSuffix;\r\n            layerCount++;\r\n            \r\n            \r\n            activeDocument.activeLayer=baseLayer;\r\n        } catch (e) {}\r\n    }\r\n    var idsetd = charIDToTypeID(\"setd\");\r\n    var desc1045 = new ActionDescriptor();\r\n    var idnull = charIDToTypeID(\"null\");\r\n    var ref578 = new ActionReference();\r\n    var idChnl = charIDToTypeID(\"Chnl\");\r\n    var idfsel = charIDToTypeID(\"fsel\");\r\n    ref578.putProperty(idChnl, idfsel);\r\n    desc1045.putReference(idnull, ref578);\r\n    var idT = charIDToTypeID(\"T   \");\r\n    var idOrdn = charIDToTypeID(\"Ordn\");\r\n    var idNone = charIDToTypeID(\"None\");\r\n    desc1045.putEnumerated(idT, idOrdn, idNone);\r\n    executeAction(idsetd, desc1045, DialogModes.NO);\r\n\r\n    // =======================================================\r\n    var idDlt = charIDToTypeID(\"Dlt \");\r\n    var desc694 = new ActionDescriptor();\r\n    var idnull = charIDToTypeID(\"null\");\r\n    var ref323 = new ActionReference();\r\n    var idChnl = charIDToTypeID(\"Chnl\");\r\n    ref323.putName(idChnl, \"ContiguityMask\");\r\n    desc694.putReference(idnull, ref323);\r\n    executeAction(idDlt, desc694, DialogModes.NO);\r\n\r\n    \r\n    activeDocument.activeLayer.remove();\r\n    \r\n\r\n\r\n    var idHd = charIDToTypeID(\"Hd  \");\r\n    var desc736 = new ActionDescriptor();\r\n    var idnull = charIDToTypeID(\"null\");\r\n    var list22 = new ActionList();\r\n    var ref541 = new ActionReference();\r\n    var idLyr = charIDToTypeID(\"Lyr \");\r\n    var idOrdn = charIDToTypeID(\"Ordn\");\r\n    var idTrgt = charIDToTypeID(\"Trgt\");\r\n    ref541.putEnumerated(idLyr, idOrdn, idTrgt);\r\n    list22.putReference(ref541);\r\n    desc736.putList(idnull, list22);\r\n    executeAction(idHd, desc736, DialogModes.NO);\r\n\r\n}\r\n\r\n//   pfaffenbichler and xbytor    //\r\n//        at ps-scripts.com       //\r\n//      created this function     //\r\nfunction collectPathInfoFromDesc(myDocument, thePath) {\r\n    var myDocument = app.activeDocument;\r\n\r\n    // 基于Xbytor的stdlib函数;\r\n    var ref = new ActionReference();\r\n    for (var l = 0; l < myDocument.pathItems.length; l++) {\r\n        var thisPath = myDocument.pathItems[l];\r\n        if (thisPath == thePath && thisPath.name == \"Work Path\") {\r\n            ref.putProperty(cTID(\"Path\"), cTID(\"WrPt\"));\r\n        };\r\n        if (thisPath == thePath && thisPath.name != \"Work Path\" && thisPath.kind != PathKind.VECTORMASK) {\r\n            ref.putIndex(cTID(\"Path\"), l + 1);\r\n        };\r\n        if (thisPath == thePath && thisPath.kind == PathKind.VECTORMASK) {\r\n            var idPath = charIDToTypeID(\"Path\");\r\n            var idPath = charIDToTypeID(\"Path\");\r\n            var idvectorMask = stringIDToTypeID(\"vectorMask\");\r\n            ref.putEnumerated(idPath, idPath, idvectorMask);\r\n        };\r\n    };\r\n    var desc = app.executeActionGet(ref);\r\n    var pname = desc.getString(cTID('PthN'));\r\n    // 创建新数组;\r\n    var theArray = new Array;\r\n    var pathComponents = desc.getObjectValue(cTID(\"PthC\")).getList(sTID('pathComponents'));\r\n    // 对于子路径;\r\n    for (var m = 0; m < pathComponents.count; m++) {\r\n        var listKey = pathComponents.getObjectValue(m).getList(sTID(\"subpathListKey\"));\r\n        // 子路径计数;\r\n        for (var n = 0; n < listKey.count; n++) {\r\n            var points = listKey.getObjectValue(n).getList(sTID('points'));\r\n            // 获得第一点;\r\n            var anchorObj = points.getObjectValue(0).getObjectValue(sTID(\"anchor\"));\r\n            var anchor = [anchorObj.getUnitDoubleValue(sTID('horizontal')), anchorObj.getUnitDoubleValue(sTID('vertical'))];\r\n            var thisPoint = [anchor];\r\n            theArray.push(thisPoint);\r\n        };\r\n    };\r\n    // by xbytor, thanks to him;\r\n\r\n\r\n    function cTID(s) {\r\n        return cTID[s] || cTID[s] = app.charIDToTypeID(s);\r\n    };\r\n\r\n    function sTID(s) {\r\n        return sTID[s] || sTID[s] = app.stringIDToTypeID(s);\r\n    };\r\n    // 重置;\r\n    return theArray;\r\n};\r\n\r\n\r\nfunction makePreviewSelection(){\r\n    makeSelection()    \r\n    app.refresh()\r\n    activeDocument.quickMaskMode = false;\r\n}\r\n\r\nfunction makeSelection(){\r\n    try{\r\n    \r\n        var idsetd = charIDToTypeID(\"setd\");\r\n        var desc922 = new ActionDescriptor();\r\n        var idnull = charIDToTypeID(\"null\");\r\n        var ref529 = new ActionReference();\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idfsel = charIDToTypeID(\"fsel\");\r\n        ref529.putProperty(idChnl, idfsel);\r\n        desc922.putReference(idnull, ref529);\r\n        var idT = charIDToTypeID(\"T   \");\r\n        var ref530 = new ActionReference();\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idTrsp = charIDToTypeID(\"Trsp\");\r\n        ref530.putEnumerated(idChnl, idChnl, idTrsp);\r\n        desc922.putReference(idT, ref530);\r\n        executeAction(idsetd, desc922, DialogModes.NO);\r\n\r\n    } catch (err) {\r\n        return false;\r\n    }\r\n\r\n\r\n    try {\r\n        var idIntr = charIDToTypeID(\"Intr\");\r\n        var desc846 = new ActionDescriptor();\r\n        var idnull = charIDToTypeID(\"null\");\r\n        var ref639 = new ActionReference();\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idMsk = charIDToTypeID(\"Msk \");\r\n        ref639.putEnumerated(idChnl, idChnl, idMsk);\r\n        desc846.putReference(idnull, ref639);\r\n        var idWith = charIDToTypeID(\"With\");\r\n        var ref640 = new ActionReference();\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idfsel = charIDToTypeID(\"fsel\");\r\n        ref640.putProperty(idChnl, idfsel);\r\n        desc846.putReference(idWith, ref640);\r\n        executeAction(idIntr, desc846, DialogModes.NO);\r\n\r\n\r\n    } catch (err) {}\r\n\r\n    try {\r\n        // =======================================================\r\n        var idIntW = charIDToTypeID(\"IntW\");\r\n        var desc787 = new ActionDescriptor();\r\n        var idnull = charIDToTypeID(\"null\");\r\n        var ref572 = new ActionReference();\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idfsel = charIDToTypeID(\"fsel\");\r\n        ref572.putProperty(idChnl, idfsel);\r\n        desc787.putReference(idnull, ref572);\r\n        var idT = charIDToTypeID(\"T   \");\r\n        var ref573 = new ActionReference();\r\n        var idPath = charIDToTypeID(\"Path\");\r\n        var idPath = charIDToTypeID(\"Path\");\r\n        var idvectorMask = stringIDToTypeID(\"vectorMask\");\r\n        ref573.putEnumerated(idPath, idPath, idvectorMask);\r\n        var idLyr = charIDToTypeID(\"Lyr \");\r\n        var idOrdn = charIDToTypeID(\"Ordn\");\r\n        var idTrgt = charIDToTypeID(\"Trgt\");\r\n        ref573.putEnumerated(idLyr, idOrdn, idTrgt);\r\n        desc787.putReference(idT, ref573);\r\n        var idVrsn = charIDToTypeID(\"Vrsn\");\r\n        desc787.putInteger(idVrsn, 1);\r\n        var idvectorMaskParams = stringIDToTypeID(\"vectorMaskParams\");\r\n        desc787.putBoolean(idvectorMaskParams, true);\r\n        executeAction(idIntW, desc787, DialogModes.NO);\r\n    } catch (err) {}\r\n\r\n\r\n\r\n    if (tolerance >= 2) {\r\n\r\n        activeDocument.selection.expand(Math.floor(tolerance / 2))\r\n\r\n    }\r\n\r\n\r\n    activeDocument.quickMaskMode = true;\r\n\r\n\r\n    var idThrs = charIDToTypeID(\"Thrs\");\r\n    var desc479 = new ActionDescriptor();\r\n    var idLvl = charIDToTypeID(\"Lvl \");\r\n    desc479.putInteger(idLvl, 1);\r\n    executeAction(idThrs, desc479, DialogModes.NO);\r\n\r\n\r\n\r\n    if (tolerance % 2 == 1) {\r\n\r\n        var idMtnB = charIDToTypeID(\"MtnB\");\r\n        var desc213 = new ActionDescriptor();\r\n        var idAngl = charIDToTypeID(\"Angl\");\r\n        desc213.putInteger(idAngl, 0);\r\n        var idDstn = charIDToTypeID(\"Dstn\");\r\n        var idPxl = charIDToTypeID(\"#Pxl\");\r\n        desc213.putUnitDouble(idDstn, idPxl, 1.000000);\r\n        executeAction(idMtnB, desc213, DialogModes.NO);\r\n\r\n        // =======================================================\r\n        var idMtnB = charIDToTypeID(\"MtnB\");\r\n        var desc214 = new ActionDescriptor();\r\n        var idAngl = charIDToTypeID(\"Angl\");\r\n        desc214.putInteger(idAngl, 90);\r\n        var idDstn = charIDToTypeID(\"Dstn\");\r\n        var idPxl = charIDToTypeID(\"#Pxl\");\r\n        desc214.putUnitDouble(idDstn, idPxl, 1.000000);\r\n        executeAction(idMtnB, desc214, DialogModes.NO);\r\n\r\n\r\n        // =======================================================\r\n        var idThrs = charIDToTypeID(\"Thrs\");\r\n        var desc215 = new ActionDescriptor();\r\n        var idLvl = charIDToTypeID(\"Lvl \");\r\n        desc215.putInteger(idLvl, 1);\r\n        executeAction(idThrs, desc215, DialogModes.NO);\r\n    }\r\n}   \r\n\r\nfunction createDialog(){\r\n        \r\n    var dlg = new Window('dialog', '图层分离器');\r\n    dlg.alignChildren ='left';\r\n\r\n    dlg.gap = dlg.add('group')\r\n    dlg.gap.orientation= 'row';\r\n    dlg.gap.txt=dlg.gap.add('statictext', undefined,'间隙大于时拆分');\r\n    dlg.gap.input=dlg.gap.add('edittext', undefined,tolerance);\r\n        dlg.gap.input.preferredSize = [20,20];\r\n    dlg.gap.txt2=dlg.gap.add('statictext', undefined,'像素');\r\n    dlg.gap.btnPreview= dlg.gap.add('button', undefined,'预览');\r\n        dlg.gap.btnPreview.preferredSize = [55,20]\r\n    \r\n    dlg.naming = dlg.add('panel',undefined,'图层命名') \r\n    dlg.naming.alignChildren ='left';\r\n        dlg.naming.suffix = dlg.naming.add('group')\r\n        dlg.naming.suffix.orientation= 'row';\r\n        dlg.naming.suffix.txt=dlg.naming.suffix.add('statictext', undefined,'后缀:');\r\n        dlg.naming.suffix.input=dlg.naming.suffix.add('edittext', undefined,suffix);\r\n            dlg.naming.suffix.input.preferredSize = [60,20];\r\n\r\n        dlg.naming.suffix.chkbox = dlg.naming.suffix.add('checkbox', undefined, '添加数字')\r\n            dlg.naming.suffix.chkbox.value=addCount;\r\n        \r\n        dlg.naming.txtPreview = dlg.naming.add('statictext', undefined, layerNamePreview)\r\n            dlg.naming.txtPreview.preferredSize = [200,20];\r\n        \r\n    dlg.btnPnl= dlg.add('group');\r\n    dlg.btnPnl.alignment ='right';\r\n    dlg.btnPnl.okBtn = dlg.btnPnl.add('button', undefined, '确定', {name:'ok'});\r\n        dlg.btnPnl.okBtn.active=true;\r\n    dlg.btnPnl.cancelBtn = dlg.btnPnl.add('button', undefined, '取消', {name:'cancel'});\r\n      \r\n    dlg.naming.suffix.input.onChanging= function(){\r\n        layerNamePreview=activeDocument.activeLayer.name + dlg.naming.suffix.input.text\r\n        if (dlg.naming.suffix.chkbox.value === true){\r\n            layerNamePreview += \"1\"\r\n        }\r\n        dlg.naming.txtPreview.text =layerNamePreview\r\n    }\r\n    dlg.naming.suffix.chkbox.onClick = function(){\r\n        layerNamePreview=activeDocument.activeLayer.name + dlg.naming.suffix.input.text\r\n        if (dlg.naming.suffix.chkbox.value === true){\r\n            layerNamePreview += \"1\"\r\n        }\r\n        dlg.naming.txtPreview.text = layerNamePreview;\r\n    }\r\n\r\n    \r\n        \r\n    \r\n    dlg.gap.input.onChanging = function() {\r\n        if (parseInt(dlg.gap.input.text) == 1){\r\n            dlg.gap.txt2.text = '像素'\r\n        }else{\r\n            dlg.gap.txt2.text = '像素'\r\n        }\r\n        tolerance = parseInt (dlg.gap.input.text)\r\n    }\r\n\r\n    dlg.gap.btnPreview.onClick = function() {\r\n        makePreviewSelection()   \r\n    }\r\n    \r\n    x=dlg.show(); \r\n    \r\n    tolerance = parseInt (dlg.gap.input.text)\r\n    suffix = dlg.naming.suffix.input.text\r\n    addCount=dlg.naming.suffix.chkbox.value\r\n    \r\n    return x;\r\n}\r\n"
                },
                "type": {
                  "VarKey": null,
                  "Value": "CUSTOM"
                },
                "ext": {
                  "VarKey": null,
                  "Value": ".jsx"
                },
                "encoding": {
                  "VarKey": null,
                  "Value": "default"
                },
                "runner": {
                  "VarKey": "选中值",
                  "Value": null
                },
                "argTemplate": {
                  "VarKey": null,
                  "Value": "%FILE%"
                },
                "outputEncoding": {
                  "VarKey": null,
                  "Value": "oem"
                },
                "workingDir": {
                  "VarKey": null,
                  "Value": ""
                },
                "runAsAdmin": {
                  "VarKey": null,
                  "Value": "0"
                },
                "waitToExit": {
                  "VarKey": null,
                  "Value": "0"
                }
              },
              "OutputParams": {
                "stdout": null,
                "stdoutOnly": null,
                "stderr": null
              },
              "IfSteps": null,
              "ElseSteps": null,
              "Note": "",
              "Disabled": false,
              "Collapsed": false,
              "DelayMs": 0
            }
          ],
          "ElseSteps": null,
          "Note": "分离图层",
          "Disabled": false,
          "Collapsed": true,
          "DelayMs": 0
        },
        {
          "StepRunnerKey": "sys:simpleIf",
          "InputParams": {
            "condition": {
              "VarKey": null,
              "Value": "$= {选中值} == 3"
            }
          },
          "OutputParams": {},
          "IfSteps": [
            {
              "StepRunnerKey": "sys:runScript",
              "InputParams": {
                "script": {
                  "VarKey": null,
                  "Value": "\r\n/*\r\n<javascriptresource>\r\n<name>[M] Delete all empty layers faster v1.1</name>\r\n<enableinfo>true</enableinfo>\r\n<category>Magic</category>\r\n</javascriptresource>\r\n*/\r\n\r\n/* \r\n    Version History:\r\n    1.1: (30. 4. 2017)\r\n    - removed JAM \"framework\"\r\n    - big code cleaning\r\n    - better performance. Up to 9× faster than version 1.0\r\n    - keeps selected layers\r\n    - improved compatibility - works with CS6 and higher\r\n    - fixed layers and groups counter\r\n    - progressbar can now show deleting progress\r\n    - fixed - if clipped layers was attached to empty locked layer then visibility was turned off. (script shouldn't remove locked layers)\r\n\r\n    1.0: (19. 5. 2016)\r\n    - Initial release.\r\n    \r\n*/\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// Do not look down here. If you try to understand my code, you will waste a lot of time. \r\n// This code is optimized for performance with low level AM code and no recursion.\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n/*\r\nTROUBLE SHOOTING:\r\n    - deleting layers according layerID may not work properly if they are not sorted by layerIndex\r\n    \r\nTODO:\r\n    -\r\n*/\r\n\r\n#target Photoshop\r\napp.bringToFront();\r\n\r\n//$.level = 1;\r\n\r\nvar psVersion=app.version.split('.')[0];\r\ncTID = function(s) { return cTID[s] || (cTID[s] = charIDToTypeID(s)); };\r\nsTID = function(s) { return stringIDToTypeID(s); }; \r\n\r\n// caching precalculated typeID numbers for saving a bit miliseconds\r\nvar TID = {\r\n    idPrpr: charIDToTypeID( \"Prpr\" ),\r\n    idBounds: stringIDToTypeID( \"bounds\" ),\r\n    idLyr: charIDToTypeID( \"Lyr \" ),\r\n    top: stringIDToTypeID('top'),\r\n    bottom: stringIDToTypeID('bottom'),\r\n    layerLocking: stringIDToTypeID( \"layerLocking\" ),\r\n    protectAll: stringIDToTypeID('protectAll'),\r\n    layerID: stringIDToTypeID( \"layerID\" ),\r\n    group: stringIDToTypeID( \"group\" ),\r\n    layerSection: stringIDToTypeID( \"layerSection\" ),\r\n    textKey: stringIDToTypeID( \"textKey\" ),\r\n    idNull: charIDToTypeID( \"null\" ),\r\n    idDlt: charIDToTypeID( \"Dlt \" )\r\n    \r\n    \r\n}\r\n\r\napp.activeDocument.suspendHistory(\"Delete all empty layers faster\", \"initialize()\");\r\n\r\nfunction initialize(){\r\n    try {\r\n        if(app.documents.length < 1){\r\n            alert(\"You must have a document open.\");\r\n            return;\r\n        }\r\n        main();\r\n        \r\n    } catch(e) {\r\n        alert(\"Deleting layers failed. \"+e);\r\n    \treturn 'cancel';\r\n    }\r\n}\r\n\r\nfunction main() {\r\n    \r\n    var layerCount = getLayersCount();\r\n    \r\n    function getLayersCount(){\r\n        var ref = new ActionReference(); \r\n        ref.putProperty(charIDToTypeID( \"Prpr\" ), stringIDToTypeID(\"numberOfLayers\"));\r\n        ref.putEnumerated( charIDToTypeID(\"Dcmn\"), charIDToTypeID(\"Ordn\"), charIDToTypeID(\"Trgt\") );  \r\n        var desc = executeActionGet(ref); \r\n        var numberOfLayers = desc.getDouble(stringIDToTypeID (\"numberOfLayers\"));\r\n        return numberOfLayers;\r\n    }\r\n    if(layerCount <= 1){\r\n        alert(\"The document must have more layers.\");\r\n        return;\r\n    }\r\n    var deleteList = [];\r\n    var hideList = [];\r\n    var tr = [];\r\n    var maximalDepth=0;\r\n    var regularLayersCount=0;\r\n    var groupLayersCount=0; \r\n    var removeRegularLayersCount=0;\r\n    var removeGroupLayersCount=0;\r\n    \r\n    if(psVersion < 16){\r\n        analyze();\r\n    }else{\r\n        app.doProgress(\"Layers scanning...\",\"analyze()\");\r\n    }\r\n    \r\n    function analyze(){\r\n        for (var layerIndex = layerCount, stepsInside=0; layerIndex > 0; layerIndex--){ // stepsInside = how deep I am in folder structure\r\n            if(psVersion > 16){\r\n                var canContinue = app.doProgressSegmentTask(1,layerCount-layerIndex,layerCount,\"segmentTask()\");\r\n                if(!canContinue) return;\r\n            }else{\r\n                segmentTask();\r\n            }\r\n        \r\n            function segmentTask(){\r\n                var nullHeight = hasNullHeight(layerIndex);\r\n                var locked = isLocked (layerIndex);\r\n                var id = getLayerId(layerIndex);\r\n                var layerType = getLayerType(layerIndex);\r\n                var isClipped = getIsClipped(layerIndex); // isClipped = cliped layer\r\n                var isTextLayerEmpty = hasEmptyTextContent(layerIndex);\r\n                var shouldRemove;\r\n                var depth;\r\n                \r\n                //regular layer\r\n                if(layerType=='item'){\r\n                    regularLayersCount++;\r\n                    depth = stepsInside+1;\r\n                    \r\n                    if((nullHeight || isTextLayerEmpty) && !locked){\r\n                        shouldRemove = true;\r\n                    }else{\r\n                        shouldRemove = false;\r\n                    }\r\n                }\r\n                //group end - closing (invisible) layer\r\n                else if(layerType=='end'){\r\n                    depth = stepsInside;\r\n                    shouldRemove = false;\r\n                    stepsInside--;\r\n                }\r\n                //group start - opening layer\r\n                else if(layerType=='start'){\r\n                   stepsInside++;\r\n                   groupLayersCount++;\r\n                   depth = stepsInside;\r\n                   shouldRemove = true;\r\n                }\r\n            \r\n                if(depth>maximalDepth){\r\n                    maximalDepth = depth;\r\n                }\r\n            \r\n                var layerInfo = {\r\n                    depth: depth,\r\n                    layerType: layerType,\r\n                    itemIndex: layerIndex,\r\n                    itemID: id,\r\n                    remove: shouldRemove,\r\n                    locked: locked,\r\n                    isClipped: isClipped\r\n                }\r\n            \r\n                tr.push (layerInfo);\r\n            }\r\n        }\r\n    }\r\n    \r\n    treatLockedLayers();\r\n    addItemsToDeleteList();\r\n    \r\n    if (deleteList && deleteList.length) { // if there is something to delete\r\n        \r\n        // if layer which we want delete has cliping mask, then we hide clipping mask layers\r\n        if (hideList && hideList.length) {\r\n            hideMulti(hideList);\r\n        }\r\n        \r\n        deleteMulti(deleteList);\r\n        var bgCount = hasBackground ();\r\n        alert(\r\n            \"已移除 \"+removeRegularLayersCount+\" 个图层和 \"+removeGroupLayersCount+\" 个组.\\n\"+\r\n            \"现在的内容包含 \"+(regularLayersCount-removeRegularLayersCount+bgCount)+\" 个图层和 \"+(groupLayersCount-removeGroupLayersCount)+\" 个组.\\n\"+\r\n            \"(画板作为组)\"\r\n        );\r\n    }\r\n    else{\r\n        alert(\"没有可删除的空图层.\");\r\n    }\r\n    \r\n    \r\n    function treatLockedLayers(){\r\n        var max = maximalDepth;\r\n        var len = tr.length;\r\n        \r\n        for(var j = 1; j < max;max--){ // j = 1 protože úroven nula bude mít nastavené mazání z podmínek uvnitř cyklu a itemy mě nezajímají\r\n            for(var i = 0; i < len;i++){\r\n                var lyr = tr[i];\r\n                \r\n                if(lyr.depth === max){\r\n                    var parent = getParent(i);\r\n                    \r\n                    if (lyr.layerType==\"item\" && !lyr.remove){ // don't remove classic layer\r\n                        tr[parent].remove = false;\r\n                    }\r\n                    if(lyr.locked && lyr.layerType == \"start\"){ // locked parent group\r\n                        tr[parent].remove = false;\r\n                    }\r\n                    if(!lyr.remove && lyr.layerType == \"start\"){ // don't remove parent folder if children folder shouldn't be deleted\r\n                        tr[parent].remove = false;\r\n                    }\r\n                }\r\n            }  \r\n        }\r\n    \r\n        for(var j = 0; j < len; j++){ // browse once all layers and if parrent group is locked then it excludes all child from delete list\r\n            if (tr[j].locked && tr[j].layerType==\"start\"){\r\n                var initialDepthLevel = tr[j].depth;\r\n                j++;\r\n                while(initialDepthLevel < tr[j].depth){\r\n                    tr[j].remove = false;\r\n                    j++;\r\n                }\r\n            }\r\n        }\r\n    \r\n        for(var j = 0; j < len; j++){ // don't mess up cliping mask layers\r\n            var lyr = tr[j];\r\n            if (lyr.isClipped){\r\n                var tempList=[];\r\n                while(tr[j].isClipped){\r\n                    tempList.push(tr[j].itemIndex);           \r\n                    j++;\r\n                }\r\n                if(tr[j].remove && !tr[j].locked){\r\n                    hideList = hideList.concat(tempList);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function addItemsToDeleteList(){\r\n        for (var j = 0, len = tr.length;j<len;j++){\r\n            var lyr = tr[j];\r\n            if(lyr.remove && !lyr.locked){\r\n                deleteList.push(lyr.itemID);\r\n                \r\n                if(lyr.layerType==\"start\"){\r\n                    removeGroupLayersCount++;\r\n                }else{\r\n                    removeRegularLayersCount++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function getParent(p){ //pomocná funkce, která najde děcku rodiče\r\n        for (var i = p-1; i > 0; i--){\r\n            if(tr[i].depth==tr[p].depth-1){\r\n                return i;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction hasNullHeight(index){\r\n    var ref = new ActionReference();\r\n    ref.putProperty( TID.idPrpr, TID.idBounds );\r\n    ref.putIndex( TID.idLyr, index );\r\n    var desc = executeActionGet(ref);\r\n    var bounds = desc.getObjectValue(TID.idBounds);\r\n    var top = bounds.getDouble(TID.top);\r\n    var bottom = bounds.getDouble(TID.bottom);\r\n    \r\n    var nullHeight = top===bottom;\r\n    return nullHeight;\r\n}\r\n\r\nfunction isLocked(index){\r\n    var ref = new ActionReference();\r\n    ref.putProperty( TID.idPrpr, TID.layerLocking );\r\n    ref.putIndex( TID.idLyr, index );\r\n    var desc = executeActionGet(ref);\r\n    var descLocking = desc.getObjectValue(TID.layerLocking);\r\n    var locked = descLocking.getBoolean(TID.protectAll);\r\n    \r\n    return locked;\r\n}\r\n\r\nfunction getLayerId(index){\r\n    var ref = new ActionReference();\r\n    ref.putProperty( TID.idPrpr, TID.layerID );\r\n    ref.putIndex( TID.idLyr, index );\r\n    var desc = executeActionGet(ref);\r\n    var id = desc.getInteger(TID.layerID);\r\n    \r\n    return id;\r\n}\r\n\r\nfunction getIsClipped(index){\r\n    var ref = new ActionReference();\r\n    ref.putProperty( TID.idPrpr, TID.group );\r\n    ref.putIndex( TID.idLyr, index );\r\n    var desc = executeActionGet(ref);\r\n    var group = desc.getBoolean(TID.group);\r\n    \r\n    return group;\r\n}\r\n\r\nfunction getLayerType(index){\r\n    var ref = new ActionReference();\r\n    ref.putProperty( TID.idPrpr, TID.layerSection );\r\n    ref.putIndex( TID.idLyr, index );\r\n    var desc = executeActionGet(ref);\r\n    var type = desc.getEnumerationValue(TID.layerSection);\r\n    type = typeIDToStringID(type);\r\n    \r\n    switch(type){\r\n        case 'layerSectionEnd':\r\n            return 'end';\r\n        case 'layerSectionStart':\r\n            return 'start';\r\n        case 'layerSectionContent':\r\n            return 'item';\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\n\r\nfunction hasEmptyTextContent(index){\r\n var ref = new ActionReference();\r\n    ref.putProperty( TID.idPrpr, TID.textKey );\r\n    ref.putIndex( TID.idLyr, index );\r\n    var textKey = executeActionGet(ref);\r\n    \r\n    var isTextLayer = textKey.hasKey(TID.textKey);\r\n    if(!isTextLayer){\r\n        return false;\r\n    }\r\n    var textKey = textKey.getObjectValue(TID.textKey);\r\n    var contentString = textKey.getString(TID.textKey);\r\n    var result = contentString === \"\";\r\n    return result;   \r\n}\r\n\r\n\r\nfunction hideMulti(list){ \r\n    var idHd = charIDToTypeID( \"Hd  \" );\r\n        var desc19 = new ActionDescriptor();\r\n            var list9 = new ActionList();\r\n            for(var i = 0, len = list.length; i < len; i++){\r\n                var ref = new ActionReference();\r\n                ref.putIndex( TID.idLyr, list[i] );\r\n                list9.putReference( ref );\r\n            }\r\n        desc19.putList( TID.idNull, list9 );\r\n    executeAction( idHd, desc19, DialogModes.NO );\r\n}\r\n\r\n\r\nfunction deleteMulti (list){\r\n    function progressTask(){\r\n        for(var i = list.length-1, len = i; i >= 0; i--){\r\n            if(psVersion > 16){\r\n                if(i%5===0){ // fast updating takes time. Update text for every five layer\r\n                    app.changeProgressText(\"I am removing layers. Removed: \"+(len-i)+\" layers from \"+len+\"\");\r\n                }\r\n                var canContinue = app.doProgressSubTask(len-i,len,\"segmentTask(\"+list[i]+\")\");\r\n                if(!canContinue) return;\r\n            }else{\r\n                segmentTask(list[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    function segmentTask(id){\r\n        var desc13 = new ActionDescriptor();\r\n        var layerRef = new ActionReference();\r\n        layerRef.putIdentifier( TID.idLyr, id );\r\n        desc13.putReference( TID.idNull, layerRef );\r\n        executeAction( TID.idDlt, desc13, DialogModes.NO );\r\n    }\r\n\r\n    if(psVersion > 16){\r\n        app.doProgress(\"I am removing layers, give me a moment please.\",\"progressTask()\");\r\n    }else{\r\n        progressTask();\r\n    }\r\n}\r\n\r\nfunction hasBackground(){\r\n    try {\r\n        var dummy = app.activeDocument.backgroundLayer;\r\n        return 1;\r\n    }\r\n    catch(e){\r\n        return 0;\r\n    } \r\n}"
                },
                "type": {
                  "VarKey": null,
                  "Value": "CUSTOM"
                },
                "ext": {
                  "VarKey": null,
                  "Value": ".jsx"
                },
                "encoding": {
                  "VarKey": null,
                  "Value": "default"
                },
                "runner": {
                  "VarKey": "选中值",
                  "Value": null
                },
                "argTemplate": {
                  "VarKey": null,
                  "Value": "%FILE%"
                },
                "outputEncoding": {
                  "VarKey": null,
                  "Value": "oem"
                },
                "workingDir": {
                  "VarKey": null,
                  "Value": ""
                },
                "runAsAdmin": {
                  "VarKey": null,
                  "Value": "0"
                },
                "waitToExit": {
                  "VarKey": null,
                  "Value": "0"
                }
              },
              "OutputParams": {
                "stdout": null,
                "stdoutOnly": null,
                "stderr": null
              },
              "IfSteps": null,
              "ElseSteps": null,
              "Note": "",
              "Disabled": false,
              "Collapsed": false,
              "DelayMs": 0
            }
          ],
          "ElseSteps": null,
          "Note": "删除空图层",
          "Disabled": false,
          "Collapsed": true,
          "DelayMs": 0
        },
        {
          "StepRunnerKey": "sys:simpleIf",
          "InputParams": {
            "condition": {
              "VarKey": null,
              "Value": "$= {选中值} == 4"
            }
          },
          "OutputParams": {},
          "IfSteps": [
            {
              "StepRunnerKey": "sys:runScript",
              "InputParams": {
                "script": {
                  "VarKey": null,
                  "Value": "var cnt = 0;\r\n\r\ntry { if (app.documents.length) { app.activeDocument.suspendHistory(\"Del hidden\", \"process_doc(app.activeDocument)\"); } } catch(e) { alert(e); }\r\n\r\napp.refresh();\r\n\r\nalert(cnt + \" 个隐藏图层被移除\", \"\");\r\n\r\nfunction process_doc(doc, close)\r\n\r\n    {   \r\n\r\n    try {\r\n\r\n        app.activeDocument = doc;\r\n\r\n        var doc_len = app.documents.length;\r\n\r\n        var i0 = get_layer_count();\r\n\r\n        try { \r\n\r\n            var d = new ActionDescriptor();\r\n\r\n            var r = new ActionReference();\r\n\r\n            r.putEnumerated(stringIDToTypeID(\"layer\"), stringIDToTypeID(\"ordinal\"), stringIDToTypeID(\"hidden\"));\r\n\r\n            d.putReference(stringIDToTypeID(\"null\"), r);\r\n\r\n            executeAction(stringIDToTypeID(\"delete\"), d, DialogModes.NO);\r\n\r\n            } \r\n\r\n        catch (e) { } \r\n\r\n        var i = get_layer_count();\r\n\r\n        cnt += i0-i;\r\n\r\n        var ok = true;  \r\n\r\n        while (ok && i >= 1 && process_layer(i)) { --i; }\r\n\r\n        if (ok && close) doc.close(SaveOptions.SAVECHANGES);\r\n\r\n        return ok;\r\n\r\n        function get_layer_count()\r\n\r\n            {\r\n\r\n            try\r\n\r\n                {\r\n\r\n                var r = new ActionReference();\r\n\r\n                r.putEnumerated(stringIDToTypeID(\"layer\"), stringIDToTypeID(\"ordinal\"), stringIDToTypeID(\"targetEnum\"));\r\n\r\n                var n = executeActionGet(r).getInteger(stringIDToTypeID(\"count\"));\r\n\r\n                try { app.activeDocument.backgroundLayer; } catch(e) { return n; }\r\n\r\n                return n-1;\r\n\r\n                }\r\n\r\n            catch (e) { alert(e); ok = false; return 0; }\r\n\r\n            }\r\n\r\n        function process_layer(n)\r\n\r\n            {   \r\n\r\n            try {\r\n\r\n                var r = new ActionReference();\r\n\r\n                r.putIndex(stringIDToTypeID(\"layer\"), n);\r\n\r\n                var d = executeActionGet(r);\r\n\r\n                if (!d.hasKey(stringIDToTypeID(\"smartObject\"))) return true;\r\n\r\n                var id = d.getInteger(stringIDToTypeID(\"layerID\")); \r\n\r\n                var r = new ActionReference();\r\n\r\n                r.putIdentifier(stringIDToTypeID(\"layer\"), id);\r\n\r\n                var d = new ActionDescriptor();\r\n\r\n                d.putReference(stringIDToTypeID(\"null\"), r);\r\n\r\n                executeAction(stringIDToTypeID(\"select\"), d, DialogModes.NO); \r\n\r\n                executeAction(stringIDToTypeID(\"placedLayerEditContents\"), undefined, DialogModes.ERROR);\r\n\r\n                if (doc_len == app.documents.length) { alert(\"SmartObject edit error!\"); ok = false; return false; }\r\n\r\n                ok = process_doc(app.activeDocument, true);\r\n\r\n                app.activeDocument = doc;\r\n\r\n        \r\n\r\n                return ok;\r\n\r\n                }\r\n\r\n            catch (e) { alert(e); ok = false; return false; }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    catch (e) { alert(e); return false; }\r\n\r\n    }"
                },
                "type": {
                  "VarKey": null,
                  "Value": "CUSTOM"
                },
                "ext": {
                  "VarKey": null,
                  "Value": ".jsx"
                },
                "encoding": {
                  "VarKey": null,
                  "Value": "default"
                },
                "runner": {
                  "VarKey": "选中值",
                  "Value": null
                },
                "argTemplate": {
                  "VarKey": null,
                  "Value": "%FILE%"
                },
                "outputEncoding": {
                  "VarKey": null,
                  "Value": "oem"
                },
                "workingDir": {
                  "VarKey": null,
                  "Value": ""
                },
                "runAsAdmin": {
                  "VarKey": null,
                  "Value": "0"
                },
                "waitToExit": {
                  "VarKey": null,
                  "Value": "0"
                }
              },
              "OutputParams": {
                "stdout": null,
                "stdoutOnly": null,
                "stderr": null
              },
              "IfSteps": null,
              "ElseSteps": null,
              "Note": "",
              "Disabled": false,
              "Collapsed": false,
              "DelayMs": 0
            }
          ],
          "ElseSteps": null,
          "Note": "删除隐藏图层",
          "Disabled": false,
          "Collapsed": true,
          "DelayMs": 0
        },
        {
          "StepRunnerKey": "sys:simpleIf",
          "InputParams": {
            "condition": {
              "VarKey": null,
              "Value": "$= {选中值} == 5"
            }
          },
          "OutputParams": {},
          "IfSteps": [
            {
              "StepRunnerKey": "sys:runScript",
              "InputParams": {
                "script": {
                  "VarKey": null,
                  "Value": "var settings = {\r\n\t\tdeleteOriginalObject: true, // Smart object is hidden if false. \r\n\t\tscaleAllLayerEffects: true, // Only if smart object has another size than its content. Size must be proportional.\r\n\t\tresizeContent: true, // Scale extracted content. Only widht and height.\r\n\t\tpreserveSmartObjectProperties: true, // Creates group from content if true. Group will have vector mask, style, blending of smart object. Bitmap mask hides overleaping pixels.\r\n\t\tclearSmartObjectContent: true, // Delete hidden layers inside smart object\r\n\t\thidePixelsOutsideSoCanvas: true, // Option not fix pixels outside smart object canvas. Creates always bitmap mask on group. \"preserveSmartObjectProperties\" must be set to true\r\n\t\tdontGroupSOContent: false,\r\n\t\tstyleScaleSettings:{\r\n\t\t\tscaleStyle: true,\r\n\t\t\tscaleShapeStrokeWidth: true,\r\n\t\t\tscaleShapePatternFill: true,\r\n\t\t\tscaleShapeGradientFill: true, //only if gradient is not aligned with layer\r\n\t\t\tscaleShapeStrokeGradient: true, //only if gradient is not aligned with layer\r\n\t\t\tscaleShapeStrokePattern: true\r\n\t\t}\r\n\t}\r\n\r\n\r\n#target Photoshop\r\n\r\n\tCH = function(c) { return CH [c] || (CH [c] = charIDToTypeID(c)); };\r\n\tST = function(s) { return ST [s] || (ST [s] = stringIDToTypeID(s)); }; \r\n\tIDtoCH = function(id) {return typeIDToCharID(id);};\r\n\tIDtoST = function(id) {return typeIDToStringID(id);};\r\n\tCHtoST = function(c) {return IDtoST(CH(c));};\r\n\tSTtoCH = function(s) {return IDtoCH(ST(s));};\r\n\r\n\tfunction LxActionDescriptor(desc){\r\n\t\tthis.version = 1;\r\n\t\t\r\n\t\tif(desc){\r\n\t\t\tthis._desc = desc\r\n\t\t}else{\r\n\t\t\tthis._desc = new ActionDescriptor();\r\n\t\t}\r\n\r\n\t\t//check if I will need to update properties\r\n\t\tthis.count = this._desc.count;\r\n\t\tthis.typename = this._desc.typename;\r\n\t\tthis.clear = function (){this._desc.clear()};\r\n\t\tthis.erase = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tthis._desc.erase(key);\r\n\t\t};\r\n\t\tthis.fromStream = function (value){this._desc.fromStream(value)};\r\n\t\t\r\n\t\t// get data\r\n\t\tthis.getBoolean = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getBoolean(key);\r\n\t\t};\r\n\t\tthis.getClass = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getClass(key);\r\n\t\t};\r\n\t\tthis.getData = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getData(key);\r\n\t\t};\r\n\t\tthis.getDouble = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getDouble(key);\r\n\t\t};\r\n\t\tthis.getEnumerationType = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getEnumerationType(key);\r\n\t\t};\r\n\t\tthis.getEnumerationValue = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getEnumerationValue(key);\r\n\t\t};\r\n\t\tthis.getInteger = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getInteger(key);\r\n\t\t};\r\n\t\tthis.getLargeInteger = function (key){\r\n\t\t\treturn this._desc.getLargeInteger(key);\r\n\t\t};\r\n\t\tthis.getList = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tvar result = new LxActionList(this._desc.getList(key));\r\n\t\t\treturn result;\r\n\t\t};\r\n\t\tthis.getObjectType = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getObjectType(key);\r\n\t\t};\r\n\t\tthis.getObjectValue = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getObjectValue(key);\r\n\t\t};\r\n\t\tthis.getPath = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getPath(key);\r\n\t\t};\r\n\t\tthis.getReference = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getReference(key);\r\n\t\t};\r\n\t\tthis.getString = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getString(key);\r\n\t\t};\r\n\t\tthis.getType = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getType(key);\r\n\t\t};\r\n\t\tthis.getUnitDoubleType = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getUnitDoubleType(key);\r\n\t\t};\r\n\t\tthis.getUnitDoubleValue = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getUnitDoubleValue(key);\r\n\t\t};\r\n\t\t// end of get data\r\n\r\n\t\tthis.hasKey = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.hasKey(key);\r\n\t\t};\r\n\t\tthis.isEqual = function (desc){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.isEqual(desc);\r\n\t\t};\r\n\r\n\t\t//// put data\r\n\t\tthis.putBoolean = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tthis._desc.putBoolean(key, value);\r\n\t\t};\r\n\t   this.putClass = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tvalue = lexicon.resolveId(key);\r\n\t\t\tthis._desc.putClass(key, value);\r\n\t\t};\r\n\t\tthis.putData = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tthis._desc.putData(key, value);\r\n\t\t};\r\n\t\tthis.putDouble = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tthis._desc.putDouble(key, value);\r\n\t\t};\r\n\t\tthis.putEnumerated = function (key, enumType ,value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tenumType = lexicon.resolveId(enumType);\r\n\t\t\tvalue = lexicon.resolveId(value);\r\n\t\t\tthis._desc.putEnumerated(key,enumType,value);\r\n\t\t};\r\n\t\tthis.putInteger = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tthis._desc.putInteger(key, value);\r\n\t\t};\r\n\t\tthis.putLargeInteger = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tthis._desc.putLargeInteger(key, value);\r\n\t\t};\r\n\t\tthis.putList = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tthis._desc.putList(key, value);\r\n\t\t};\r\n\t\tthis.putObject = function (key, classID , value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tclassID = lexicon.resolveId(classID);\r\n\t\t\tif(value._desc){\r\n\t\t\t\tvalue = value._desc;\r\n\t\t\t}\r\n\t\t\tthis._desc.putObject(key, classID, value);\r\n\t\t};\r\n\t\tthis.putPath = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tthis._desc.putPath(key, value);\r\n\t\t};\r\n\t\tthis.putReference = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tif(value._ref){\r\n\t\t\t   value = value._ref; \r\n\t\t\t}\r\n\t\t\tthis._desc.putReference(key, value);\r\n\t\t};\r\n\t\tthis.putString = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tthis._desc.putString(key, value);\r\n\t\t};\r\n\t\tthis.putUnitDouble = function (key, unitID, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tunitID = lexicon.resolveId(unitID);\r\n\t\t\tthis._desc.putUnitDouble(key, unitID, value);\r\n\t\t};\r\n\r\n\t\t// end of put data\r\n\t\tthis.toStream = function (){\r\n\t\t\treturn this._desc.toStream();\r\n\t\t}; \r\n\r\n\t\t// custom functions\r\n\t\tthis.getValue = function(key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tvar type = this._desc.getType( key ).toString();\r\n\t\t\treturn lexicon._getValue(this._desc, type, key);\r\n\t\t};\r\n\t\r\n\t\tthis.toJSONString = function(){\r\n\t\t\treturn lexicon.descriptorToJSON(this._desc);\r\n\t\t}\r\n\t\r\n\t\tthis.toJSObject = function(){\r\n\t\t\treturn eval(\"(\"+this.toJSONString()+\")\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tfunction LxActionList(list){\r\n\t\tthis.version = 1;\r\n\t\t\r\n\t\tif(list){\r\n\t\t\tthis._list = list\r\n\t\t}else{\r\n\t\t\tthis._list = new ActionDescriptor();\r\n\t\t}\r\n\r\n\t\t//check if I will need to update properties\r\n\t\tthis.count = this._list.count;\r\n\t\tthis.typename = this._list.typename;\r\n\t\tthis.clear = function (){this._list.clear()};\r\n\t   \r\n\t\t\r\n\t\t\r\n\t\t// get data\r\n\t\tthis.getBoolean = function (position){\r\n\t\t\treturn this._list.getBoolean(position);\r\n\t\t};\r\n\t\tthis.getClass = function (position){\r\n\t\t\treturn this._list.getClass(position);\r\n\t\t};\r\n\t\tthis.getData = function (position){\r\n\t\t\treturn this._list.getData(position);\r\n\t\t};\r\n\t\tthis.getDouble = function (position){\r\n\t\t\treturn this._list.getDouble(position);\r\n\t\t};\r\n\t\tthis.getEnumerationType = function (position){\r\n\t\t\treturn this._list.getEnumerationType(position);\r\n\t\t};\r\n\t\tthis.getEnumerationValue = function (position){\r\n\t\t\treturn this._list.getEnumerationValue(position);\r\n\t\t};\r\n\t\tthis.getInteger = function (position){\r\n\t\t\treturn this._list.getInteger(position);\r\n\t\t};\r\n\t\tthis.getLargeInteger = function (position){\r\n\t\t\treturn this._list.getLargeInteger(position);\r\n\t\t};\r\n\t\tthis.getList = function (position){\r\n\t\t\tvar result = new LxActionList(this._list.getList(position));\r\n\t\t\treturn result;\r\n\t\t};\r\n\t\tthis.getObjectType = function (position){\r\n\t\t\treturn this._list.getObjectType(position);\r\n\t\t};\r\n\t\tthis.getObjectValue = function (position){\r\n\t\t\tvar result = new LxActionDescriptor(this._list.getObjectValue(position));\r\n\t\t\treturn result;\r\n\t\t};\r\n\t\tthis.getPath = function (position){\r\n\t\t\treturn this._list.getPath(position);\r\n\t\t};\r\n\t\tthis.getReference = function (position){\r\n\t\t\tvar result = new LxActionReference(this._list.getReference(position));\r\n\t\t\treturn result;\r\n\t\t};\r\n\t\tthis.getString = function (position){\r\n\t\t\treturn this._list.getString(position);\r\n\t\t};\r\n\t\tthis.getType = function (position){\r\n\t\t\treturn this._list.getType(position);\r\n\t\t};\r\n\t\tthis.getUnitDoubleType = function (position){\r\n\t\t\treturn this._list.getUnitDoubleType(position);\r\n\t\t};\r\n\t\tthis.getUnitDoubleValue = function (position){\r\n\t\t\treturn this._list.getUnitDoubleValue(position);\r\n\t\t};\r\n\t\t// end of get data\r\n\r\n\t\t//// put data\r\n\t\tthis.putBoolean = function (value){\r\n\t\t\tthis._list.putBoolean(value);\r\n\t\t};\r\n\t\tthis.putClass = function (value){\r\n\t\t\tvalue = lexicon.resolveId(position);\r\n\t\t\tthis._list.putClass(value);\r\n\t\t};\r\n\t\tthis.putData = function (value){\r\n\t\t\tthis._list.putData(value);\r\n\t\t};\r\n\t\tthis.putDouble = function (value){\r\n\t\t\tthis._list.putDouble(value);\r\n\t\t};\r\n\t\tthis.putEnumerated = function (enumType ,value){\r\n\t\t\tenumType = lexicon.resolveId(enumType);\r\n\t\t\tvalue = lexicon.resolveId(value);\r\n\t\t\tthis._list.putEnumerated(enumType,value);\r\n\t\t};\r\n\t\tthis.putInteger = function (value){\r\n\t\t\tthis._list.putInteger(value);\r\n\t\t};\r\n\t\tthis.putLargeInteger = function (value){\r\n\t\t\tthis._list.putLargeInteger(value);\r\n\t\t};\r\n\t\tthis.putList = function (value){\r\n\t\t\tif(value._list){\r\n\t\t\t\tvalue = value._list;\r\n\t\t\t}\r\n\t\t\tthis._list.putList(value);\r\n\t\t};\r\n\t\tthis.putObject = function (classID , value){\r\n\t\t\tif(value._desc){\r\n\t\t\t\tvalue = value._desc;\r\n\t\t\t}\r\n\t\t\tclassID = lexicon.resolveId(classID);\r\n\t\t\tthis._list.putObject(classID, value._desc);\r\n\t\t};\r\n\t\tthis.putPath = function (value){\r\n\t\t\tthis._list.putPath(value);\r\n\t\t};\r\n\t\tthis.putReference = function (value){\r\n\t\t\tif(value._ref){\r\n\t\t\t   value = value._ref; \r\n\t\t\t}\r\n\t\t\tthis._list.putReference(value);\r\n\t\t};\r\n\t\tthis.putString = function (value){\r\n\t\t\tthis._list.putString(value);\r\n\t\t};\r\n\t\tthis.putUnitDouble = function (unitID, value){\r\n\t\t\tunitID = lexicon.resolveId(unitID);\r\n\t\t\tthis._list.putUnitDouble(unitID, value);\r\n\t\t};\r\n\r\n\t\t// custom functions\r\n\t\tthis.getValue = function(position){\r\n\t\t\tvar type = this._list.getType( position ).toString();\r\n\t\t\tlexicon._getValue(this._list, type, position);\r\n\t\t};\r\n\r\n\t\tthis.forEach = function(itemFunction){\r\n\t\t\tfor(var i = 0, len = this._list.count; i < len; i++){\r\n\t\t\t\titemFunction(i);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction LxActionReference(ref){\r\n\t\tthis.version = 1;\r\n\t\t\r\n\t\tif(ref){\r\n\t\t\tthis._ref = ref\r\n\t\t}else{\r\n\t\t\tthis._ref = new ActionReference();\r\n\t\t}\r\n\r\n\t\tthis.typename = this._ref.typename;\r\n\t\tthis.getContainer = function(){return this._ref.getContainer()}\r\n\t\tthis.getDesiredClass = function(){return this._ref.getDesiredClass()}\r\n\t\tthis.getEnumeratedType = function(){return this._ref.getEnumeratedType()}\r\n\t\tthis.getEnumeratedValue = function(){return this._ref.getEnumeratedValue()}\r\n\t\tthis.getForm = function(){return this._ref.getForm()}\r\n\t\tthis.getIdentifier = function(){return this._ref.getIdentifier()}\r\n\t\tthis.getIndex = function(){return this._ref.getIndex()}\r\n\t\tthis.getName = function(){return this._ref.getName()}\r\n\t\tthis.getOffset = function(){return this._ref.getOffset()}\r\n\t\tthis.getProperty = function(){return this._ref.getProperty()} //typeID\r\n\t\t\r\n\t\tthis.putClass = function(classId){\r\n\t\t\tclassId = lexicon.resolveId(classId);\r\n\t\t\tthis._ref.putClass(classId)\r\n\t\t}\r\n\t\tthis.putEnumerated = function(classId, enumType, value){\r\n\t\t\tclassId = lexicon.resolveId(classId);\r\n\t\t\tenumType = lexicon.resolveId(enumType);\r\n\t\t\tvalue = lexicon.resolveId(value);\r\n\t\t\tthis._ref.putEnumerated(classId, enumType, value)\r\n\t\t}\r\n\t\tthis.putIdentifier = function(classId, value){\r\n\t\t\tclassId = lexicon.resolveId(classId);\r\n\t\t\tthis._ref.putIdentifier(classId, value)\r\n\t\t}\r\n\t\tthis.putIndex = function(classId, value){\r\n\t\t\tclassId = lexicon.resolveId(classId);\r\n\t\t\tthis._ref.putIndex(classId, value)\r\n\t\t}\r\n\t\tthis.putName = function(classId, value){\r\n\t\t\tclassId = lexicon.resolveId(classId);\r\n\t\t\tthis._ref.putName(classId, value)\r\n\t\t}\r\n\t\tthis.putOffset = function(classId, value){\r\n\t\t\tclassId = lexicon.resolveId(classId);\r\n\t\t\tthis._ref.putOffset(classId, value)\r\n\t\t}\r\n\t\tthis.putProperty = function(classId, value){\r\n\t\t\tclassId = lexicon.resolveId(classId);\r\n\t\t\tvalue = lexicon.resolveId(value);\r\n\t\t\tthis._ref.putProperty(classId, value)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tLexicon.prototype._getValue = function( theDesc, descType, position ) {\r\n\t\tswitch( descType ) {\r\n\t\t\tcase 'DescValueType.BOOLEANTYPE':  \r\n\t\t\t\treturn theDesc.getBoolean( position );  \r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.CLASSTYPE':  \r\n\t\t\t\treturn theDesc.getClass( position );  \r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.DOUBLETYPE':  \r\n\t\t\t\treturn theDesc.getDouble( position );  \r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.ENUMERATEDTYPE':  \r\n\t\t\t\treturn typeIDToStringID(theDesc.getEnumerationValue( position ));  \r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.INTEGERTYPE':  \r\n\t\t\t\treturn theDesc.getInteger( position );  \r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.LISTTYPE':  \r\n\t\t\t\t var result = new LxActionList(theDesc.getList( position ));\r\n\t\t\t\treturn result;  \r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.OBJECTTYPE':\r\n\t\t\t\t var result = new LxActionDescriptor (theDesc.getObjectValue( position ));\r\n\t\t\t\treturn result;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.REFERENCETYPE':\r\n\t\t\t\t var result = new LxActionReference (theDesc.getReference( position ));\r\n\t\t\t\treturn result;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.STRINGTYPE':\r\n\t\t\t\tvar str = '';\r\n\t\t\t\treturn str + theDesc.getString( position );  \r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.UNITDOUBLE':  \r\n\t\t\t\treturn theDesc.getUnitDoubleValue( position );  \r\n\t\t\t\tbreak;        \r\n\r\n\t\t\tcase 'DescValueType.ALIASTYPE':  \r\n\t\t\t\treturn decodeURI(theDesc.getPath( position ));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.RAWTYPE':  \r\n\t\t\t\treturn theDesc.getData( position ).substring( 0, this.descParams.maxRawLimit );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ReferenceFormType.CLASSTYPE':\r\n\t\t\t\treturn theDesc.getDesiredClass();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ReferenceFormType.ENUMERATED':\r\n\t\t\t\tvar enumeratedID = theDesc.getEnumeratedValue();\r\n\t\t\t\treturn this._getBestName( enumeratedID );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ReferenceFormType.IDENTIFIER':\r\n\t\t\t\treturn theDesc.getIdentifier();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ReferenceFormType.INDEX':\r\n\t\t\t\treturn theDesc.getIndex();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ReferenceFormType.NAME':\r\n\t\t\t\tvar str = '';\r\n\t\t\t\treturn str + theDesc.getName();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ReferenceFormType.OFFSET':\r\n\t\t\t\treturn theDesc.getOffset();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ReferenceFormType.PROPERTY':\r\n\t\t\t\tvar propertyID = theDesc.getProperty();\r\n\t\t\t\treturn this._getBestName( propertyID );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;  \r\n\t\t};\r\n\t};\r\n\r\n\tLxActionReference.prototype.toString = function (){\r\n\t\treturn '[LxActionReference]';\r\n\t}\r\n\r\n\tLxActionList.prototype.toString = function (){\r\n\t\treturn '[LxActionList]';\r\n\t}\r\n\r\n\tLxActionDescriptor.prototype.toString = function (){\r\n\t\treturn '[LxActionDescriptor]';\r\n\t}\r\n\r\n\tLxActionDescriptor.prototype.valueOf = function (){\r\n\t\treturn this._desc;\r\n\t}\r\n\r\n\r\n\r\n\tfunction Lexicon() {\r\n\t\tthis.version = 1;\r\n\t\tthis.settings = {\r\n\t\t\tdebugMode : false\r\n\t\t}\r\n\t};\r\n\r\n\tfunction LayerContext(pointer, type){\r\n\t\tvar _descLocking, _backgroundCounter, _documentLayersCount;\r\n\t\t\r\n\t\t// init\r\n\t\t\r\n\t\tthis.init = function(){\r\n\t\t\t_descLocking = new LxActionDescriptor( lexicon.getLayerDescriptor (pointer, type, \"layerLocking\").getObjectValue('layerLocking'));\r\n\t\t\t_backgroundCounter = lexicon.existsBackgroundLayer() ? -1 : 0;\r\n\t\t\t_documentLayersCount = lexicon.getDocumentLayersCount();\r\n\t\t\t\r\n\t\t\tthis.layerID = lexicon.getLayerDescriptor (pointer, type, \"layerID\").getInteger(\"layerID\");\r\n\t\t\tthis.itemIndex = lexicon.getLayerDescriptor (pointer, type, \"itemIndex\").getInteger(\"itemIndex\") + _backgroundCounter;\r\n\t\t\tthis.layerLocking = {\r\n\t\t\t\tprotectAll: _descLocking.getBoolean(\"protectAll\"),\r\n\t\t\t\tprotectArtboardAutonest: _descLocking.getBoolean(\"protectArtboardAutonest\"),\r\n\t\t\t\tprotectComposite: _descLocking.getBoolean(\"protectComposite\"),\r\n\t\t\t\tprotectPosition: _descLocking.getBoolean(\"protectPosition\"),\r\n\t\t\t\tprotectTransparency: _descLocking.getBoolean(\"protectTransparency\")\r\n\t\t\t};\r\n\t\t\tthis.name = lexicon.getLayerDescriptor (pointer, type, \"name\").getString(\"name\");\r\n\t\t\tthis.visible = lexicon.getLayerDescriptor (pointer, type, \"visible\").getBoolean(\"visible\");\r\n\t\t\tthis.indexInGroup = 0; //in same level\r\n\t\t\tthis.absoluteIndexInGroup = 0;\r\n\t\t\tthis.layerSection = typeIDToStringID(lexicon.getLayerDescriptor (pointer, type, \"layerSection\").getEnumerationValue('layerSection'));\r\n\t\t\tthis.isGroup = (this.layerSection === \"layerSectionStart\" || this.layerSection === \"layerSectionEnd\");\r\n\t\t\tthis.groupBounds = null;\r\n\t\t\tthis.getGroupBounds = null;\r\n\t\t\tthis.isParentLocked = null;\r\n\t\t\tthis.isParentInvisible = null;\r\n\t\t\tthis.setDomLayer = null;\r\n\t\t\tthis.isParentDocument = false;\r\n\t\t\tthis.parentItemIndex = null;\r\n\t\t\tthis._setIndexInGroup ();\r\n\t\t\tif(this.isGroup){\r\n\t\t\t\tthis._setGroupLength ();\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tthis.reinit = function(){\r\n\t\t\tpointer = this.layerID;\r\n\t\t\ttype = \"id\";\r\n\t\t\tthis.init();\r\n\t\t}\r\n\t\t\r\n\t\tthis._setIndexInGroup = function(){\r\n\t\t\tvar indexInGroup = 0, absoluteIndexInGroup = 0, i = this.itemIndex, level = 0;\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tfor(i; ((i <= _documentLayersCount) && (level <= 0)); i++){  \r\n\t\t\t\t///* debug */ $.writeln(lexicon.getLayerDescriptor (i, null, \"name\").getString('name'));$.writeln(level);\r\n\t\t\t\tvar layerSection = typeIDToStringID(lexicon.getLayerDescriptor (i, null, \"layerSection\").getEnumerationValue('layerSection'));\r\n\t\t\t\tif(layerSection===\"layerSectionStart\" && this.itemIndex !== i){  \r\n\t\t\t\t\tlevel++;  \r\n\t\t\t\t}  \r\n\t\t\t\telse if(layerSection===\"layerSectionEnd\"){  \r\n\t\t\t\t\tlevel--;\r\n\t\t\t\t}  \r\n\t\t\t\tif(level == 0 && layerSection!==\"layerSectionEnd\" && this.itemIndex !== i){\r\n\t\t\t\t\tindexInGroup++; // first item in DOM group begins with zero... so we don't count layer itself\r\n\t\t\t\t}\r\n\t\t\t\tif(level <= 0){\r\n\t\t\t\t\tabsoluteIndexInGroup++; // this value is for getting new action descriptor in linear list. So we need to count everything\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar a = 0;\r\n\t\t\t//$.writeln(i);\r\n\t\t\tthis.absoluteIndexInGroup = absoluteIndexInGroup;\r\n\t\t\tthis.indexInGroup = indexInGroup;\r\n\t\t\ttry{\r\n\t\t\t\t// fail if next layer doesn't exists. So it means that we reached most top layer\r\n\t\t\t\tvar dummmy = lexicon.getLayerDescriptor (i, null, \"name\");\r\n\t\t\t}catch(e){\r\n\t\t\t\tthis.isParentDocument = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tthis._setGroupLength = function(){\r\n\t\t\tvar length = 0; // DOM like\r\n\t\t\tvar lengthAbsolute = 0; // DOM like with folders ends\r\n\t\t\tvar deepLength = 0; // with nested without folders ends\r\n\t\t\tvar deepLengthAbsolute = 0; //all\r\n\t\t\t\r\n\t\t\tfor(var i = this.itemIndex-1, level = 0; (i > 0) && (level >= 0); i--){  \r\n\t\t\t\tvar layerSection = typeIDToStringID(lexicon.getLayerDescriptor (i, null, \"layerSection\").getEnumerationValue('layerSection'));\r\n\t\t\t\t\r\n\t\t\t\tdeepLengthAbsolute++;\r\n\t\t\t\t\r\n\t\t\t\tif(layerSection===\"layerSectionEnd\"){  \r\n\t\t\t\t\tlevel--;\r\n\t\t\t\t} \r\n\t\t\t\t\r\n\t\t\t\tif(level == 0){\r\n\t\t\t\t\tlengthAbsolute++;\r\n\t\t\t\t\tif(layerSection!==\"layerSectionEnd\"){\r\n\t\t\t\t\t\tlength++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(layerSection===\"layerSectionStart\"){  \r\n\t\t\t\t\tlevel++;  \r\n\t\t\t\t\tdeepLength++;\r\n\t\t\t\t}  \r\n\t\t\t\t \r\n\t\t\t\tif(layerSection===\"layerSectionContent\"){\r\n\t\t\t\t\tdeepLength++;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tthis.length = length;\r\n\t\t\tthis.lengthAbsolute = lengthAbsolute; // DOM li\r\n\t\t\tthis.deepLength = deepLength; // with neste\r\n\t\t\tthis.deepLengthAbsolute = deepLengthAbsolute; //all\r\n\t\t\t\r\n\t\t}\r\n\t\r\n\t\tthis.getContentPointers = function(type,ignoreGroupEnds){\r\n\t\t\tif(this.isGroup){\r\n\t\t\t\tvar len = this.itemIndex - this.deepLengthAbsolute - 1;\r\n\t\t\t\tvar result = [];\r\n\t\t\t\t\r\n\t\t\t\tfor(var i = this.itemIndex - 1; i > len; i--){\r\n\t\t\t\t\tvar pointer;\r\n\t\t\t\t\tif(!type){\r\n\t\t\t\t\t\tpointer = i;\r\n\t\t\t\t\t}else if(type.toLowerCase() === \"id\"){\r\n\t\t\t\t\t\tpointer = lexicon.convertLayerIndexToId(i);\r\n\t\t\t\t\t}else if(type.toLowerCase() === \"name\"){\r\n\t\t\t\t\t\tpointer = lexicon.getLayerDescriptor(i,null,\"name\").getString(\"name\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar notGroupEnd = typeIDToStringID(lexicon.getLayerDescriptor (i, null, \"layerSection\").getEnumerationValue('layerSection')) !== \"layerSectionEnd\";\r\n\t\t\t\t\r\n\t\t\t\t\tif((notGroupEnd && ignoreGroupEnds) || !ignoreGroupEnds){\r\n\t\t\t\t\t\tresult.push(pointer);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn result;\r\n\t\t\t}else{\r\n\t\t\t\tthrow \"Can't get folder content. It's not a group\";\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\t\r\n\t\tthis.init();\r\n\t};\r\n\t   \r\n\t /*  Input\r\n\t\tvalue = reference value:layerIndex, id, name, array\r\n\t\ttype = optional, \"id\" if number is ID    \r\n\t\tpsClass = optional\r\n\t*/\r\n\r\n\tLxActionDescriptor.prototype.lxRef = function(value, psMainClass, type, psClass){\r\n\t\tif(!psClass){\r\n\t\t\tpsClass = \"null\";\r\n\t\t}\r\n\t\tif(value && value.constructor === Array){\r\n\t\t\tthis.putList( psClass, lexicon.ref(psMainClass, value,  type) ); \r\n\t\t} else {\r\n\t\t\tthis.putReference( psClass, lexicon.ref(psMainClass, value, type) ); \r\n\t\t}\r\n\t}\r\n\r\n\tLxActionDescriptor.prototype.lxRefLayer = function(value, type){\r\n\t\tthis.lxRef(value,'Lyr ',type);\r\n\t}\r\n\r\n\tLxActionDescriptor.prototype.lxRefDocument = function(value, type){\r\n\t\tthis.lxRef(value,'Dcmn',type);\r\n\t}\r\n\r\n\tLexicon.prototype.getLayerDescriptor = function(value, type, property){\r\n\t\treturn lexicon.getDescriptor(\"Lyr \", value, type, property);\r\n\t}\r\n\r\n\t/* return value */\r\n\tLexicon.prototype.getDocumentProperty = function (property, pointer, pointerType){\r\n\t\treturn lexicon.getDescriptor(\"Dcmn\", pointer, pointerType, property).getValue(property);\r\n\t}\r\n\r\n\t/* return value */\r\n\tLexicon.prototype.getLayerProperty = function (property, pointer, pointerType){\r\n\t\treturn lexicon.getDescriptor(\"Lyr \", pointer, pointerType, property).getValue(property);\r\n\t}\r\n\r\n\t/* return value */\r\n\tLexicon.prototype.getAppProperty = function (property, pointer, pointerType){\r\n\t\treturn lexicon.getDescriptor(\"capp\", pointer, pointerType, property).getValue(property);\r\n\t}\r\n\r\n\t/* return value */\r\n\tLexicon.prototype.getPathProperty = function (property, pointer, pointerType){\r\n\t\treturn lexicon.getDescriptor(\"Path\", pointer, pointerType, property).getValue(property);\r\n\t}\r\n\r\n\tLexicon.prototype.getDocumentDescriptor = function(value, type, property){\r\n\t\treturn lexicon.getDescriptor(\"Dcmn\", value, type, property);\r\n\t}\r\n\tLexicon.prototype.getDocumentLayersCount = function (value, type){\r\n\t\treturn lexicon.getDescriptor(\"Dcmn\", value, type, \"numberOfLayers\").getInteger(\"numberOfLayers\");\r\n\t}\r\n\r\n\tLexicon.prototype.getDocumentDeepestLevel = function(){\r\n\t\t// this doesn't utilize lexicon features becuase we need performance. We want traverse all layers.\r\n\t\tvar bgCounter = lexicon.existsBackgroundLayer() ? 0 : 1;\r\n\t\tvar currentLevel = 1;\r\n\t\tvar maxLevel = 1;\r\n\t\tvar idLyr = charIDToTypeID( \"Lyr \" ); \r\n\t\tvar idPrp = stringIDToTypeID('property');\r\n\t\tvar idSection = stringIDToTypeID('layerSection');\r\n\t\tvar idStart = stringIDToTypeID(\"layerSectionStart\");\r\n\t\tvar idEnd = stringIDToTypeID(\"layerSectionEnd\");\r\n\t\tvar ref, desc, layerSection;\r\n\t\t\r\n\t\tfor(var i = bgCounter, len = lexicon.getDocumentLayersCount(); i<len ; i++){  \r\n\t\t\t\r\n\t\t\tref = new ActionReference();    \r\n\t\t\tref.putProperty(idPrp, idSection);\r\n\t\t\tref.putIndex( idLyr, i );   \r\n\t\t\tdesc = executeActionGet(ref);  \r\n\t\t\t  \r\n\t\t\tlayerSection = desc.getEnumerationValue(idSection);  \r\n\t\t\tif(layerSection===idEnd){  \r\n\t\t\t\tcurrentLevel++; \r\n\t\t\t\tif(currentLevel > maxLevel){\r\n\t\t\t\t\tmaxLevel = currentLevel;\r\n\t\t\t\t\t//$.writeln(lexicon.getLayerDescriptor(i+1, null, \"name\").getValue(\"name\"));\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}  \r\n\t\t\telse if(layerSection===idStart){  \r\n\t\t\t\tcurrentLevel--;  \r\n\t\t\t}  \r\n\t\t\t\r\n\t\t}\r\n\t\treturn maxLevel;\r\n\t}\r\n\r\n\tLexicon.prototype.getDescriptor = function(psMainClass,value, type, property){\r\n\t\tvar ref = new LxActionReference();\r\n\t\tif(property){\r\n\t\t\tref.putProperty(\"Prpr\", property);  \r\n\t\t}\r\n\t\tref = lexicon.ref(psMainClass, value, type, ref);\r\n\t\t\r\n\t\tvar result = executeActionGet(ref);\r\n\t\tresult = new LxActionDescriptor(result);\r\n\t\t\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\r\n\r\n\r\n\tLexicon.prototype.resolveId = function (id){\r\n\t\tif (id.constructor == Number) {\r\n\t\t\treturn id;\r\n\t\t} else if(id.constructor == String){\r\n\t\t\tif(id.length > 0){\r\n\t\t\t\t\r\n\t\t\t\tif(id.length === 4){\r\n\t\t\t\t\ttry { \r\n\t\t\t\t\t\tvar typeID = charIDToTypeID(id);\r\n\t\t\t\t\t\tif(typeIDToStringID(typeID) === \"\"){\r\n\t\t\t\t\t\t\treturn stringIDToTypeID(id); \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn typeID\r\n\t\t\t\t\t} \r\n\t\t\t\t\tcatch (e) { return stringIDToTypeID(id); }\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn stringIDToTypeID(id);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tError.runtimeError(19, id);  // Bad Argument\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/*  Input\r\n\t\tvalue = reference value:layerIndex, id, name, array\r\n\t\ttype = optional, \"id\" if number is ID    \r\n\t*/\r\n\tLexicon.prototype.ref = function (psMainClass, value, type, ref){\r\n\t\tif(!ref){\r\n\t\t\tref = new LxActionReference();  \r\n\t\t}\r\n\t\tvar psMainClass = this.resolveId(psMainClass);\r\n\t\t\r\n\t\tif(value && value.constructor === Array){\r\n\t\t\tvar list = new ActionList();\r\n\t\t\tfor(var i = 0, len = value.length; i < len; i++){\r\n\t\t\t\tvar ref = new ActionReference();  \r\n\t\t\t\tref = this._refSingle(psMainClass, value[i], type, ref);\r\n\t\t\t\tlist.putReference(ref);\r\n\t\t\t}\r\n\t\t\treturn list;\r\n\t\t}else{\r\n\t\t\tref = this._refSingle(psMainClass, value, type, ref);\r\n\t\t\treturn ref;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tLexicon.prototype._refSingle = function (psMainClass, value, type, ref){\r\n\t\tif(!ref){\r\n\t\t\tref = new LxActionReference();\r\n\t\t}\r\n\t\t\r\n\t\tif(type && type.toLowerCase() === \"id\"){\r\n\t\t\tref.putIdentifier( psMainClass, value );\r\n\t\t}else if(type && type.toLowerCase() === \"offset\"){\r\n\t\t\tref.putOffset( psMainClass, value );\r\n\t\t}else if(typeof value === \"number\" ){\r\n\t\t\tref.putIndex( psMainClass, value );\r\n\t\t}else if(typeof value === \"string\" ){\r\n\t\t\tref.putName( psMainClass, value );\r\n\t\t}else if(value === undefined || value === null){\r\n\t\t\tref.putEnumerated( psMainClass, charIDToTypeID(\"Ordn\"), charIDToTypeID(\"Trgt\") );  \r\n\t\t}else{\r\n\t\t\tthrow \"Can't create reference. Bad data type\"\r\n\t\t}\r\n\t\treturn ref;\r\n\t}\r\n\r\n\t/// native overrides\r\n\r\n\texecuteAction = function(eventID, descriptor, displayDialogs){\r\n\t\tif(displayDialogs === undefined){\r\n\t\t\tdisplayDialogs = DialogModes.NO;\r\n\t\t}\r\n\t\tif(descriptor !== undefined && descriptor._desc){\r\n\t\t\tdescriptor = descriptor._desc;\r\n\t\t}\r\n\t\teventID = Lexicon.prototype.resolveId(eventID);\r\n\t\tlexicon.settings.debugMode ? $.hiresTimer : null;\r\n\t\tvar desc = app.executeAction(eventID, descriptor, displayDialogs);\r\n\t\t\r\n\t\tif(lexicon.settings.debugMode){\r\n\t\t\tvar time = $.hiresTimer;\r\n\t\t\tvar event = eventID;\r\n\t\t\ttry{event = typeIDToStringID(eventID)}catch(e){alert(e)}\r\n\t\t\t$.writeln(time/1000 +\"\\n\"+$.stack+\"\\n\\n\");\r\n\t\t}\r\n\t\r\n\t\treturn desc;\r\n\t};\r\n\r\n\texecuteActionGet = function (ref){\r\n\t\tif(ref._ref){\r\n\t\t\tref = ref._ref;\r\n\t\t}\r\n\t\tvar result = app.executeActionGet(ref);\r\n\t\treturn result;\r\n\t};\r\n\r\n\t// common methods\r\n\r\n\tLexicon.prototype.selectDocument = function(value, type){\r\n\t\tvar desc = new LxActionDescriptor();\r\n\t\tdesc.lxRefDocument (value, type);\r\n\t\texecuteAction( \"slct\", desc, DialogModes.NO );\r\n\t}\r\n\r\n\tLexicon.prototype.convertLayerIdToIndex = function(id){\r\n\t\tvar backgroundCounter = Lexicon.prototype.existsBackgroundLayer() ? -1 : 0;\r\n\t\t\r\n\t\tif(id.constructor === Array){\r\n\t\t\tvar result = new Array();\r\n\t\t\tfor (var i = 0, len = id.length; i < len; i++){\r\n\t\t\t\tresult.push(idToIndex(id[i]));\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}else{\r\n\t\t\treturn idToIndex(id);\r\n\t\t}\r\n\r\n\t\tfunction idToIndex(identifier){\r\n\t\t\tvar desc = Lexicon.prototype.getLayerDescriptor(identifier, \"id\", \"itemIndex\");\r\n\t\t\tvar index = desc.getInteger(\"itemIndex\") + backgroundCounter;\r\n\t\t\treturn index;\r\n\t\t}\r\n\t}\r\n\r\n\tLexicon.prototype.convertLayerIndexToId = function(index){\r\n\t\tvar result = new Array();\r\n\t\t\r\n\t\tvar indexToId = function(idx){\r\n\t\t\tvar desc = Lexicon.prototype.getLayerDescriptor(idx, null, \"layerID\");\r\n\t\t\tvar id = desc.getInteger(\"layerID\");\r\n\t\t\tresult.push(id);\r\n\t\t}\r\n\r\n\t\tthis.forEach(index, null, indexToId);\r\n\t\t\r\n\t\treturn result.length === 1 ? result[0] : result;\r\n\t}\r\n\r\n\tLexicon.prototype.selectLayers = function(value, type){\r\n\t\tif(value.constructor === Array && value.length > 1){\r\n\t\t\tif(type ===\"id\"){\r\n\t\t\t\tthis.convertLayerIdToIndex (value)\r\n\t\t\t}\r\n\t\t\tvalue.sort(sortNumber);\r\n\t\t\tvar invertedArray = new Array();\r\n\t\t\t\r\n\t\t\tvar continuousScore = 0;\r\n\t\t\tfor(var i = value[0], len = value[value.length-1], j=0; i<len; i++){\r\n\t\t\t\tif(value[j] !== i){\r\n\t\t\t\t\tinvertedArray.push(i);\r\n\t\t\t\t}else{j++}\r\n\t\t\t}\r\n\t\t\tvar invertedSelection = invertedArray.length < value.length;\r\n\t\t\t\r\n\t\t\tsetSelectedLayer(value[0], type);\r\n\t\t\t\r\n\t\t\tif(invertedSelection){\r\n\t\t\t\taddContinuousSelection(value[value.length-1]);\r\n\t\t\t\tthis.deselectLayers (invertedArray, type);\r\n\t\t\t}else{\r\n\t\t\t\tvalue.shift();\r\n\t\t\t\tthis.addSelectedLayers (value, type);\r\n\t\t\t}\r\n\t\t\r\n\t\t}else if(value.constructor === Array && value.length === 1){\r\n\t\t\tsetSelectedLayer(value[0], type)\r\n\t\t}else{\r\n\t\t\tsetSelectedLayer(value, type)\r\n\t\t}\r\n\r\n\t\tfunction setSelectedLayer(pointer, type){\r\n\t\t\tvar desc = new LxActionDescriptor();\r\n\t\t\tdesc.lxRefLayer (pointer, type);\r\n\t\t\tdesc.putBoolean( \"MkVs\", false );\r\n\t\t\texecuteAction( \"slct\", desc );\r\n\t\t}\r\n\t\t\r\n\t\tfunction addContinuousSelection(pointer,type){\r\n\t\t\tvar desc = new LxActionDescriptor();\r\n\t\t\tdesc.lxRefLayer (pointer, type);\r\n\t\t\tdesc.putEnumerated( \"selectionModifier\", \"selectionModifierType\", \"addToSelectionContinuous\" );\r\n\t\t\tdesc.putBoolean( \"MkVs\", false );\r\n\t\t\texecuteAction( \"slct\", desc );\r\n\t\t}\r\n\r\n\t\tfunction sortNumber(a,b) {\r\n\t\t\treturn a - b;\r\n\t\t}\r\n\t}\r\n\r\n\t// sibling groups with content inside are counted as single layer if deep = false\r\n\tLexicon.prototype.getLayerIndexInGroup = function(pointer, type, deep){\r\n\t\t\r\n\t}\r\n\r\n\t// sibling groups with content inside are counted as single layer if deep = false\r\n\tLexicon.prototype.getLayerCountInGroup = function(pointer, type, deep){\r\n\t\t\r\n\t}\r\n\r\n\t// because DOM sucks\r\n\r\n\tfunction LayerContextStack(pointer,type){\r\n\t\tthis.stack = [];\r\n\t\t\r\n\t\tthis.loadStack = function(pointer, type){\r\n\t\t\tthis.stack = [];\r\n\t\t\t//innerLoad.call(this, pointer, type);\r\n\t\t\t\r\n\t\t\t/*function innerLoad(pointer, type){\r\n\t\t\t\tvar layerContext = new LayerContext(pointer, type);\r\n\t\t\t\tthis.stack.push(layerContext);\r\n\t\t\t\t//$.writeln(layerContext.name);\r\n\t\t\t\tif(!layerContext.isParentDocument){\r\n\t\t\t\t\tinnerLoad.call (this, layerContext.itemIndex + layerContext.absoluteIndexInGroup);\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\t\t\t\r\n\t\t\tvar layerContext = new LayerContext(pointer, type);\r\n\t\t\tthis.stack.push(layerContext);\r\n\t\t\t\r\n\t\t\twhile(!layerContext.isParentDocument){\r\n\t\t\t\tlayerContext = new LayerContext(layerContext.itemIndex + layerContext.absoluteIndexInGroup, type);\r\n\t\t\t\tthis.stack.push(layerContext);\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tthis.getDOMlayer = function(stackArrayIndex){\r\n\t\t\tvar layer = app.activeDocument.layers;\r\n\t\t\tfor (var i = stackArrayIndex || this.stack.length -1; i >= 0; i--){\r\n\t\t\t\tif(i!==0){\r\n\t\t\t\t\tlayer = layer[this.stack[i].indexInGroup].layers;\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn layer[this.stack[i].indexInGroup];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthrow \"getDOMlayer error\";\r\n\t\t}\r\n\t\r\n\t\tthis.getLast = function(){\r\n\t\t\treturn this.stack[this.stack.length-1];\r\n\t\t}\r\n\r\n\t\tthis.hasParentProtectAll = function(layerContext){\r\n\t\t\tvar startLevelPassed = false;\r\n\t\t\tfor(var i = 0, len = this.stack.length; i < len; i++){\r\n\t\t\t\tif(!startLevelPassed){\r\n\t\t\t\t\tstartLevelPassed = this.stack[i].id===layerContext.id;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar index = this.stack[i].itemIndex;\r\n\t\t\t\t\tvar allLock = lexicon.getLayerDescriptor (index, null, \"layerLocking\").getObjectValue(stringIDToTypeID('layerLocking')).getBoolean(stringIDToTypeID('protectAll'));\r\n\t\t\t\t\tif(allLock){\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\t/*\r\n\t\tvar getDataContext = function (pointer, type){\r\n\t\t\tvar curLayer = new LayerContext(pointer, type);\r\n\t\t\tif(curLayer.isGroup){\r\n\t\t\t\t\r\n\t\t\t\tcurLayer.groupBounds = {\r\n\t\t\t\t\tleft: null,\r\n\t\t\t\t\ttop: null,\r\n\t\t\t\t\tright: null,\r\n\t\t\t\t\tbottom: null\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn curLayer;\r\n\t\t}*/\r\n\t\r\n\t\tthis.loadStack(pointer,type);\r\n\t\t\r\n\t\tthis.reinit = function(){\r\n\t\t\tvar lastID = this.getLast().layerID;\r\n\t\t\tthis.loadStack(lastID, \"id\");\r\n\t\t}\r\n\r\n\t\t//var result = this.forEach(pointer, type, getDataContext);\r\n\t\t//return result;\r\n\t}\r\n\r\n\tLexicon.prototype.deselectLayers = function(value, type){\r\n\t\tvar deselectLayer = function (pointer, type){\r\n\t\t\tvar desc = new LxActionDescriptor();\r\n\t\t\tdesc.lxRefLayer (pointer, type);\r\n\t\t\tdesc.putEnumerated( \"selectionModifier\", \"selectionModifierType\", \"removeFromSelection\" );\r\n\t\t\tdesc.putBoolean( \"MkVs\", false );\r\n\t\t\texecuteAction( \"slct\", desc );\r\n\t\t}\r\n\r\n\t\tthis.forEach(value, type, deselectLayer)\r\n\t}\r\n\r\n\tLexicon.prototype.addSelectedLayers = function(value, type){\r\n\t\tvar addSelectedLayer = function (pointer, type){\r\n\t\t\tvar desc = new LxActionDescriptor();\r\n\t\t\tdesc.lxRefLayer (pointer, type);\r\n\t\t\tdesc.putEnumerated( \"selectionModifier\", \"selectionModifierType\", \"addToSelection\" );\r\n\t\t\tdesc.putBoolean( \"MkVs\", false );\r\n\t\t\texecuteAction( \"slct\", desc );\r\n\t\t}\r\n\t\t\r\n\t\tthis.forEach(value, type, addSelectedLayer)\r\n\t}\r\n\r\n\tLexicon.prototype.createGroup = function(value, type){\r\n\t\ttry{\r\n\t\t\tvar desc = new LxActionDescriptor();\r\n\t\t\tvar ref = new LxActionReference();\r\n\t\t\tref.putClass( \"layerSection\" );\r\n\t\t\tdesc.putReference( \"null\", ref );\r\n\t\t\tvar ref2 = this.ref(\"Lyr \", value, type)\r\n\t\t\tdesc.putReference( \"From\", ref2 );\r\n\t\t\texecuteAction( \"Mk  \", desc );\r\n\t\t}\r\n\t\tcatch(e){\r\n\t\t\tthrow \"Can't create group.\"\r\n\t\t}\r\n\t}\r\n\r\n\tLexicon.prototype.hasHistorySnapshot = function(pointer, type){\r\n\t\ttry{\r\n\t\t\tvar ref = new ActionReference();\r\n\t\t\tvar ref = lexicon._refSingle(\"SnpS\", pointer, type)\r\n\t\t\texecuteActionGet( ref );\t\t\r\n\t\t\treturn true;\r\n\t\t}catch(e){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tLexicon.prototype.makeHistorySnapshot = function(snapshotName){\r\n\t\tvar idMk = charIDToTypeID( \"Mk  \" );\r\n\t\t\tvar desc11 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref5 = new ActionReference();\r\n\t\t\t\tvar idSnpS = charIDToTypeID( \"SnpS\" );\r\n\t\t\t\tref5.putClass( idSnpS );\r\n\t\t\tdesc11.putReference( idnull, ref5 );\r\n\t\t\tvar idFrom = charIDToTypeID( \"From\" );\r\n\t\t\t\tvar ref6 = new ActionReference();\r\n\t\t\t\tvar idHstS = charIDToTypeID( \"HstS\" );\r\n\t\t\t\tvar idCrnH = charIDToTypeID( \"CrnH\" );\r\n\t\t\t\tref6.putProperty( idHstS, idCrnH );\r\n\t\t\tdesc11.putReference( idFrom, ref6 );\r\n\t\t\tif(name){\r\n\t\t\t\tvar idNm = charIDToTypeID( \"Nm  \" );\r\n\t\t\t\tdesc11.putString( idNm, snapshotName );\r\n\t\t\t}\r\n\t\t\tvar idUsng = charIDToTypeID( \"Usng\" );\r\n\t\t\tvar idHstS = charIDToTypeID( \"HstS\" );\r\n\t\t\tvar idFllD = charIDToTypeID( \"FllD\" );\r\n\t\t\tdesc11.putEnumerated( idUsng, idHstS, idFllD );\r\n\t\treturn executeAction( idMk, desc11, DialogModes.NO );\r\n\t}\r\n\r\n\tLexicon.prototype.restoreHistorySnapshot = function(pointer, type){\r\n\t\tvar desc = new LxActionDescriptor();\r\n\t\tvar ref = lexicon._refSingle(\"SnpS\", pointer, type)\r\n\t\tdesc.putReference( \"null\", ref );\r\n\t\texecuteAction( \"slct\" , desc);\r\n\t}\r\n\r\n\tLexicon.prototype.removeHistorySnapshot = function(pointer, type){\r\n\t\tvar desc = new LxActionDescriptor();\r\n\t\tvar ref = lexicon._refSingle(\"SnpS\", pointer, type)\r\n\t\tdesc.putReference( \"null\", ref );\r\n\t\texecuteAction( \"Dlt \" , desc);\r\n\t}\r\n\r\n\tLexicon.prototype.deleteLayers = function(value, type){\r\n\t\ttry{\r\n\t\t\tvar deleteLayer = function(value, type){\r\n\t\t\t\tvar desc = new LxActionDescriptor();\r\n\t\t\t\tdesc.lxRefLayer (value, type);\r\n\t\t\t\texecuteAction( \"Dlt \", desc );\r\n\t\t\t}\r\n\t\t\tthis.forEach(value, type, deleteLayer);\r\n\t\t}\r\n\t\tcatch(e){\r\n\t\t\tthrow \"Can't delete layer\"\r\n\t\t}\r\n\t}\r\n\r\n\tLexicon.prototype.forEach = function(pointer, type, itemFunction){\r\n\t\tif(pointer !== undefined && pointer.constructor === Array){\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0, len = pointer.length; i < len; i++){\r\n\t\t\t\tvar returnedItem = itemFunction(pointer[i], type);\r\n\t\t\t\tresult.push(returnedItem);\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}else{\r\n\t\t\tvar result = itemFunction(pointer, type);\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\r\n\tLexicon.prototype.forEachLayerWithSelection = function (pointer, type, layerFunction){\r\n\t\tif(pointer.constructor === Array){\r\n\t\t\tfor(var i = 0, len = pointer.length; i < len; i++){\r\n\t\t\t\tthis.selectLayers (pointer[i], type);\r\n\t\t\t\tlayerFunction(pointer[i],type);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.selectLayers (pointer, type);\r\n\t\t\tlayerFunction(pointer,type);\r\n\t\t}\r\n\t}\r\n\r\n\t//\r\n\tLexicon.prototype.getSelectedPathsPointer = function(type){\r\n\t\t\r\n\t\tvar pathsLength = lexicon.getDocumentProperty(\"numberOfPaths\");\r\n\t\tvar result = [];\r\n\t\t\r\n\t\tfor (var i = 1; i <= pathsLength; i++){\r\n\t\t\tvar selected = lexicon.getPathProperty(\"targetPath\", i);\r\n\t\t\tif(selected){\r\n\t\t\t\tif(type === undefined){\r\n\t\t\t\t\tresult.push(lexicon.getPathProperty(\"itemIndex\", i));\r\n\t\t\t\t} else if(type.toLowerCase() === \"id\"){\r\n\t\t\t\t\tresult.push(lexicon.getPathProperty(\"ID\", i));\r\n\t\t\t\t}if(type.toLowerCase() === \"name\"){\r\n\t\t\t\t\tresult.push(lexicon.getPathProperty(\"pathName\", i));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\r\n\tLexicon.prototype.getSelectedLayersId = function(docPointer, pionterType){\r\n\t\tvar selectedLayers = new Array();\r\n\t\t\tvar desc = this.getDocumentDescriptor(docPointer, pionterType, \"targetLayersIDs\")\r\n\t\t\tvar hasSelectedLayers = desc.hasKey('targetLayersIDs');\r\n\t\t\tif(hasSelectedLayers){\r\n\t\t\t\tvar layersIDList = desc.getList('targetLayersIDs');\r\n\t\t\t\tlayersIDList.forEach(function(i){\r\n\t\t\t\t\tvar id = layersIDList.getReference(i).getIdentifier(\"layer\");\r\n\t\t\t\t\tselectedLayers.push(id);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\treturn selectedLayers;\r\n\t}\r\n\r\n\tLexicon.prototype.existsBackgroundLayer = function(value, type){\r\n\t\tvar desc = Lexicon.prototype.getDocumentDescriptor(value,type,\"hasBackgroundLayer\");\r\n\t\treturn desc.getBoolean(\"hasBackgroundLayer\");\r\n\t}\r\n\r\n\tLexicon.prototype.descriptorToJSON = function(desc){\r\n\t\tif(desc._desc){\r\n\t\t\tdesc = desc._desc;\r\n\t\t}\r\n\t\tvar convertDesc = new ActionDescriptor();\r\n\t\tconvertDesc.putObject( stringIDToTypeID(\"object\"), stringIDToTypeID(\"object\"), desc );\r\n\t\tvar jsonDesc = executeAction( stringIDToTypeID(\"convertJSONdescriptor\"), convertDesc, DialogModes.NO );\r\n\t\treturn jsonDesc.getString(stringIDToTypeID(\"json\") );\r\n\t}\r\n\r\n\tLexicon.prototype.getSelectedLayersIndexes = function(value, type){\r\n\t\tfunction getBgCounter(){\r\n\t\t\treturn Lexicon.prototype.existsBackgroundLayer() ? 0 : 1;\r\n\t\t}\r\n\t\t\r\n\t\tvar selectedLayers = new Array();\r\n\t\t\tvar backGroundCounter = getBgCounter();\r\n\t\t\tvar desc = this.getDocumentDescriptor(value, type, \"targetLayersIndexes\")\r\n\t\t\tvar hasSelectedLayers = desc.hasKey('targetLayersIndexes');\r\n\t\t\tif(hasSelectedLayers){\r\n\t\t\t\tvar layersIDList = desc.getList('targetLayersIndexes');\r\n\t\t\t\tlayersIDList.forEach(function(i){\r\n\t\t\t\t\tvar index = layersIDList.getReference(i).getIndex(\"layer\");\r\n\t\t\t\t\tselectedLayers.push(index+backGroundCounter);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\treturn selectedLayers;\r\n\t}\r\n\r\n\t// activate lexicon\r\n\r\n\tvar lexicon = new Lexicon();\r\n\tvar lx = lexicon; \r\n\r\n////////////////////////////////////\r\n// \t\tLEXICON END\r\n////////////////////////////////////\t\r\n\r\n  \r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// Do not look down here. If you try to understand my code, you will waste a lot of time.\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\napp.bringToFront();\r\ncTID = function(s) { return cTID[s] || (cTID[s] = charIDToTypeID(s)); };\r\nsTID = function(s) { return sTID[s] || (sTID[s] = stringIDToTypeID(s)); }; \r\n\r\nvar startDisplayDialogs = app.displayDialogs;\r\napp.displayDialogs = DialogModes.NO;\r\n\r\nvar docMaster = app.activeDocument;\r\n\r\n///////////////////\r\n// MAIN CODE\r\n///////////////////\r\napplyPollyFills();\r\n\r\nif(docMaster.length != 0) {  \r\n\tif(app.version.split(\".\")[0] >= 17){\r\n\t\t//main(); // uncoment for debug\t\r\n\t\tapp.activeDocument.suspendHistory(\"Unsmart\", \"main()\"); //keep history clear\r\n\t}\r\n\telse{\r\n\t\talert(\"Sorry. Only Photoshop 2015.5 and higher is supported.\");\r\n\t}\r\n}\r\n\r\nfunction main(){\t\r\n\tvar artboardsSettings = getArtboardSettings();\r\n\tpreventFromArtboardMessUp();\r\n\t\r\n\t//global variables\r\n\tvar layerList = lx.getSelectedLayersId ();\r\n\tlayerList = filterValidLayers(layerList);\r\n\tvar soGroupList = new Array();\r\n\tvar clippedLayers = new Array();\r\n\tvar openWindowID;\r\n\tvar documentOpened;\r\n\tvar exceededWarningShown = false;\r\n\tvar tempFilesToRemove = new Array();\r\n\tvar resolutionRatio = lx.getDocumentDescriptor(null, null, \"resolution\").getValue(\"resolution\") / 72.00;\r\n\tvar effectsScaled = false;\r\n\t\r\n\t// we don't want transform path, bug layer\r\n\tif(isPathSelected()){ //performance condition\r\n\t\tdeselectPath ();\r\n\t}\r\n\t\r\n\t// we don't want open and close window for each SO instance\r\n\t// we also don't want change layer comp for each SO instance if instance has same layer comp\r\n\t// so we sort smart object instances like this: soInst > comps > soLayerIDs > descriptor\r\n\tvar soInst = getSOInstances(layerList);\r\n\t\r\n\tfor (var soKey in soInst){\r\n\t\tvar comps = soInst[soKey];\r\n\t\topenWindowID = null;\r\n\t\t\r\n\t\tfor (var compKey in comps){\r\n\t\t\tvar layers = comps[compKey];\r\n\t\t\t\r\n\t\t\tfor (var layerKey in layers){\r\n\t\t\t\tvar desc = layers[layerKey];\r\n\t\t\t\tlx.selectLayers(layerKey,\"id\");\r\n\t\t\t\tvar layerStack = new LayerContextStack();\r\n\t\t\t\t\r\n\t\t\t\t// ingore SO inside locked group\r\n\t\t\t\tif(layerStack.hasParentProtectAll(layerStack.getLast())) {\r\n\t\t\t\t\tvar indexInArrayToRemove = layerList.findValueIndex(layerKey);\r\n\t\t\t\t\tlayerList.splice(indexInArrayToRemove, 1);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// this should include blending mode, fill, opacity\r\n\t\t\t\tif(canCopyPasteStyle(desc)){\r\n\t\t\t\t\tcopyLayerStyle ();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// we want move clipped layer from SO to new group\r\n\t\t\t\tclippedLayers = getClippedLayersList(desc);\r\n\t\t\t\t\r\n\t\t\t\t// window method is used if smart object has layer comps\r\n\t\t\t\tif(comps.windowMethod){\r\n\t\t\t\t\textractWithWindow(desc, soKey);\r\n\t\t\t\t}else{\r\n\t\t\t\t\textractViewless(desc, soKey);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(documentOpened){\r\n\t\t\t// we can't close document by ID... so we first select this document\r\n\t\t\tselectDocument(openWindowID);\r\n\t\t\tcloseWindow(openWindowID);\r\n\t\t}\r\n\t\r\n\t\topenWindowID = undefined;\r\n\t\tdocumentOpened = undefined;\r\n\t\t\r\n\t}\r\n\r\n\t// clean up unsmarted objects\r\n\tlx.forEachLayerWithSelection(layerList, \"id\", function(soId){\r\n\t\tif(settings.deleteOriginalObject){\r\n\t\t\tlx.deleteLayers(soId, \"id\");\r\n\t\t}else{\r\n\t\t\thideLayer();\r\n\t\t\tsetColorTag(null,null,\"Gry \");\r\n\t\t}\r\n\t});\r\n\t\r\n\t// restore layer selection but with unsmarted objects\r\n\tif(soGroupList.length > 0){\r\n\t\tlx.selectLayers(soGroupList, \"id\");\r\n\t\tif(settings.dontGroupSOContent){\r\n\t\t\tungroupSelectedLayer();\r\n\t\t}\r\n\t}\r\n\t\r\n\t// clean up .psb files in temp folder\r\n\tlx.forEach(tempFilesToRemove, null, function (file){\r\n\t\tif(file.exists){\r\n\t\t\tfile.remove();\r\n\t\t}\r\n\t});\r\n\r\n\trevertArtboardsSettings();\r\n\t\r\n\t/////////////\r\n\t// FUNCTIONS\r\n\t/////////////\r\n\r\n\tfunction extractViewless(desc, soKey){\r\n\t\tvar smartObject = desc.getObjectValue(stringIDToTypeID('smartObject'));\r\n\t\t\r\n\t\tvar hasPath = smartObject.hasKey(stringIDToTypeID('link'));\r\n\t\tvar isKnownPath = soInst[soKey].file;\r\n\t\tvar isCloudFile = hasPath && smartObject.getType(stringIDToTypeID('link')) == \"DescValueType.OBJECTTYPE\";\r\n\t\tvar file;\r\n\t\t\r\n\t\tif((!hasPath && !isKnownPath) || (isCloudFile && !isKnownPath)){\r\n\t\t\tif(isCloudFile){\r\n\t\t\t\tfile = new File(getCloudFilePath(desc));\r\n\t\t\t\t//executeAction( stringIDToTypeID( \"placedLayerConvertToEmbedded\" ), undefined, DialogModes.NO );\r\n\t\t\t}else{\r\n\t\t\t\tvar extension = smartObject.getString(stringIDToTypeID('fileReference')).split(\".\").pop();\r\n\t\t\t\tfile = convertToLinkedSo(soKey+\".\"+extension);\r\n\t\t\t\ttempFilesToRemove.push(file);\r\n\t\t\t}\r\n\t\t}else if(isKnownPath){\r\n\t\t\tfile = soInst[soKey].file; \r\n\t\t}else{\r\n\t\t\tfile = new File(smartObject.getPath(stringIDToTypeID('link')));\r\n\t\t}\r\n\t\r\n\t\tsoInst[soKey].file = file;\r\n\t\t\r\n\t\t/*clean these variables*/\r\n\t\tvar soMore = desc.getObjectValue(stringIDToTypeID('smartObjectMore'));\r\n\t\tvar soInnerWidth = soMore.getObjectValue(stringIDToTypeID('size')).getDouble(stringIDToTypeID('width'));\r\n\t\tvar soInnerHeight = soMore.getObjectValue(stringIDToTypeID('size')).getDouble(stringIDToTypeID('height'));\r\n\t\tvar widthDeviation = soInnerWidth % 2;\r\n\t\tvar heightDeviation = soInnerHeight % 2;\r\n\t\t\r\n\t\tselectPixels(0 + widthDeviation, 0 + heightDeviation, soInnerWidth, soInnerHeight);\r\n\t\tplaceUnwrap(file);\r\n\t\tdeselectPixels();\r\n\t\t\r\n\t\tunlockAllLocks(); //all SO layers must be selected. Native function for folder ignores groups in CC 2017 and lower\r\n\t\t\r\n\t\textractShared(desc, true);\r\n\t}\r\n\r\n\r\n\tfunction extractWithWindow(desc, soKey){\r\n\t\tvar soCompId = desc.getObjectValue(stringIDToTypeID('smartObjectMore')).getInteger(stringIDToTypeID('comp'));\r\n\t\t\r\n\t\t\r\n\t\t// first check if document was already opened with script, so we can skip some things\r\n\t\tif(documentOpened && openWindowID){\r\n\t\t\tselectDocument(openWindowID);\r\n\t\t}else{        \r\n\t\t\tvar documentsBefore = app.documents.length;\r\n\t\t\texecuteAction( stringIDToTypeID( \"placedLayerEditContents\" ), new ActionDescriptor(), DialogModes.NO );\r\n\t\t\t// we need to be sure that correct document is opened so we will wait\r\n\t\t\tWaitForRedraw ();\r\n\t\t\t\r\n\t\t\tselectAllLayers ();\r\n\t\t\t\r\n\t\t\t// we want layers locking untouched after script execution\r\n\t\t\tif(!hasHistorySnapshot(\"UnsmartSnapshot\")){\r\n \t\t\t\tmakeHistorySnapshot (\"UnsmartSnapshot\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar documentsAfter = app.documents.length;\r\n\t\t\t// here we know if script opened window, so we will not close windows opened before script execution\r\n\t\t\tdocumentOpened = documentsBefore === (documentsAfter - 1);\r\n\t\t\t\r\n\t\t\tunlockEverything();\r\n\t\t}\r\n\t\r\n\t\tvar compActive = getActiveComp(getLayerCompsData()); // this variable could be more global\r\n\t\tvar docSO = app.activeDocument;\r\n\t\topenWindowID = docSO.id;\r\n\t\t\r\n\t\tif(soCompId !== compActive){\r\n\t\t\tif(soCompId === -1){\r\n\t\t\t\tsoCompId = compActive;\r\n\t\t\t}\r\n\t\t\tchangeComp(soCompId); \r\n\t\t}\r\n\t\t\r\n\t\tif(settings.clearSmartObjectContent){\r\n\t\t\ttry{\r\n\t\t\t\tdeleteHiddenLayers();\r\n\t\t\t}catch(e){;}//error if nothing to delete\r\n\t\t}\r\n\t\t\r\n\t\t// check if we don't exceed nesting limit\r\n\t\tvar documentDeepestLevel = lx.getDocumentDeepestLevel();\r\n\t\tvar soCurrentLevel = layerStack.stack.length+1;\r\n\t\tvar isNestingLevelExceeded = (documentDeepestLevel + soCurrentLevel) > 11;\r\n\t\tif(isNestingLevelExceeded){\r\n\t\t\tif(!exceededWarningShown){\r\n\t\t\t\talert(\"Some layer(s) will be skipped. Limit is 10 nested groups/artboards + 1 layer.\\nYour smart object is in level: \"+soCurrentLevel + \"\\nDeepest level in smart object is: \"+documentDeepestLevel+\"\\nYou need remove: \"+(documentDeepestLevel + soCurrentLevel - 11)+\" level(s)\");\r\n\t\t\t}\r\n\t\t\texceededWarningShown = true;\r\n\t\t\t//don't delete layer if layer is not unsmarted\r\n\t\t\tvar indexInArrayToRemove = layerList.findValueIndex(layerKey);\r\n\t\t\tlayerList.splice(indexInArrayToRemove, 1);\r\n\t\t\tif(hasHistorySnapshot(\"UnsmartSnapshot\")){\r\n\t\t\t\trestoreFromSnapshot (\"UnsmartSnapshot\");\r\n\t\t\t}\r\n\t\t\tselectDocument (docMaster.id);\r\n\t\t}else{\r\n\t\t\tduplicateToDocument (docMaster.id);\r\n\t\t\tif(hasHistorySnapshot(\"UnsmartSnapshot\")){ //this could be executed only if layer comp has changed\r\n\t\t\t\trestoreFromSnapshot (\"UnsmartSnapshot\");\r\n\t\t\t}\r\n\t\t\tselectDocument (docMaster.id);\r\n\t\t\textractShared(desc, false);\r\n\t\t}\r\n\t} \r\n\r\n\tfunction extractShared(desc, isViewLess){\r\n\t\tvar soMore = desc.getObjectValue(stringIDToTypeID('smartObjectMore'));\r\n\t\tvar soInnerWidth = soMore.getObjectValue(stringIDToTypeID('size')).getDouble(stringIDToTypeID('width'));\r\n\t\tvar soInnerHeight = soMore.getObjectValue(stringIDToTypeID('size')).getDouble(stringIDToTypeID('height'));\r\n\t\tvar soNonAffineTransform = soMore.getList(stringIDToTypeID('nonAffineTransform'));\r\n\t\tvar soId = desc.getInteger(stringIDToTypeID('layerID'));\r\n\t\tvar soIndex = lx.convertLayerIdToIndex(soId);\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tlx.createGroup ();\r\n\t\tvar groupForSo = docMaster.activeLayer;\r\n\t\tvar groupForSoLayerContext = new LayerContext();\r\n\t\tsoGroupList.push(groupForSo.id);\r\n\t\t\r\n\t\t// Fix Big SO which are bigger than canvas\r\n\t\tif(isViewLess){\r\n\t\t\t// so content doesn't start at 0,0 of selection if is bigger than document and viewless\r\n\t\t\t// first must be created group and this cause that selected is only group and this eliminate risk that we will transform path instead layer\r\n\t\t\tvar docMasterWidth = lx.getDocumentDescriptor(null, null, \"width\").getValue(\"width\") * resolutionRatio;\r\n\t\t\tvar docMasterHeight = lx.getDocumentDescriptor(null, null, \"height\").getValue(\"height\") * resolutionRatio;\r\n\t\t\t\r\n\t\t\tif(docMasterWidth < soInnerWidth || docMasterHeight < soInnerHeight){\r\n\t\t\t\tvar x = (docMasterWidth < soInnerWidth) ? (soInnerWidth-docMasterWidth)/2 : 0;\r\n\t\t\t\tvar y = (docMasterHeight < soInnerHeight) ? (soInnerHeight-docMasterHeight)/2 : 0;\r\n\t\t\t\ttranslate(x,y);\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\t// Set layer order for viewless if needed\r\n\t\t// if group end has +1 than desired index then it already has desired position so it would throw error\r\n\t\tif(/*isViewLess && */soIndex !== (groupForSo.itemIndex - groupForSoLayerContext.deepLengthAbsolute - 1)){\r\n\t\t\tmoveLayerOrder(soIndex, groupForSo.id);\r\n\t\t}\r\n\t\t\r\n\t\t// viewLess method needs different method for removing hidden layers\r\n\t\tif(isViewLess && settings.clearSmartObjectContent){\r\n\t\t\tclearSOContentInParentDoc(groupForSo.id);\r\n\t\t}\r\n\t\t\r\n\t\t// if smart object content has layers outside canvas, we can hide them with mask on unsmarted group\r\n\t\tif(settings.hidePixelsOutsideSoCanvas){\r\n\t\t\tvar left = 0, top = 0;\r\n\t\t\t\r\n\t\t\tvar soBounds = {\r\n\t\t\t\ttop:top,\r\n\t\t\t\tright:left + soInnerWidth,\r\n\t\t\t\tbottom:top + soInnerHeight,\r\n\t\t\t\tleft:left\r\n\t\t\t};\r\n\t\t\r\n\t\t\tvar shouldHaveMask = isSOContentOutsideCanvas(groupForSo.id, soBounds);\r\n\t\t\tif(shouldHaveMask){\r\n\t\t\t\tselectPixels(left, top, soInnerWidth, soInnerHeight);\r\n\t\t\t\tcreateMask ();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// here we move layer to desired position and apply deformation\r\n\t\t\r\n\t\tvar soConerPoints = cornersActionListToObject(soNonAffineTransform);\r\n\t\tvar boolIsSmartObjectDeformed = isSmartObjectDeformed(soConerPoints, soInnerWidth, soInnerHeight);\r\n\t\t\r\n\t\tif(settings.resizeContent && boolIsSmartObjectDeformed){\r\n\t\t\tdoRectangleToQuadrilateral (soInnerWidth, soInnerHeight, soConerPoints);\r\n\t\t\tif(settings.scaleAllLayerEffects){\r\n\t\t\t\tvar trScaleRatio = calculateScaleRatio(soInnerWidth, soInnerHeight, soNonAffineTransform);\r\n\t\t\t\t// only if ratio is not 100,00\r\n\t\t\t\tif((Math.round(trScaleRatio*100)/100) !== 100){\r\n\t\t\t\t\tgroupForSoLayerContext.reinit(); // reinitialize because we removed hidden layer and moved group to the bottom\r\n\t\t\t\t\tvar groupContentIndexes = groupForSoLayerContext.getContentPointers(null,true);\r\n\t\t\t\t\tscaleSelectedLayersStyle(trScaleRatio,groupContentIndexes);\r\n\t\t\t\t\teffectsScaled = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\ttranslate( soConerPoints.leftTop.x, soConerPoints.leftTop.y );\r\n\t\t}\r\n\t\t\r\n\t\tif(settings.preserveSmartObjectProperties && !settings.dontGroupSOContent){\r\n\t\t\tvar hasMask = desc.getBoolean(stringIDToTypeID('hasUserMask'));\r\n\t\t\tvar hasVectorMask = desc.getBoolean(stringIDToTypeID('hasVectorMask'));\r\n\t\t\tvar isVisible = desc.getBoolean(stringIDToTypeID('visible'));\r\n\t\t\tvar hasLinkedLayers = desc.hasKey(stringIDToTypeID('linkedLayerIDs'));\r\n\t\t\tvar colorTag = desc.getEnumerationValue(stringIDToTypeID('color'));\r\n\t\t\tvar hasCustomColorTag = typeIDToStringID(colorTag) !== \"none\";\r\n\t\t\t\r\n\t\t\t// performance condition\r\n\t\t\tif(effectsScaled){\r\n\t\t\t\tlx.selectLayers (groupForSo.id, \"id\");\r\n\t\t\t}\r\n\t\t\tcollapseFolder();\r\n\t\t\trenameLayer(groupForSo.id, desc.getString(stringIDToTypeID('name')));\r\n\t\t\t\r\n\t\t\tif(hasCustomColorTag){\r\n\t\t\t\tsetColorTag(groupForSo.id, \"id\",colorTag);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(canCopyPasteStyle (desc)){\r\n\t\t\t\tpasteLayerStyle ();\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif(!isVisible){ //performance condition\r\n\t\t\t\tgroupForSo.visible = false;\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif(!settings.hidePixelsOutsideSoCanvas && hasMask){\r\n\t\t\t\tduplicateMask(soId,groupForSo.id);\r\n\t\t\t\tvar userMaskEnabled = desc.getBoolean(stringIDToTypeID('userMaskEnabled'));\r\n\t\t\t\tif(!userMaskEnabled){\r\n\t\t\t\t\tdisableMask (groupForSo.id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif(hasVectorMask){\r\n\t\t\t\tduplicateVectorMask(soId,groupForSo.id);\r\n\t\t\t\tlx.selectLayers (soId, \"id\");\r\n\t\t\t\tvar vectorMaskEnabled = isVectorMaskEnabled ();\r\n\t\t\t\t// if has vector mask but mask is disabled\r\n\t\t\t\tif(!vectorMaskEnabled ){\r\n\t\t\t\t\tdisableVectorMask (groupForSo.id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\tmoveAllClippedLayers(groupForSo);\r\n\t\t\t\r\n\t\t\tif(hasLinkedLayers){\r\n\t\t\t\tlinkLinkedLayers(desc,groupForSo);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\t///////////////////////////////\r\n\t// FUNCTIONS CALLED FROM MAIN\r\n\t///////////////////////////////\r\n\r\n\tfunction linkLinkedLayers(desc,groupForSo){\r\n\t\tlx.selectLayers(desc.getInteger(stringIDToTypeID('layerID')), \"id\");\r\n\t\tvar isLinkEnabled = isLinkOnLayerEnabled();\r\n\t\t\r\n\t\tvar links = desc.getList(stringIDToTypeID('linkedLayerIDs'));\r\n\t\tvar linkID = links.getInteger(0);\r\n\t\tvar groupID = groupForSo.id;\r\n\t\tlx.selectLayers([linkID,groupID], \"id\"); \r\n\t\t\r\n\t\tvar desc2111 = new LxActionDescriptor();\r\n\t\tdesc2111.lxRefLayer();\r\n\t\texecuteAction( \"linkSelectedLayers\", desc2111 );\r\n\t\t\r\n\t\tif(!isLinkEnabled){\r\n\t\t   var iddisableLayerLink = stringIDToTypeID( \"disableLayerLink\" );\r\n\t\t\t\tvar desc2202 = new LxActionDescriptor();\r\n\t\t\t\tdesc2202.lxRefLayer(groupID, \"id\");\r\n\t\t\t\tvar idT = charIDToTypeID( \"T   \" );\r\n\t\t\t\t\tvar desc2203 = new ActionDescriptor();\r\n\t\t\t\t\tvar idlnkE = charIDToTypeID( \"lnkE\" );\r\n\t\t\t\t\tdesc2203.putBoolean( idlnkE, false );\r\n\t\t\t\tvar idLyr = charIDToTypeID( \"Lyr \" );\r\n\t\t\t\tdesc2202.putObject( idT, idLyr, desc2203 );\r\n\t\t\texecuteAction( iddisableLayerLink, desc2202, DialogModes.NO );\r\n\t\t}\r\n\t}\r\n\r\n\t//\r\n\t// otevře SO\r\n\tfunction openSO(){\r\n\t\tvar idplacedLayerEditContents = sTID( \"placedLayerEditContents\" );\r\n\t\tvar desc187 = new ActionDescriptor();\r\n\t\texecuteAction( idplacedLayerEditContents, desc187, DialogModes.NO );\r\n\t}\r\n\t\r\n\tfunction placeUnwrap(file){\r\n\t\ttry{\r\n\t\t\tvar desc118 = new ActionDescriptor();\r\n\t\t\tdesc118.putPath( charIDToTypeID( \"null\" ) , file );       \r\n\t\t\tdesc118.putBoolean(stringIDToTypeID(\"unwrapLayers\"), true);\r\n\t\t\texecuteAction( charIDToTypeID( \"Plc \" ), desc118, DialogModes.NO );\r\n\t\t}catch(e){ \r\n\t\t\tundo(); //undo pouze při speciální chybovém kodu TODO\r\n\t\t\tthrow \"Unable to UnSmart object. Check your group nesting levels. Limit is 10. Also check your document color mode.\"\r\n\t\t}\r\n\t}\r\n\r\n\tfunction isLinkOnLayerEnabled(){\r\n\t\ttry{\r\n\t\t\tvar idslct = charIDToTypeID( \"slct\" );\r\n\t\t\t\tvar desc135 = new ActionDescriptor();\r\n\t\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\t\tvar ref63 = new ActionReference();\r\n\t\t\t\t\tvar idMn = charIDToTypeID( \"Mn  \" );\r\n\t\t\t\t\tvar idMnIt = charIDToTypeID( \"MnIt\" );\r\n\t\t\t\t\tvar idplacedLayerEditContents = stringIDToTypeID( \"selectLinkedLayers\" );\r\n\t\t\t\t\tref63.putEnumerated( idMn, idMnIt, idplacedLayerEditContents );\r\n\t\t\t\tdesc135.putReference( idnull, ref63 );\r\n\t\t\texecuteAction( idslct, desc135, DialogModes.NO );\r\n\t\t\treturn true;\r\n\t\t}catch(e){\r\n\t\t\tif(e.number == -25920){ // menu item not available\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\t//\r\n\t// changes comp inside smart object\r\n\tfunction changeComp(id){\r\n\t\tif(id===0){\r\n\t\t\ttry{\r\n\t\t\tvar idresetFromComp = stringIDToTypeID( \"resetFromComp\" );\r\n\t\t\tvar desc2707 = new ActionDescriptor();\r\n\t\t\texecuteAction( idresetFromComp, desc2707, DialogModes.NO );\r\n\t\t\t}catch(e){}//you cant reset comp if last document state is equal to current comp\r\n\t\t}else{\r\n\t\t\tvar idapplyComp = sTID( \"applyComp\" );\r\n\t\t\t\tvar desc189 = new ActionDescriptor();\r\n\t\t\t\tvar idnull = cTID( \"null\" );\r\n\t\t\t\t\tvar ref97 = new ActionReference();\r\n\t\t\t\t\tvar idcompsClass = sTID( \"compsClass\" );\r\n\t\t\t\t\tref97.putIdentifier( idcompsClass, id );\r\n\t\t\t\tdesc189.putReference( idnull, ref97 );\r\n\t\t\texecuteAction( idapplyComp, desc189, DialogModes.NO );\r\n\t\t}\r\n\t}\r\n\r\n\tfunction isInLockedFolder(layer){\r\n\t\t\r\n\t\twhile(layer.parent.typename != \"Document\"){\r\n\t\t\tlayer = layer.parent;\r\n\t\t\tif(layer.allLocked){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction hasHistorySnapshot(snapshotName){\r\n\t\ttry{\r\n\t\t\tvar ref = new ActionReference();\r\n\t\t\tvar idSnpS = charIDToTypeID( \"SnpS\" );\r\n\t\t\tref.putName( idSnpS, snapshotName );\r\n\t\t\texecuteActionGet( ref );\t\t\r\n\t\t\treturn true;\r\n\t\t}catch(e){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t// IDs\r\n\tfunction getClippedLayersList(soDesc){\r\n\t\tvar result = new Array();\r\n\t\t// we need fresh soIndex so we take ID and look for new updated index\r\n\t\tvar soIndex = lx.convertLayerIdToIndex(soDesc.getInteger(stringIDToTypeID('layerID')));\r\n\t\tvar limitLayers = soDesc.getInteger(stringIDToTypeID('count'));\r\n\t\tvar bgCounter = 0;\r\n\t\ttry {\r\n\t\t\tvar dummy = docMaster.backgroundLayer;\r\n\t\t\tbgCounter=1;\r\n\t\t}catch(e){} //do nothing\r\n\t\t\r\n\t\tfor(soIndex; soIndex <= limitLayers /*break inside*/; soIndex++){\r\n\t\t\tvar testedLayerDesc = lx.getLayerDescriptor (soIndex-bgCounter);\r\n\t\t\tvar isClipped = testedLayerDesc.getBoolean(stringIDToTypeID('group'));\r\n\t\t\tvar fromID = testedLayerDesc.getInteger(stringIDToTypeID('layerID'));\r\n\t\t\tif(!isClipped){break}\r\n\t\t\tresult.push(fromID)\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction moveAllClippedLayers(layerSet){\r\n\t\tvar layerSetIndex = getLayerDescriptorByID(layerSet.id).getInteger(stringIDToTypeID('itemIndex'));\r\n\t\t\r\n\t\tfor(var i = clippedLayers.length-1, j=0; i >= 0; i--){\r\n\t\t\tvar fromID = clippedLayers[i];\r\n\t\t\tvar idmove = charIDToTypeID( \"move\" );\r\n\t\t\t\tvar desc102 = new ActionDescriptor();\r\n\t\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\t\tvar ref60 = new ActionReference();\r\n\t\t\t\t\tvar idLyr = charIDToTypeID( \"Lyr \" );\r\n\t\t\t\t\tref60.putIdentifier( idLyr, fromID );\r\n\t\t\t\t\t\r\n\t\t\t\tdesc102.putReference( idnull, ref60 );\r\n\t\t\t\tvar idT = charIDToTypeID( \"T   \" );\r\n\t\t\t\t\tvar ref61 = new ActionReference();\r\n\t\t\t\t\tref61.putIndex( idLyr, layerSetIndex ); //global variable\r\n\t\t\t\tdesc102.putReference( idT, ref61 );\r\n\t\t\t\tvar idAdjs = charIDToTypeID( \"Adjs\" );\r\n\t\t\t\tdesc102.putBoolean( idAdjs, false );\r\n\t\t\t\tvar idVrsn = charIDToTypeID( \"Vrsn\" );\r\n\t\t\t\tdesc102.putInteger( idVrsn, 5 );\r\n\t\t\t\t\r\n\t\t\texecuteAction( idmove, desc102, DialogModes.NO );\r\n\t\t\t\r\n\t\t\t//because layer paste between layer and clipped layer is clipped by default\r\n\t\t\tif(j===0){\r\n\t\t\t\tvar idGrpL = charIDToTypeID( \"GrpL\" );\r\n\t\t\t\t\tvar desc104 = new ActionDescriptor();\r\n\t\t\t\t\tdesc104.putReference( idnull, ref60 );\r\n\t\t\t\texecuteAction( idGrpL, desc104, DialogModes.NO );\r\n\t\t\t}\r\n\t\t\tj++;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction unlockEverything(){\r\n\t\tif(lx.existsBackgroundLayer()){\r\n\t\t\tunlockBackground();\r\n\t\t}\r\n\t\tunlockAllLocks();\r\n\r\n\t\tfunction unlockBackground() {\r\n\t\tvar idsetd = cTID( \"setd\" );\r\n\t\t\tvar desc1675 = new ActionDescriptor();\r\n\t\t\t\tvar ref1104 = new ActionReference();\r\n\t\t\t\tref1104.putProperty(  cTID('Lyr '),  cTID('Bckg'));\r\n\t\t\tdesc1675.putReference( cTID('null'), ref1104 );\r\n\t\t\t\tvar desc1676 = new ActionDescriptor();\r\n\t\t\t\tdesc1676.putUnitDouble(  cTID('Opct'),  cTID('#Prc'), 100.000000 );\r\n\t\t\t\tdesc1676.putEnumerated(  cTID('Md  '),  cTID('BlnM'),  cTID('Nrml'));\r\n\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\tdesc1675.putObject( cTID('T   '), cTID('Lyr '), desc1676 );\r\n\t\t\tdesc1675.putInteger( cTID('LyrI'), 7 );\r\n\t\texecuteAction( idsetd, desc1675, DialogModes.NO );\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getLayerDescriptorByID(id){\r\n\t\tvar ref = new ActionReference();  \r\n\t\tref.putIdentifier( cTID( \"Lyr \" ), id );    \r\n\t\tvar desc = executeActionGet(ref); \r\n\t\treturn desc;\r\n\t}\r\n\r\n\tfunction getSOInstances(listID){\r\n\t\tvar so = {};\r\n\r\n\t\tfor(var i = 0, len = listID.length; i < len; i++){\r\n\t\t\tvar desc = getLayerDescriptorByID(listID[i]);\r\n\t\t\tvar soID = desc.getObjectValue(stringIDToTypeID('smartObjectMore')).getString(stringIDToTypeID('ID'));\r\n\t\t\tvar compID = desc.getObjectValue(stringIDToTypeID('smartObjectMore')).getInteger(stringIDToTypeID('comp'));\r\n\t\t\tvar hasComps = desc.getObjectValue(stringIDToTypeID('smartObject')).getObjectValue(stringIDToTypeID('compsList')).hasKey(stringIDToTypeID('compList'))\r\n\t\t\t\r\n\t\t\tvar layerID = listID[i].toString();\r\n\t\t\tso[soID] ? null : so[soID] = new Object();\r\n\t\t\tso[soID].windowMethod = hasComps;\r\n\t\t\tso[soID][compID] ? null : so[soID][compID] = new Object();\r\n\t\t\tso[soID][compID][layerID] = desc;\r\n\t\t}\r\n\r\n\t\treturn so;\r\n\t}\r\n\r\n\tfunction unlockAllLocks() {\r\n\t\tvar idsetd = cTID( \"setd\" );\r\n\t\tvar desc50 = new ActionDescriptor();\r\n\t\tvar idnull = cTID( \"null\" );\r\n\t\t\tvar ref28 = new ActionReference();\r\n\t\t\tref28.putEnumerated( cTID('Lyr '), cTID('Ordn'), cTID('Trgt') );\r\n\t\tdesc50.putReference( idnull, ref28 );\r\n\t\tvar idT = cTID( \"T   \" );\r\n\t\t\tvar desc51 = new ActionDescriptor();\r\n\t\t\tvar idlayerLocking = sTID( \"layerLocking\" );\r\n\t\t\t\tvar desc52 = new ActionDescriptor();\r\n\t\t\t\tvar idprotectNone = sTID( \"protectNone\" );\r\n\t\t\t\tdesc52.putBoolean( idprotectNone, true );\r\n\t\t\tvar idlayerLocking = sTID( \"layerLocking\" );\r\n\t\t\tdesc51.putObject( idlayerLocking, idlayerLocking, desc52 );\r\n\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\tdesc50.putObject( idT, idLyr, desc51 );\r\n\texecuteAction( idsetd, desc50, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction deleteHiddenLayers(){\r\n\t\tvar idDlt = cTID( \"Dlt \" );\r\n\t\t\tvar desc213 = new ActionDescriptor();\r\n\t\t\tvar idnull = cTID( \"null\" );\r\n\t\t\t\tvar ref110 = new ActionReference();\r\n\t\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\t\tvar idOrdn = cTID( \"Ordn\" );\r\n\t\t\t\tvar idhidden = sTID( \"hidden\" );\r\n\t\t\t\tref110.putEnumerated( idLyr, idOrdn, idhidden );\r\n\t\t\tdesc213.putReference( idnull, ref110 );\r\n\t\texecuteAction( idDlt, desc213, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction selectAllLayers() {\r\n\t\tvar ref = new ActionReference();\r\n\t\tref.putEnumerated(cTID('Lyr '), cTID('Ordn'), cTID('Trgt'));\r\n\t\tvar desc = new ActionDescriptor();\r\n\t\tdesc.putReference(cTID('null'), ref);\r\n\texecuteAction(sTID('selectAllLayers'), desc, DialogModes.NO);\r\n\t}\r\n\t\r\n\tfunction convertToLinkedSo(filename){\r\n\t\tvar file = new File(Folder.temp+\"/\"+filename);\r\n\t\t\r\n\t\tvar idplacedLayerConvertToLinked = stringIDToTypeID( \"placedLayerConvertToLinked\" );\r\n\t\t\tvar desc78 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref46 = new ActionReference();\r\n\t\t\t\tvar idLyr = charIDToTypeID( \"Lyr \" );\r\n\t\t\t\tvar idOrdn = charIDToTypeID( \"Ordn\" );\r\n\t\t\t\tvar idTrgt = charIDToTypeID( \"Trgt\" );\r\n\t\t\t\tref46.putEnumerated( idLyr, idOrdn, idTrgt );\r\n\t\t\tdesc78.putReference( idnull, ref46 );\r\n\t\t\tvar idUsng = charIDToTypeID( \"Usng\" );\r\n\t\t\tdesc78.putPath( idUsng, file );\r\n\t\texecuteAction( idplacedLayerConvertToLinked, desc78, DialogModes.NO );\r\n\t\t\r\n\t\treturn file;\r\n\t}\r\n\r\n\t\r\n\tfunction duplicateToDocument(documentID){\r\n\t\ttry{\r\n\t\t\tvar idDplc = cTID( \"Dplc\" );\r\n\t\t\t\tvar desc231 = new ActionDescriptor();\r\n\t\t\t\tvar idnull = cTID( \"null\" );\r\n\t\t\t\t\tvar ref121 = new ActionReference();\r\n\t\t\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\t\t\tvar idOrdn = cTID( \"Ordn\" );\r\n\t\t\t\t\tvar idTrgt = cTID( \"Trgt\" );\r\n\t\t\t\t\tref121.putEnumerated( idLyr, idOrdn, idTrgt );\r\n\t\t\t\tdesc231.putReference( idnull, ref121 );\r\n\t\t\t\tvar idT = cTID( \"T   \" );\r\n\t\t\t\t\tvar ref122 = new ActionReference();\r\n\t\t\t\t\tvar idDcmn = cTID( \"Dcmn\" );\r\n\t\t\t\t\tref122.putIdentifier( idDcmn, documentID );\r\n\t\t\t\tdesc231.putReference( idT, ref122 );\r\n\t\t\t\tvar idIdnt = cTID( \"Idnt\" );\r\n\t\t\texecuteAction( idDplc, desc231, DialogModes.NO );\r\n\t\t}\r\n\t\tcatch(e){\r\n\t\t\t\talert(\"Can't duplicate content\")\r\n\t\t}\r\n\t}\r\n\r\n\tfunction isSOContentOutsideCanvas(layerID, soBounds){\r\n\t\t\r\n\t\tvar index = lx.convertLayerIdToIndex(layerID);\r\n\t\tvar groupID = stringIDToTypeID('group');\r\n\t\tvar sectionID = stringIDToTypeID('layerSection');\r\n\t\tvar endID = stringIDToTypeID('layerSectionEnd');\r\n\t\tvar startID = stringIDToTypeID('layerSectionStart');\r\n\t\tvar boundsID = stringIDToTypeID('bounds');\r\n\t\tvar leftID = stringIDToTypeID('left');\r\n\t\tvar rightID = stringIDToTypeID('right');\r\n\t\tvar topID = stringIDToTypeID('top');\r\n\t\tvar bottomID = stringIDToTypeID('bottom');\r\n\r\n\t\tfor(var i = index-1, level=0; level >= 0 ; i--){\r\n\t\t\tvar desc = lx.getLayerDescriptor(i);\r\n\t\t\tvar clipped = desc.getBoolean(groupID);\r\n\t\t\t\r\n\t\t\tif(clipped){continue;}\r\n\t\t\t\r\n\t\t\tvar layerSection = desc.getEnumerationValue(sectionID);\r\n\t\t\tif(layerSection === startID){\r\n\t\t\t\tlevel++\r\n\t\t\t}\r\n\t\t\telse if(layerSection === endID){\r\n\t\t\t\tlevel--\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tvar bounds = desc.getObjectValue(boundsID);\r\n\t\t\t   \r\n\t\t\t\tvar isOutside = (\r\n\t\t\t\t\tsoBounds.left > bounds.getUnitDoubleValue(leftID) ||\r\n\t\t\t\t\tsoBounds.top > bounds.getUnitDoubleValue(topID) ||\r\n\t\t\t\t\tsoBounds.right < bounds.getUnitDoubleValue(rightID) ||\r\n\t\t\t\t\tsoBounds.bottom < bounds.getUnitDoubleValue(bottomID)\r\n\t\t\t\t);\r\n\t\t\t\tif(isOutside){\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction clearSOContentInParentDoc(layerID){\r\n\t\t\r\n\t\tvar index = lx.convertLayerIdToIndex(layerID);\r\n\t\tvar deleteList = new Array();\r\n\t\tvar sectionID = stringIDToTypeID('layerSection');\r\n\t\tvar endID = stringIDToTypeID('layerSectionEnd');\r\n\t\tvar startID = stringIDToTypeID('layerSectionStart');\r\n\t\tvar visibleID = stringIDToTypeID('visible');\r\n\r\n\t\tfor(var i = index-1, level=0; level >= 0 ; i--){\r\n\t\t\tvar desc = lx.getLayerDescriptor(i);\r\n\t\t\tvar visible = desc.getBoolean(visibleID);\r\n\t\t\t\r\n\t\t\tif(!visible){\r\n\t\t\t\tdeleteList.push(lx.convertLayerIndexToId(i));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar layerSection = desc.getEnumerationValue(sectionID);\r\n\t\t\tif(layerSection===startID){\r\n\t\t\t\tlevel++\r\n\t\t\t}\r\n\t\t\telse if(layerSection===endID){\r\n\t\t\t\tlevel--\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfor(var i = deleteList.length-1; i >= 0; i--){\r\n\t\t\tlx.deleteLayers(deleteList[i],\"id\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction isSmartObjectDeformed(cornerPoints, innerWidth, innerHeight){\r\n\t\tvar cp = cornerPoints;\r\n\t\t\r\n\t\tvar notRectangle = !(cp.leftTop.x === cp.leftBottom.x && cp.rightTop.x === cp.rightBottom.x && cp.leftTop.y === cp.rightTop.y && cp.leftBottom.y === cp.rightBottom.y);\r\n\t\tvar notSizeMatch = !((cp.rightTop.x - cp.leftTop.x === innerWidth) && (cp.leftBottom.y - cp.leftTop.y === innerHeight))\r\n\t\tvar rotatedOrFlipped = !(cp.leftTop.x < cp.rightTop.x && cp.leftTop.y < cp.rightBottom.y)\r\n\t\t\r\n\t\tvar isDeformed = (notRectangle || notSizeMatch || rotatedOrFlipped)\r\n\t\treturn isDeformed;\r\n\t\t\r\n\t}\r\n\r\n\tfunction cornersActionListToObject(nonAffineTransform){\r\n\t\tvar result = {};\r\n\t\tresult.leftTop = {\r\n\t\t\tx:nonAffineTransform.getDouble(0), \r\n\t\t\ty:nonAffineTransform.getDouble(1)\r\n\t\t};\r\n\t\tresult.rightTop = {\r\n\t\t\tx:nonAffineTransform.getDouble(2), \r\n\t\t\ty:nonAffineTransform.getDouble(3)\r\n\t\t};\r\n\t\tresult.rightBottom = {\r\n\t\t\tx:nonAffineTransform.getDouble(4), \r\n\t\t\ty:nonAffineTransform.getDouble(5)\r\n\t\t};\r\n\t\tresult.leftBottom = {\r\n\t\t\tx:nonAffineTransform.getDouble(6), \r\n\t\t\ty:nonAffineTransform.getDouble(7)\r\n\t\t};\r\n\t\t\r\n\t\r\n\t\treturn result;    \r\n\t}\r\n\r\n\tfunction closeWindow(documentID){\r\n\t\tvar idCls = cTID( \"Cls \" );\r\n\t\t\tvar desc255 = new ActionDescriptor();\r\n\t\t\tvar idSvng = cTID( \"Svng\" );\r\n\t\t\tvar idYsN = cTID( \"YsN \" );\r\n\t\t\tvar idN = cTID( \"N   \" );\r\n\t\t\tdesc255.putEnumerated( idSvng, idYsN, idN );\r\n\t\t\tvar idDocI = cTID( \"DocI\" );\r\n\t\t\tdesc255.putInteger( idDocI, documentID );\r\n\t\t\tvar idforceNotify = sTID( \"forceNotify\" );\r\n\t\t\tdesc255.putBoolean( idforceNotify, true );\r\n\t\texecuteAction( idCls, desc255, DialogModes.NO );\r\n\t}\r\n\r\n\t//\r\n\t// hide selected layer(s)\r\n\tfunction hideLayer(){\r\n\t\tvar idHd = cTID( \"Hd  \" );\r\n\t\t\tvar desc19 = new ActionDescriptor();\r\n\t\t\tvar idnull = cTID( \"null\" );\r\n\t\t\t\tvar list9 = new ActionList();\r\n\t\t\t\t\tvar ref15 = new ActionReference();\r\n\t\t\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\t\t\tvar idOrdn = cTID( \"Ordn\" );\r\n\t\t\t\t\tvar idTrgt = cTID( \"Trgt\" );\r\n\t\t\t\t\tref15.putEnumerated( idLyr, idOrdn, idTrgt );\r\n\t\t\t\tlist9.putReference( ref15 );\r\n\t\t\tdesc19.putList( idnull, list9 );\r\n\t\texecuteAction( idHd, desc19, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction copyLayerStyle(){\r\n\t\tvar idCpFX = cTID( \"CpFX\" );\r\n\t\texecuteAction( idCpFX, undefined, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction pasteLayerStyle(){\r\n\t\tvar idPaFX = cTID( \"PaFX\" );\r\n\t\t\tvar desc286 = new ActionDescriptor();\r\n\t\t\tvar idallowPasteFXOnLayerSet = sTID( \"allowPasteFXOnLayerSet\" );\r\n\t\t\tdesc286.putBoolean( idallowPasteFXOnLayerSet, true );\r\n\t\texecuteAction( idPaFX, desc286, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction duplicateVectorMask(idFrom,idAt){\r\n\t\tvar idMk = cTID( \"Mk  \" );\r\n\t\t\tvar desc376 = new ActionDescriptor();\r\n\t\t\tvar idnull = cTID( \"null\" );\r\n\t\t\t\tvar ref270 = new ActionReference();\r\n\t\t\t\tvar idPath = cTID( \"Path\" );\r\n\t\t\t\tref270.putClass( idPath );\r\n\t\t\tdesc376.putReference( idnull, ref270 );\r\n\t\t\tvar tidAt = cTID( \"At  \" );\r\n\t\t\t\tvar ref271 = new ActionReference();\r\n\t\t\t\tvar idvectorMask = sTID( \"vectorMask\" );\r\n\t\t\t\tref271.putEnumerated( idPath, idPath, idvectorMask );\r\n\t\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\t\tref271.putIdentifier( idLyr, idAt );\r\n\t\t\tdesc376.putReference( tidAt, ref271 );\r\n\t\t\tvar idUsng = cTID( \"Usng\" );\r\n\t\t\t\tvar ref272 = new ActionReference();\r\n\t\t\t\tref272.putEnumerated( idPath, idPath, idvectorMask );\r\n\t\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\t\tref272.putIdentifier( idLyr, idFrom );\r\n\t\t\tdesc376.putReference( idUsng, ref272 );\r\n\t\t\tvar idDplc = cTID( \"Dplc\" );\r\n\t\t\tdesc376.putBoolean( idDplc, true );\r\n\t\texecuteAction( idMk, desc376, DialogModes.NO );\r\n\t}\r\n\t\r\n\tfunction duplicateMask(idFrom,idAt){\r\n\t\tvar idMk = cTID( \"Mk  \" );\r\n\t\t\tvar desc381 = new ActionDescriptor();\r\n\t\t\tvar idNw = cTID( \"Nw  \" );\r\n\t\t\tvar idChnl = cTID( \"Chnl\" );\r\n\t\t\tvar tidAt = cTID( \"At  \" );\r\n\t\t\tdesc381.putClass( idNw, idChnl );\r\n\t\t\t\tvar ref277 = new ActionReference();\r\n\t\t\t\tvar idChnl = cTID( \"Chnl\" );\r\n\t\t\t\tvar idMsk = cTID( \"Msk \" );\r\n\t\t\t\tref277.putEnumerated( idChnl, idChnl, idMsk );\r\n\t\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\t\tref277.putIdentifier( idLyr, idAt );\r\n\t\t\tdesc381.putReference( tidAt, ref277 );\r\n\t\t\tvar idUsng = cTID( \"Usng\" );\r\n\t\t\t\tvar ref278 = new ActionReference();\r\n\t\t\t\tvar idChnl = cTID( \"Chnl\" );\r\n\t\t\t\tvar idMsk = cTID( \"Msk \" );\r\n\t\t\t\tref278.putEnumerated( idChnl, idChnl, idMsk );\r\n\t\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\t\tref278.putIdentifier( idLyr, idFrom  );\r\n\t\t\tdesc381.putReference( idUsng, ref278 );\r\n\t\t\tvar idDplc = cTID( \"Dplc\" );\r\n\t\t\tdesc381.putBoolean( idDplc, true );\r\n\t\texecuteAction( idMk, desc381, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction disableVectorMask(id){\r\n\t\tvar idsetd = charIDToTypeID( \"setd\" );\r\n\t\t\tvar desc1320 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref703 = new ActionReference();\r\n\t\t\t\tvar idLyr = charIDToTypeID( \"Lyr \" );\r\n\t\t\t\tref703.putIdentifier( idLyr, id);\r\n\t\t\tdesc1320.putReference( idnull, ref703 );\r\n\t\t\tvar idT = charIDToTypeID( \"T   \" );\r\n\t\t\t\tvar desc1321 = new ActionDescriptor();\r\n\t\t\t\tvar idvectorMaskEnabled = stringIDToTypeID( \"vectorMaskEnabled\" );\r\n\t\t\t\tdesc1321.putBoolean( idvectorMaskEnabled, false );\r\n\t\t\tdesc1320.putObject( idT, idLyr, desc1321 );\r\n\t\texecuteAction( idsetd, desc1320, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction disableMask(id){\r\n\t\tvar idsetd = charIDToTypeID( \"setd\" );\r\n\t\t\tvar desc1327 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref707 = new ActionReference();\r\n\t\t\t\tvar idLyr = charIDToTypeID( \"Lyr \" );\r\n\t\t\t\tref707.putIdentifier( idLyr, id);\r\n\t\t\tdesc1327.putReference( idnull, ref707 );\r\n\t\t\tvar idT = charIDToTypeID( \"T   \" );\r\n\t\t\t\tvar desc1328 = new ActionDescriptor();\r\n\t\t\t\tvar idUsrM = charIDToTypeID( \"UsrM\" );\r\n\t\t\t\tdesc1328.putBoolean( idUsrM, false );\r\n\t\t\tdesc1327.putObject( idT, idLyr, desc1328 );\r\n\t\texecuteAction( idsetd, desc1327, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction moveLayerOrder(toIndex, fromID){\r\n\t\tvar idmove = cTID( \"move\" );\r\n\t\t\tvar desc594 = new ActionDescriptor();\r\n\t\t\tvar idnull = cTID( \"null\" );\r\n\t\t\t\tvar ref449 = new ActionReference();\r\n\t\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\t\tvar idOrdn = cTID( \"Ordn\" );\r\n\t\t\t\tvar idTrgt = cTID( \"Trgt\" );\r\n\t\t\t\tref449.putEnumerated( idLyr, idOrdn, idTrgt );\r\n\t\t\tdesc594.putReference( idnull, ref449 );\r\n\t\t\tvar idT = cTID( \"T   \" );\r\n\t\t\t\tvar ref450 = new ActionReference();\r\n\t\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\t\tref450.putIndex( idLyr, toIndex);\r\n\t\t\tdesc594.putReference( idT, ref450 );\r\n\t\t\tvar idAdjs = cTID( \"Adjs\" );\r\n\t\t\tdesc594.putBoolean( idAdjs, false );\r\n\t\t\tvar idVrsn = cTID( \"Vrsn\" );\r\n\t\t\tdesc594.putInteger( idVrsn, 5 );\r\n\t\t\tvar idLyrI = cTID( \"LyrI\" );\r\n\t\t\t\tvar list253 = new ActionList();\r\n\t\t\t\tlist253.putInteger( fromID );\r\n\t\t\tdesc594.putList( idLyrI, list253 );\r\n\t\t\r\n\t\ttry{\r\n\t\t\texecuteAction( idmove, desc594, DialogModes.NO );\r\n\t\t}catch(e){\r\n\t\t\talert(e.message);\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\t// A helper function for debugging\r\n\t// It also helps the user see what is going on\r\n\t// if you turn it off for this example you\r\n\t// get a flashing cursor for a number time\r\n\tfunction WaitForRedraw()\r\n\t{\r\n\t\tvar eventWait = cTID(\"Wait\")\r\n\t\tvar enumRedrawComplete = cTID(\"RdCm\")\r\n\t\tvar typeState = cTID(\"Stte\")\r\n\t\tvar keyState = cTID(\"Stte\")\r\n\t\tvar desc = new ActionDescriptor()\r\n\t\tdesc.putEnumerated(keyState, typeState, enumRedrawComplete)\r\n\t\texecuteAction(eventWait, desc, DialogModes.NO)\r\n\t}\r\n\r\n\tfunction filterValidLayers(indexList){\r\n\t\tvar result = [];\r\n\t\t\r\n\t\tfor(var i = 0, len=indexList.length; i < len; i++){\r\n\t\t\tvar notLinkMissing = true;\r\n\t\t\r\n\t\t\tvar desc = getLayerDescriptorByID(indexList[i]);\r\n\t\t\t\r\n\t\t\tvar isSmartObjectLayer = desc.getInteger(sTID('layerKind')) == 5;\r\n\t\t\t\r\n\t\t\tif(isSmartObjectLayer){\r\n\t\t\t\tvar notProtectAll = !desc.getObjectValue(sTID('layerLocking')).getBoolean(sTID('protectAll'));\r\n\t\t\t\tvar notProtectPosition = !desc.getObjectValue(sTID('layerLocking')).getBoolean(sTID('protectPosition'));\r\n\t\t\t\tvar notVector = desc.getObjectValue(sTID('smartObject')).getEnumerationValue(sTID('placed')) === sTID(\"rasterizeContent\");\r\n\t\t\t\tvar hasKeyLinkMissing = desc.getObjectValue(sTID('smartObject')).hasKey(sTID('linkMissing'));\r\n\t\t\t\t\r\n\t\t\t\tif(hasKeyLinkMissing){\r\n\t\t\t\t\tnotLinkMissing = !desc.getObjectValue(sTID('smartObject')).getBoolean(sTID('linkMissing'));\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\tif(notProtectAll && notProtectPosition && notVector && notLinkMissing){\r\n\t\t\t\t\tresult.push(indexList[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction collapseFolder(){\r\n\t\tvar idsetd = charIDToTypeID( \"setd\" );\r\n\t\t\tvar desc2 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref1 = new ActionReference();\r\n\t\t\t\tvar idPrpr = charIDToTypeID( \"Prpr\" );\r\n\t\t\t\tvar idTxtS = stringIDToTypeID( \"layerSectionExpanded\" );\r\n\t\t\t\tref1.putProperty( idPrpr, idTxtS );\r\n\t\t\t\tvar idLyr = charIDToTypeID( \"Lyr \" );\r\n\t\t\t\tvar idOrdn = charIDToTypeID( \"Ordn\" );\r\n\t\t\t\tvar idTrgt = charIDToTypeID( \"Trgt\" );\r\n\t\t\t\tref1.putEnumerated( idLyr, idOrdn, idTrgt );\r\n\t\t\tdesc2.putReference( idnull, ref1 );\r\n\t\t\tvar idT = charIDToTypeID( \"T   \" );\r\n\t\t\tdesc2.putBoolean( charIDToTypeID( \"T   \" ), false );\r\n\t\t\tdesc2.putBoolean( stringIDToTypeID( \"recursive\" ), true );\r\n\t\texecuteAction( idsetd, desc2, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction translate(x,y){\r\n\t\tvar desc = new LxActionDescriptor();\r\n\t\tdesc.lxRefLayer();\r\n\t\tvar descTo = new LxActionDescriptor();\r\n\t\tdescTo.putUnitDouble(\"horizontal\", \"pixelsUnit\", x);\r\n\t\tdescTo.putUnitDouble(\"vertical\", \"pixelsUnit\", y);\r\n\t\tdesc.putObject(\"to\",\"offset\", descTo);\r\n\t\t\r\n\t\ttry{\r\n\t\t\texecuteAction( \"move\", desc);\r\n\t\t}catch(e){\r\n\t\t\t// e.g. empty bounding box... no pixel to transform \r\n\t\t}\r\n\t}\r\n\r\n\tfunction calculateScaleRatio(width, height, soPoints){\r\n\t\tvar soInnerPerimeter = (width*2 + height*2);\r\n\t\tvar soDeformedPerimeter = 0;\r\n\t\t\r\n\t\tvar leftTopX = soPoints.getDouble(0);\r\n\t\tvar leftTopY = soPoints.getDouble(1);\r\n\t\tvar rightTopX = soPoints.getDouble(2) - leftTopX;\r\n\t\tvar rightTopY = soPoints.getDouble(3) - leftTopY;\r\n\t\tvar rightBottomX = soPoints.getDouble(4) - leftTopX;\r\n\t\tvar rightBottomY = soPoints.getDouble(5) - leftTopY;\r\n\t\tvar leftBottomX = soPoints.getDouble(6) - leftTopX;\r\n\t\tvar leftBottomY = soPoints.getDouble(7) - leftTopY;\r\n\t\tleftTopX = 0;\r\n\t\tleftTopY = 0;\r\n\t\t\r\n\t\tsoDeformedPerimeter += edgeLength (leftTopX, leftTopY, rightTopX, rightTopY);\r\n\t\tsoDeformedPerimeter += edgeLength (rightTopX, rightTopY, rightBottomX, rightBottomY);\r\n\t\tsoDeformedPerimeter += edgeLength (rightBottomX, rightBottomY, leftBottomX, leftBottomY);\r\n\t\tsoDeformedPerimeter += edgeLength (leftBottomX, leftBottomY, leftTopX, leftTopY);\r\n\t\t\r\n\t\tfunction edgeLength (xa, ya, xb, yb){\r\n\t\t\treturn Math.sqrt( Math.pow(xb - xa, 2) + Math.pow(yb - ya,2));\r\n\t\t}\r\n\t\t\r\n\t\tvar result = (soDeformedPerimeter / soInnerPerimeter) * 100;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction doRectangleToQuadrilateral(width, height, cornerPoints){\r\n\t\tvar right = width, bottom = height;\r\n\t\tvar quadRect = new ActionList();\r\n\t\t\r\n\t\tquadRect.putUnitDouble(charIDToTypeID('#Pxl'),0); //leftTop\r\n\t\tquadRect.putUnitDouble(charIDToTypeID('#Pxl'),0);\r\n\r\n\t\tquadRect.putUnitDouble(charIDToTypeID('#Pxl'),right); //rightBottom\r\n\t\tquadRect.putUnitDouble(charIDToTypeID('#Pxl'),bottom);\r\n\t\t\r\n\t\tfunction transform(quadRect, points, rightBottomX, rightBottomY){\r\n\t\t\tvar args = new ActionDescriptor();\r\n\t\t\tvar quadCorners = new ActionList();\r\n\t\t\t\r\n\t\t\tquadCorners.putUnitDouble( charIDToTypeID('#Pxl'), points.leftTop.x);   //left top\r\n\t\t\tquadCorners.putUnitDouble( charIDToTypeID('#Pxl'), points.leftTop.y);\r\n\t\t\tquadCorners.putUnitDouble( charIDToTypeID('#Pxl'), points.rightTop.x);   //right top\r\n\t\t\tquadCorners.putUnitDouble( charIDToTypeID('#Pxl'), points.rightTop.y);\r\n\t\t\tquadCorners.putUnitDouble( charIDToTypeID('#Pxl'), rightBottomX || points.rightBottom.x);         //right bottom\r\n\t\t\tquadCorners.putUnitDouble( charIDToTypeID('#Pxl'), rightBottomY || points.rightBottom.y); \r\n\t\t\tquadCorners.putUnitDouble( charIDToTypeID('#Pxl'), points.leftBottom.x);   //left bottom\r\n\t\t\tquadCorners.putUnitDouble( charIDToTypeID('#Pxl'), points.leftBottom.y);\r\n\r\n\t\t\targs.putList( stringIDToTypeID(\"rectangle\"), quadRect );\r\n\t\t\targs.putList( stringIDToTypeID(\"quadrilateral\"), quadCorners );\r\n\r\n\t\t\texecuteAction( charIDToTypeID('Trnf'), args );\r\n\t\t}\r\n\t\r\n\t\ttry{\r\n\t\t\ttransform(quadRect, cornerPoints);\r\n\t\t}catch(e){\r\n\t\t\t// we can't do only parallelograms if smartObject content contains text layers or vector smart objects\r\n\t\t\tvar rightBottomX = cornerPoints.leftBottom.x + (cornerPoints.rightTop.x - cornerPoints.leftTop.x);\r\n\t\t\tvar rightBottomY = cornerPoints.leftBottom.y + (cornerPoints.rightTop.y - cornerPoints.leftTop.y);\r\n\t\t\t\r\n\t\t\ttry{\r\n\t\t\t\ttransform(quadRect, cornerPoints, rightBottomX, rightBottomY);\r\n\t\t\t}catch(e){\r\n\t\t\t\t/* e.g. empty bounding box... no pixel to transform */\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction canCopyPasteStyle(desc){\r\n\t\tvar result = desc.hasKey(stringIDToTypeID('layerEffects')) || desc.getEnumerationValue(stringIDToTypeID('mode')) !== stringIDToTypeID(\"normal\") || desc.getInteger(stringIDToTypeID('opacity')) !== 255 || desc.getInteger(stringIDToTypeID('fillOpacity')) !==255;\r\n\t\treturn result;\r\n\t}\r\n\r\n\r\n\tfunction deselectPath(){\r\n\t\tvar idDslc = charIDToTypeID( \"Dslc\" );\r\n\t\t\tvar desc1797 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref990 = new ActionReference();\r\n\t\t\t\tvar idPath = charIDToTypeID( \"Path\" );\r\n\t\t\t\tvar idOrdn = charIDToTypeID( \"Ordn\" );\r\n\t\t\t\tvar idTrgt = charIDToTypeID( \"Trgt\" );\r\n\t\t\t\tref990.putEnumerated( idPath, idOrdn, idTrgt );\r\n\t\t\tdesc1797.putReference( idnull, ref990 );\r\n\t\texecuteAction( idDslc, desc1797, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction ungroupSelectedLayer(){\r\n\t\tvar idungroupLayersEvent = stringIDToTypeID( \"ungroupLayersEvent\" );\r\n\t\tvar desc204 = new ActionDescriptor();\r\n\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\tvar ref118 = new ActionReference();\r\n\t\t\tvar idLyr = charIDToTypeID( \"Lyr \" );\r\n\t\t\tvar idOrdn = charIDToTypeID( \"Ordn\" );\r\n\t\t\tvar idTrgt = charIDToTypeID( \"Trgt\" );\r\n\t\t\tref118.putEnumerated( idLyr, idOrdn, idTrgt );\r\n\t\tdesc204.putReference( idnull, ref118 );\r\n\t\texecuteAction( idungroupLayersEvent, desc204, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction selectPixels(left, top, width, height){\r\n\t\tvar idsetd = charIDToTypeID( \"setd\" );\r\n\t\t\tvar desc683 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref276 = new ActionReference();\r\n\t\t\t\tvar idChnl = charIDToTypeID( \"Chnl\" );\r\n\t\t\t\tvar idfsel = charIDToTypeID( \"fsel\" );\r\n\t\t\t\tref276.putProperty( idChnl, idfsel );\r\n\t\t\tdesc683.putReference( idnull, ref276 );\r\n\t\t\tvar idT = charIDToTypeID( \"T   \" );\r\n\t\t\t\tvar desc684 = new ActionDescriptor();\r\n\t\t\t\tvar idTop = charIDToTypeID( \"Top \" );\r\n\t\t\t\tvar idPxl = charIDToTypeID( \"#Pxl\" );\r\n\t\t\t\tdesc684.putUnitDouble( idTop, idPxl, top );\r\n\t\t\t\tvar idLeft = charIDToTypeID( \"Left\" );\r\n\t\t\t\tvar idPxl = charIDToTypeID( \"#Pxl\" );\r\n\t\t\t\tdesc684.putUnitDouble( idLeft, idPxl, left );\r\n\t\t\t\tvar idBtom = charIDToTypeID( \"Btom\" );\r\n\t\t\t\tvar idPxl = charIDToTypeID( \"#Pxl\" );\r\n\t\t\t\tdesc684.putUnitDouble( idBtom, idPxl, top+height );\r\n\t\t\t\tvar idRght = charIDToTypeID( \"Rght\" );\r\n\t\t\t\tvar idPxl = charIDToTypeID( \"#Pxl\" );\r\n\t\t\t\tdesc684.putUnitDouble( idRght, idPxl, left+width );\r\n\t\t\tvar idRctn = charIDToTypeID( \"Rctn\" );\r\n\t\t\tdesc683.putObject( idT, idRctn, desc684 );\r\n\t\texecuteAction( idsetd, desc683, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction preventFromArtboardMessUp(){\r\n\t\tvar desc = new LxActionDescriptor();\r\n\t\tdesc.lxRefLayer();\r\n\t\tdesc.putBoolean( \"autoNestEnabled\" , false );\r\n\t\tdesc.putBoolean( \"autoExpandEnabled\" , false );\r\n\t\tdesc.putBoolean( \"autoPositionEnabled\" , false );\t\t\r\n\t\texecuteAction( \"editArtboardEvent\", desc);\r\n\t}\r\n\r\n\tfunction revertArtboardsSettings(){\r\n\t\tvar desc = new LxActionDescriptor();\r\n\t\tdesc.lxRefLayer();\r\n\t\tdesc.putBoolean( \"autoNestEnabled\" , artboardsSettings.autoNestEnabled );\r\n\t\tdesc.putBoolean( \"autoExpandEnabled\" , artboardsSettings.autoExpandEnabled );\r\n\t\tdesc.putBoolean( \"autoPositionEnabled\" , artboardsSettings.autoPositionEnabled );\t\t\r\n\t\texecuteAction( \"editArtboardEvent\", desc);\r\n\t}\r\n\r\n\tfunction deselectPixels(){\r\n\t\tvar idsetd = charIDToTypeID( \"setd\" );\r\n\t\t\tvar desc1000 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref414 = new ActionReference();\r\n\t\t\t\tvar idChnl = charIDToTypeID( \"Chnl\" );\r\n\t\t\t\tvar idfsel = charIDToTypeID( \"fsel\" );\r\n\t\t\t\tref414.putProperty( idChnl, idfsel );\r\n\t\t\tdesc1000.putReference( idnull, ref414 );\r\n\t\t\tvar idT = charIDToTypeID( \"T   \" );\r\n\t\t\tvar idOrdn = charIDToTypeID( \"Ordn\" );\r\n\t\t\tvar idNone = charIDToTypeID( \"None\" );\r\n\t\t\tdesc1000.putEnumerated( idT, idOrdn, idNone );\r\n\t\texecuteAction( idsetd, desc1000, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction createMask(){\r\n\t\tvar idMk = charIDToTypeID( \"Mk  \" );\r\n\t\t\tvar desc685 = new ActionDescriptor();\r\n\t\t\tvar idNw = charIDToTypeID( \"Nw  \" );\r\n\t\t\tvar idChnl = charIDToTypeID( \"Chnl\" );\r\n\t\t\tdesc685.putClass( idNw, idChnl );\r\n\t\t\tvar idAt = charIDToTypeID( \"At  \" );\r\n\t\t\t\tvar ref277 = new ActionReference();\r\n\t\t\t\tvar idChnl = charIDToTypeID( \"Chnl\" );\r\n\t\t\t\tvar idChnl = charIDToTypeID( \"Chnl\" );\r\n\t\t\t\tvar idMsk = charIDToTypeID( \"Msk \" );\r\n\t\t\t\tref277.putEnumerated( idChnl, idChnl, idMsk );\r\n\t\t\tdesc685.putReference( idAt, ref277 );\r\n\t\t\tvar idUsng = charIDToTypeID( \"Usng\" );\r\n\t\t\tvar idUsrM = charIDToTypeID( \"UsrM\" );\r\n\t\t\tvar idRvlS = charIDToTypeID( \"RvlS\" );\r\n\t\t\tdesc685.putEnumerated( idUsng, idUsrM, idRvlS );\r\n\t\texecuteAction( idMk, desc685, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction setColorTag(pointer, type, color){\r\n\t\tvar idsetd = charIDToTypeID( \"setd\" );\r\n\t\t\tvar desc149 = new LxActionDescriptor();\r\n\t\t\tdesc149.lxRefLayer(pointer,type);\r\n\t\t\t\tvar desc150 = new LxActionDescriptor();\r\n\t\t\t\tdesc150.putEnumerated( \"Clr \", \"Clr \", color );\r\n\t\t\tdesc149.putObject( \"T   \", \"Lyr \", desc150 );\r\n\t\texecuteAction( idsetd, desc149, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction undo(){\r\n\t\tvar idslct = charIDToTypeID( \"slct\" );\r\n\t\t\tvar desc485 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref182 = new ActionReference();\r\n\t\t\t\tvar idHstS = charIDToTypeID( \"HstS\" );\r\n\t\t\t\tvar idOrdn = charIDToTypeID( \"Ordn\" );\r\n\t\t\t\tvar idPrvs = charIDToTypeID( \"Prvs\" );\r\n\t\t\t\tref182.putEnumerated( idHstS, idOrdn, idPrvs );\r\n\t\t\tdesc485.putReference( idnull, ref182 );\r\n\t\texecuteAction( idslct, desc485, DialogModes.NO );\r\n\t}\r\n\r\n\t// that's not photoshop comps. That is my custom overview\r\n\tfunction getCompsCount(obj){\r\n\t\tvar size = 0, key;\r\n\t\tfor (key in obj) {\r\n\t\t\tif (obj.hasOwnProperty(key) && (key !== \"file\" || key !== \"windowMethod\")) size++;\r\n\t\t}\r\n\t\treturn size;\r\n\t}\r\n\r\n\t// not tested on Mac. I don't know if cloud files are always synced. Workaround is embeding SO into document.\r\n\tfunction getCloudFilePath(soDesc){\r\n\t\tvar lookUpFile = new File(Folder.userData + \"/Adobe/Creative Cloud Libraries/LIBS/librarylookupfile\");\r\n\t\tif(!lookUpFile.exists)\r\n\t\t{\r\n\t\t\tthrow \"Error! Lookup file for cloud assests not found. Try embed smart objects first.\";\r\n\t\t}\r\n\r\n\t\tvar assetUrl = soDesc.getObjectValue(stringIDToTypeID('smartObject')).getObjectValue(stringIDToTypeID('link')).getString(stringIDToTypeID('elementReference'));\r\n\t\tvar urlEnd = assetUrl.split(\"/adobe-libraries/\")[1];\r\n\t\tvar library = urlEnd.split(\";node=\")[0];\r\n\t\tvar item = urlEnd.split(\";node=\")[1];\r\n\r\n\t\tlookUpFile.open('r');\r\n\t\tvar str = \"\";\r\n\t\twhile(!lookUpFile.eof)\r\n\t\tstr += lookUpFile.readln();\r\n\t\tlookUpFile.close();\r\n\t\t\r\n\t\tvar lookUpObj = eval(\"(\"+str+\")\");\r\n\t\tvar pathToSo = lookUpObj.libraries[library].elements[item].reps[0].path;\r\n\t\tif(!pathToSo)throw \"Couldn't find path to temp file of could smart objects. Try embed smart objects first.\";\r\n\t\t\r\n\t\treturn pathToSo;\r\n\t}\r\n\r\n\tfunction renameLayer(id, name){\r\n\t\tvar idsetd = charIDToTypeID( \"setd\" );\r\n\t\tvar desc573 = new ActionDescriptor();\r\n\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\tvar ref322 = new ActionReference();\r\n\t\t\tvar idLyr = charIDToTypeID( \"Lyr \" );\r\n\t\t\tref322.putIdentifier( idLyr, id );\r\n\t\tdesc573.putReference( idnull, ref322 );\r\n\t\tvar idT = charIDToTypeID( \"T   \" );\r\n\t\t\tvar desc574 = new ActionDescriptor();\r\n\t\t\tvar idNm = charIDToTypeID( \"Nm  \" );\r\n\t\t\tdesc574.putString( idNm, name );\r\n\t\tvar idLyr = charIDToTypeID( \"Lyr \" );\r\n\t\tdesc573.putObject( idT, idLyr, desc574 );\r\n\t\texecuteAction( idsetd, desc573, DialogModes.NO );\r\n\t}\r\n\r\n\t// here we utilize generator plugin\r\n\tfunction getLayerCompsData(){\r\n\t\tvar docRef = new ActionReference();  \r\n\t\tvar desc = new ActionDescriptor();  \r\n\t\tvar JSONid = stringIDToTypeID(\"json\");  \r\n\t\tdocRef.putProperty(charIDToTypeID('Prpr'), JSONid);  \r\n\t\tdocRef.putEnumerated(stringIDToTypeID(\"document\"), charIDToTypeID('Ordn'), charIDToTypeID('Trgt'));  \r\n\t\tdesc.putReference(charIDToTypeID('null'), docRef);  \r\n\t\tdesc.putBoolean(stringIDToTypeID(\"compInfo\"), true);  // just return the Layer Comp settings  \r\n\t\tdesc.putBoolean(stringIDToTypeID( \"getCompLayerSettings\" ), false); // return Layer Comp settings for each layer  \r\n\t\tvar result = executeAction(charIDToTypeID( \"getd\" ), desc, DialogModes.NO).getString(JSONid);  \r\n\t\tresult = eval(\"(\"+result+\")\");\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t// data input is object from generator plugin\r\n\tfunction getActiveComp(data){\r\n\t\tif(data.comps){\r\n\t\t\tvar comps = data.comps;\r\n\t\t\tfor(var i = 0, len = comps.length; i < len ; i++){\r\n\t\t\t\tvar activeComp = comps[i];\r\n\t\t\t\tif(activeComp.hasOwnProperty(\"applied\") && activeComp.applied === true){\r\n\t\t\t\t\treturn activeComp.id;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tfunction selectDocument(documentID){\r\n\t\tvar idslct = charIDToTypeID( \"slct\" );\r\n\t\t\tvar desc2664 = new ActionDescriptor();\r\n\t\t\t\tvar ref1382 = new ActionReference();\r\n\t\t\t\tvar idDcmn = charIDToTypeID( \"Dcmn\" );\r\n\t\t\t\tref1382.putIdentifier( idDcmn, documentID );\r\n\t\t\tdesc2664.putReference( charIDToTypeID( \"null\" ), ref1382 );\r\n\t\texecuteAction( idslct, desc2664, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction isPathSelected(){\r\n\t\tvar ref = new ActionReference();   \r\n\t\tref.putProperty(charIDToTypeID( \"Prpr\" ), stringIDToTypeID(\"targetPathIndex\"));  \r\n\t\tref.putEnumerated( charIDToTypeID(\"Dcmn\"), charIDToTypeID(\"Ordn\"), charIDToTypeID(\"Trgt\") );    \r\n\t\tvar desc = executeActionGet(ref);   \r\n\t\tvar targetPathIndex = desc.getDouble(stringIDToTypeID (\"targetPathIndex\"));\r\n\t\tvar isSelected = targetPathIndex !== -1;\r\n\t\treturn isSelected;\r\n\t}\r\n\r\n\tfunction makeHistorySnapshot(snapshotName){\r\n\t\tvar idMk = charIDToTypeID( \"Mk  \" );\r\n\t\t\tvar desc11 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref5 = new ActionReference();\r\n\t\t\t\tvar idSnpS = charIDToTypeID( \"SnpS\" );\r\n\t\t\t\tref5.putClass( idSnpS );\r\n\t\t\tdesc11.putReference( idnull, ref5 );\r\n\t\t\tvar idFrom = charIDToTypeID( \"From\" );\r\n\t\t\t\tvar ref6 = new ActionReference();\r\n\t\t\t\tvar idHstS = charIDToTypeID( \"HstS\" );\r\n\t\t\t\tvar idCrnH = charIDToTypeID( \"CrnH\" );\r\n\t\t\t\tref6.putProperty( idHstS, idCrnH );\r\n\t\t\tdesc11.putReference( idFrom, ref6 );\r\n\t\t\tvar idNm = charIDToTypeID( \"Nm  \" );\r\n\t\t\tdesc11.putString( idNm, snapshotName );\r\n\t\t\tvar idUsng = charIDToTypeID( \"Usng\" );\r\n\t\t\tvar idHstS = charIDToTypeID( \"HstS\" );\r\n\t\t\tvar idFllD = charIDToTypeID( \"FllD\" );\r\n\t\t\tdesc11.putEnumerated( idUsng, idHstS, idFllD );\r\n\t\texecuteAction( idMk, desc11, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction removeHistorySnapshot(snapshotName){\r\n\t\tvar idDlt = charIDToTypeID( \"Dlt \" );\r\n\t\t\tvar desc35 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref23 = new ActionReference();\r\n\t\t\t\tvar idSnpS = charIDToTypeID( \"SnpS\" );\r\n\t\t\t\tref23.putName( idSnpS, snapshotName );\r\n\t\t\tdesc35.putReference( idnull, ref23 );\r\n\t\texecuteAction( idDlt, desc35, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction restoreFromSnapshot(snapshotName){\r\n\t\tvar idslct = charIDToTypeID( \"slct\" );\r\n\t\t\tvar desc36 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref24 = new ActionReference();\r\n\t\t\t\tvar idSnpS = charIDToTypeID(\"SnpS\");\r\n\t\t\t\tref24.putName( idSnpS, snapshotName );\r\n\t\t\tdesc36.putReference( idnull, ref24 );\r\n\t\texecuteAction( idslct, desc36, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction getArtboardSettings(){\r\n\t\tartboardDesc = lx.getDocumentProperty(\"artboards\");\r\n\t\t\t\r\n\t\tvar result = { \r\n\t\t\tautoNestEnabled: artboardDesc.getBoolean(\"autoNestEnabled\"),\r\n\t\t\tautoExpandEnabled: artboardDesc.getBoolean(\"autoExpandEnabled\"),\r\n\t\t\tautoPositionEnabled: artboardDesc.getBoolean(\"autoPositionEnabled\")\r\n\t\t};\t\t\t\r\n\t\t\t\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction isVectorMaskEnabled(){  \r\n\t\tvar lastIndex = docMaster.pathItems.length;  \r\n\t\t  \r\n\t\t// if there is no item mask can be disabled or not even exists  \r\n\t\t// so you could want check for existing vector mask before your call this function  \r\n\t\tif(lastIndex===0){return false}  \r\n\t\t  \r\n\t\t// vector mask should be last in paths list. If is not selected then it has \"normal\" kind. So we select last path.  \r\n\t\tvar desc = new ActionDescriptor();  \r\n\t\tvar ref = new ActionReference();  \r\n\t\tref.putIndex( charIDToTypeID( \"Path\" ), lastIndex );  \r\n\t\tdesc.putReference( charIDToTypeID( \"null\" ), ref );  \r\n\t\texecuteAction( charIDToTypeID( \"slct\" ), desc, DialogModes.NO ); \r\n\t  \r\n\t\t// now we check which kind is most bottom path  \r\n\t\tvar lastPathInList = docMaster.pathItems[lastIndex-1];  \r\n\t\tvar isVectorMaskEnabled = lastPathInList.kind === PathKind.VECTORMASK;  \r\n\t\treturn isVectorMaskEnabled;  \r\n\t\t\r\n\t\t// another method is trying to get path with reference and this reference has vector mask property\r\n\t}  \r\n}\r\n\r\n///////////////////\r\n//  SCALE STYLES\r\n///////////////////\r\n\r\nfunction scaleSelectedLayersStyle (scaleFactorPercent, selectedLayers){\r\n\t// YOU CAN ADJUST SCRIPT TO FIT YOUR NEEDS. POSSIBLE VALUES ARE \"TRUE\" OR \"FALSE\"\r\n\t// You might thing that I am noob because this code is to complicate. But this also scale shape styles not only layer effects.\r\n\tstyleSettings = settings.styleScaleSettings\r\n\r\n\t// performance - don't even select shape layer if we won't change shape styles\r\n\tstyleSettings[\"dontScaleShape\"] = (!styleSettings.scaleShapeStrokeWidth && !styleSettings.scaleShapePatternFill && !styleSettings.scaleShapeGradientFill && !styleSettings.scaleShapeStrokeGradient && !styleSettings.scaleShapeStrokePattern);\r\n\r\n\tmain();\r\n\r\n\tfunction main(){\r\n\t\tvar layersWithStyle = filterLayersWithStyle(selectedLayers);\r\n\t\tvar layersWithShape = filterLayersWithShape(selectedLayers);\r\n\t\tscaleFactorPercent = round2(scaleFactorPercent);\r\n\t\t\r\n\t\tif(scaleFactorPercent === 100){return} // skip effect scaling if nothing would change\r\n\t\t\r\n\t\t\r\n\t\tfor(var i = 0, prgs, cancel = false, len = selectedLayers.length; i < len; i++){\r\n\t\t\t\r\n\t\t\tif(!prgs){\r\n\t\t\t\tprgs=PltProgress(len, \"Styles scaling...\");\r\n\t\t\t\tprgs.show();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar index = selectedLayers[i];\r\n\t\t\tvar hasStyle = layersWithStyle.indexOf(index) >= 0;\r\n\t\t\tvar hasShape = layersWithShape.indexOf(index) >= 0;\r\n\t\t\tvar desc;\r\n\t\t\t\r\n\t\t\tif(hasStyle || hasShape){\r\n\t\t\t\tdesc = getLayerDescriptor (index);\r\n\t\t\t\tsetSelectedLayer (index);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(hasStyle){\r\n\t\t\t\tcancel = scaleStyles(scaleFactorPercent);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(hasShape){\r\n\t\t\t\tvar shapeProperties = {\r\n\t\t\t\t\tscaleRatio: scaleFactorPercent/100,\r\n\t\t\t\t\tstrokeWidth: getStrokeWidth(desc),\r\n\t\t\t\t\t\r\n\t\t\t\t\tshapePatternScale: getShapePatternScale(desc),\r\n\t\t\t\t\tshapeGradientScale: getShapeGradientScale(desc),\r\n\t\t\t\t\t\r\n\t\t\t\t\tshapeStrokeGradientScale: getShapeStrokeGradientScale(desc),\r\n\t\t\t\t\tshapeStrokePatternScale: getShapeStrokePatternScale(desc)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar strokeDesc = changeStrokeDesc( desc.getObjectValue(stringIDToTypeID('AGMStrokeStyleInfo')), shapeProperties);\r\n\t\t\t\tvar fillDesc = changeFillDesc(desc.getList(stringIDToTypeID('adjustment')).getObjectValue(0), shapeProperties);\r\n\t\t\t\tvar fillKey = getFillKey(fillDesc);\r\n\t\t\t\t\r\n\t\t\t\tcancel = applyShapeDescriptor (index, fillDesc, strokeDesc, fillKey);\r\n\t\t\t}\r\n\t\t\tif(cancel){return;}\r\n\t\t\tcancel = prgs.update(i,(\"Styles scaling: \"+i+\" layers from \" + len));\r\n\t\t\tif(cancel){return;}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getFillKey(fillDesc){\r\n\t\tvar fillKey;\r\n\t\t\r\n\t\tif(fillDesc.hasKey(stringIDToTypeID(\"pattern\"))){\r\n\t\t\tfillKey = stringIDToTypeID(\"patternLayer\");\r\n\t\t} else if(fillDesc.hasKey(stringIDToTypeID(\"gradient\"))){\r\n\t\t\tfillKey = stringIDToTypeID(\"gradientLayer\");\r\n\t\t} else {\r\n\t\t\tfillKey = stringIDToTypeID(\"solidColorLayer\");\r\n\t\t}\r\n\r\n\t\treturn fillKey;\r\n\t}\r\n\r\n\r\n\tfunction scaleStyles(value){\r\n\t\ttry{\r\n\t\t\tvar idscaleEffectsEvent = stringIDToTypeID( \"scaleEffectsEvent\" );\r\n\t\t\t\tvar desc66 = new ActionDescriptor();\r\n\t\t\t\tvar idScl = charIDToTypeID( \"Scl \" );\r\n\t\t\t\tvar idPrc = charIDToTypeID( \"#Prc\" );\r\n\t\t\t\tdesc66.putUnitDouble( idScl, idPrc, value );\r\n\t\t\texecuteAction( idscaleEffectsEvent, desc66, DialogModes.NO );\r\n\t\t}catch(e){\r\n\t\t\tif (e.number === 8007) { // if not \"User cancelled\"  \r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\t// some layer can have layerEffects descriptor but descriptor is not visible so scale\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction changeFillDesc(desc, props){\r\n\t\tif(props.shapeGradientScale !== false && styleSettings.scaleShapeGradientFill){\r\n\t\t\tdesc.putDouble(stringIDToTypeID('scale'),round2(props.shapeGradientScale * props.scaleRatio));\r\n\t\t}\r\n\t\tif(props.shapePatternScale !== false && styleSettings.scaleShapePatternFill){\r\n\t\t\tdesc.putDouble(stringIDToTypeID('scale'),round2(props.shapePatternScale * props.scaleRatio));\r\n\t\t}\r\n\r\n\t\treturn desc;\r\n\t}\r\n\r\n\tfunction changeStrokeDesc(desc, props){\r\n\t\tif(props.strokeWidth !== false && styleSettings.scaleShapeStrokeWidth){\r\n\t\t\tvar strokeDoubleType = desc.getUnitDoubleType(stringIDToTypeID('strokeStyleLineWidth'));\r\n\t\t\tdesc.putUnitDouble(stringIDToTypeID('strokeStyleLineWidth'), strokeDoubleType ,round2(props.strokeWidth * (props.scaleRatio)));\r\n\t\t\t// putUnitDouble namísto double\r\n\t\t}\r\n\t\t\r\n\t\tif(props.shapeStrokeGradientScale !== false && styleSettings.scaleShapeStrokeGradient){\r\n\t\t\tvar gradientDesc = desc.getObjectValue(stringIDToTypeID('strokeStyleContent'));\r\n\t\t\tgradientDesc.putDouble(stringIDToTypeID('scale'),round2(props.shapeStrokeGradientScale * props.scaleRatio));\r\n\t\t\tdesc.putObject(stringIDToTypeID('strokeStyleContent'),stringIDToTypeID('strokeStyleContent'),gradientDesc);\r\n\t\t}\r\n\t\tif(props.shapeStrokePatternScale !== false && styleSettings.scaleShapeStrokePattern){\r\n\t\t\tvar patternDesc = desc.getObjectValue(stringIDToTypeID('strokeStyleContent'));\r\n\t\t\tpatternDesc.putDouble(stringIDToTypeID('scale'),round2(props.shapeStrokePatternScale * props.scaleRatio));\r\n\t\t\tdesc.putObject(stringIDToTypeID('strokeStyleContent'),stringIDToTypeID('strokeStyleContent'),patternDesc);\r\n\t\t}\r\n\r\n\t\treturn desc;\r\n\t}\r\n\r\n\t//\r\n\t// Function: getSelectedLayers\r\n\t// Usage: creates and array of the currently selected layers\r\n\t// Input: <none> Must have an open document\r\n\t// Return: Array selectedLayers\r\n\tfunction getSelectedLayers() {\r\n\t\tvar selectedLayers = [];\r\n\t\ttry {\r\n\t\t   var backGroundCounter = 1;\r\n\t\t\ttry {\r\n\t\t\t\tvar dummy = app.activeDocument.backgroundLayer;\r\n\t\t\t\tbackGroundCounter = 0;\r\n\t\t\t}\r\n\t\t\tcatch(e){;} //do nothing\r\n\t\t\t\r\n\t\t\tvar ref = new ActionReference();\r\n\t\t\tvar keyTargetLayers = app.stringIDToTypeID( 'targetLayers' );\r\n\t\t\tref.putProperty( app.charIDToTypeID( 'Prpr' ), keyTargetLayers );\r\n\t\t\tref.putEnumerated( app.charIDToTypeID( 'Dcmn' ), app.charIDToTypeID( 'Ordn' ), app.charIDToTypeID( 'Trgt' ) );\r\n\t\t\tvar desc = executeActionGet( ref );\r\n\t\t\tif ( desc.hasKey( keyTargetLayers ) ) {\r\n\t\t\t\tvar layersList = desc.getList( keyTargetLayers );\r\n\t\t\t\tfor ( var i = 0; i < layersList.count; i++) {\r\n\t\t\t\t\tvar listRef = layersList.getReference( i );\r\n\t\t\t\t\tselectedLayers.push( listRef.getIndex() + backGroundCounter );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}catch(e) {\r\n\t\t\t; // do nothing\r\n\t\t}\r\n\t\treturn selectedLayers;\r\n\t}\r\n\r\n\tfunction setSelectedLayers(list){\r\n\t\tsetSelectedLayer(list[0]);\r\n\t\taddSelectedLayer(list);\r\n\t}\r\n\r\n\tfunction setSelectedLayer( layerIndexOrName ) {\r\n\t\ttry {\r\n\t\t\tvar id239 = charIDToTypeID( \"slct\" );\r\n\t\t\tvar desc45 = new ActionDescriptor();\r\n\t\t\tvar id240 = charIDToTypeID( \"null\" );\r\n\t\t\tvar ref43 = new ActionReference();\r\n\t\t\tvar id241 = charIDToTypeID( \"Lyr \" );\r\n\t\t\tif ( typeof layerIndexOrName == \"number\" ) {\r\n\t\t\t\tref43.putIndex( id241, layerIndexOrName );\r\n\t\t\t} else {\r\n\t\t\t\tref43.putName( id241, layerIndexOrName );\r\n\t\t\t}\r\n\t\t\tdesc45.putReference( id240, ref43 );\r\n\t\t\tvar id242 = charIDToTypeID( \"MkVs\" );\r\n\t\t\tdesc45.putBoolean( id242, false );\r\n\t\t\texecuteAction( id239, desc45, DialogModes.NO );\r\n\t\t}catch(e) {\r\n\t\t\talert(e.message); // do nothing\r\n\t\t}\r\n\t}\r\n\r\n\tfunction addSelectedLayer( layerIndexOrName ) {\r\n\t\ttry {\r\n\t\t\tvar len=1;\r\n\t\t\tif( Object.prototype.toString.call( layerIndexOrName ) === '[object Array]' ) {\r\n\t\t\t\tlen = layerIndexOrName.length;\r\n\t\t\t}\r\n\t\t\tfor ( var i = 0;i<len;i++){\r\n\t\t\t\tvar id243 = charIDToTypeID( \"slct\" );\r\n\t\t\t\tvar desc46 = new ActionDescriptor();\r\n\t\t\t\tvar id244 = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref44 = new ActionReference();\r\n\t\t\t\tvar id245 = charIDToTypeID( \"Lyr \" );\r\n\t\t\t\tif ( typeof layerIndexOrName == \"number\" ) {\r\n\t\t\t\t\tref44.putIndex( id245, layerIndexOrName );\r\n\t\t\t\t} \r\n\t\t\t\telse if( Object.prototype.toString.call( layerIndexOrName ) === '[object Array]' ){ //když to je pole\r\n\t\t\t\t\tref44.putIndex( id245, layerIndexOrName[i] );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tref44.putName( id245, layerIndexOrName );\r\n\t\t\t\t}\r\n\t\t\t\tdesc46.putReference( id244, ref44 );\r\n\t\t\t\tvar id246 = stringIDToTypeID( \"selectionModifier\" );\r\n\t\t\t\tvar id247 = stringIDToTypeID( \"selectionModifierType\" );\r\n\t\t\t\tvar id248 = stringIDToTypeID( \"addToSelection\" );\r\n\t\t\t\tdesc46.putEnumerated( id246, id247, id248 );\r\n\t\t\t\tvar id249 = charIDToTypeID( \"MkVs\" );\r\n\t\t\t\tdesc46.putBoolean( id249, false );\r\n\t\t\t\texecuteAction( id243, desc46, DialogModes.NO );\r\n\t\t\t}\r\n\t\t}catch(e) {\r\n\t\t\talert(e.message); // do nothing\r\n\t\t}\r\n\t}\r\n\r\n\tfunction filterLayersWithStyle(list){\r\n\t\tvar result = [];\r\n\t\t\r\n\t\tif(styleSettings.scaleStyle){\r\n\t\t\tfor(var i = 0, len = list.length; i < len; i++){\r\n\t\t\t\tvar index = list[i];\r\n\t\t\t\tvar desc = getLayerDescriptor(index) ;\r\n\t\t\t\tvar hasStyle = desc.hasKey(stringIDToTypeID('layerEffects'));\r\n\t\t\t\tif(hasStyle){\r\n\t\t\t\t\tresult.push(index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction filterLayersWithShape(list){\r\n\t\tvar result = [];\r\n\t\t\r\n\t\tif(styleSettings.dontScaleShape === false){\r\n\t\t\tfor(var i = 0, len = list.length; i < len; i++){\r\n\t\t\t\tvar index = list[i];\r\n\t\t\t\tvar desc = getLayerDescriptor(index);\r\n\t\t\t\tvar shapePatternScale = getShapePatternScale(desc);\r\n\t\t\t\tvar shapeGradientScale = getShapeGradientScale(desc);\r\n\t\t\t\t\r\n\t\t\t\tif(hasStroke(desc) || shapePatternScale !== false || shapeGradientScale !== false){\r\n\t\t\t\t\tresult.push(index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction getStrokeWidth(desc){\r\n\t\tif(!desc.getObjectValue(stringIDToTypeID('AGMStrokeStyleInfo')).hasKey(stringIDToTypeID('strokeStyleLineWidth'))){return false}\r\n\t\t\r\n\t\tvar result = desc.getObjectValue(stringIDToTypeID('AGMStrokeStyleInfo')).getUnitDoubleValue(stringIDToTypeID('strokeStyleLineWidth'));\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction hasStroke(desc){\r\n\t\tvar hasStrokeWidth = desc.hasKey(stringIDToTypeID('AGMStrokeStyleInfo')) && desc.getObjectValue(stringIDToTypeID('AGMStrokeStyleInfo')).hasKey(stringIDToTypeID('strokeStyleLineWidth'));\r\n\t\tvar isShape = desc.getInteger(stringIDToTypeID('layerKind')) === 4;\r\n\t\tvar has = hasStrokeWidth && isShape;\r\n\t\treturn has;\r\n\t}\r\n\r\n\tfunction getShapeStrokeGradientScale(desc){\r\n\t\t\r\n\t\tvar strokeDesc = desc.getObjectValue(stringIDToTypeID('AGMStrokeStyleInfo'));\r\n\t\tvar hasStrokeStyle = strokeDesc.hasKey(stringIDToTypeID('strokeStyleContent'));\r\n\t\tif(!hasStrokeStyle){return false}\r\n\t\t\r\n\t\tvar strokeStyleContentDesc = strokeDesc.getObjectValue(stringIDToTypeID('strokeStyleContent'));\r\n\t\t\r\n\t\tvar isGradient = strokeStyleContentDesc.hasKey(stringIDToTypeID('gradient'));\r\n\t\tif(!isGradient){return false}\r\n\t\t\r\n\t\t// we don't need scale gradient if align with layer is true\r\n\t\tvar isAlignedToLayer = strokeStyleContentDesc.getBoolean(stringIDToTypeID('align'));\r\n\t\tif(isAlignedToLayer){return false}\r\n\t\t\r\n\t\tvar strokeGradientScale = strokeStyleContentDesc.getUnitDoubleValue(stringIDToTypeID('scale'));\r\n\t\t\r\n\t\treturn strokeGradientScale;\r\n\t}\r\n\r\n\r\n\tfunction getShapeStrokePatternScale(desc){\r\n\t\t\r\n\t\tvar strokeDesc = desc.getObjectValue(stringIDToTypeID('AGMStrokeStyleInfo'));\r\n\t\tvar hasStrokeStyle = strokeDesc.hasKey(stringIDToTypeID('strokeStyleContent'));\r\n\t\tif(!hasStrokeStyle){return false}\r\n\t\t\r\n\t\tvar strokeStyleContentDesc = strokeDesc.getObjectValue(stringIDToTypeID('strokeStyleContent'));\r\n\t\t\r\n\t\tvar isPattern = strokeStyleContentDesc.hasKey(stringIDToTypeID('pattern'));\r\n\t\tif(!isPattern){return false}\r\n\t\t\r\n\t\tvar strokePatternScale = strokeStyleContentDesc.getUnitDoubleValue(stringIDToTypeID('scale'));\r\n\t\t\r\n\t\treturn strokePatternScale;\r\n\t}\r\n\r\n\r\n\t// fillKey = typeID\r\n\t// fillDesc = gradientLayer\r\n\t// strokeDesc = descAGMStrokeStyleInfo\r\n\tfunction applyShapeDescriptor(layerIndex, fillDesc, strokeDesc, fillKey){\r\n\t   var idsetd = charIDToTypeID( \"setd\" );\r\n\t\t\tvar desc1176 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref301 = new ActionReference();\r\n\t\t\t\tvar idcontentLayer = stringIDToTypeID( \"contentLayer\" );\r\n\t\t\t\tvar idOrdn = charIDToTypeID( \"Ordn\" );\r\n\t\t\t\tvar idTrgt = charIDToTypeID( \"Trgt\" );\r\n\t\t\t\tref301.putEnumerated( idcontentLayer, idOrdn, idTrgt );\r\n\t\t\t\t//ref301.putIndex(idcontentLayer, layerIndex)\r\n\t\t\tdesc1176.putReference( idnull, ref301 );\r\n\t\t\tvar idT = charIDToTypeID( \"T   \" );\r\n\t\t\t\tvar descShapeStyle = new ActionDescriptor();\r\n\t\t\t\t\r\n\t\t\t\tvar idFlCn = stringIDToTypeID( \"fillContents\" );\r\n\t\t\t\tdescShapeStyle.putObject( idFlCn, fillKey, fillDesc );\r\n\t\t\t\t\r\n\t\t\t\tvar idstrokeStyle = stringIDToTypeID( \"strokeStyle\" );\r\n\t\t\t\tdescShapeStyle.putObject( idstrokeStyle, idstrokeStyle, strokeDesc );\r\n\t\t\t\t\r\n\t\t\tvar idshapeStyle = stringIDToTypeID( \"shapeStyle\" );\r\n\t\t\tdesc1176.putObject( idT, idshapeStyle, descShapeStyle );\r\n\t\ttry{\r\n\t\t\texecuteAction( idsetd, desc1176, DialogModes.NO );\r\n\t\t}catch(e){\r\n\t\t\tif (e.number === 8007) { // if not \"User cancelled\"  \r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tthrow e; \r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction getShapePatternScale(desc){\r\n\t\t// adjustments present\r\n\t\tif(!desc.hasKey(stringIDToTypeID('adjustment'))){return false;}\r\n\t\t\r\n\t\t// patternLayer present\r\n\t\tvar adjustmentList = desc.getList(stringIDToTypeID('adjustment'));\r\n\t\tvar patternLayerPosition = getKeyPositionInActionList(adjustmentList, stringIDToTypeID(\"patternLayer\"));\r\n\t\tif( patternLayerPosition === -1 ){return false}\r\n\t\t\r\n\t\tvar patternDesc = adjustmentList.getObjectValue(patternLayerPosition);\r\n\t\t\r\n\t\t// if everything except scale exists then scale should be 100%\r\n\t\tvar hasScaleKey = patternDesc.hasKey(stringIDToTypeID('scale'));\r\n\t\tif( !hasScaleKey ){return 100}\r\n\t\t\r\n\t\t// get scale value\r\n\t\tvar patternScale = patternDesc.getUnitDoubleValue(stringIDToTypeID('scale'));\r\n\t\treturn patternScale;\r\n\t}\r\n\r\n\tfunction getShapeGradientScale(desc){\r\n\t\t\r\n\t\t// adjustments present\r\n\t\tif(!desc.hasKey(stringIDToTypeID('adjustment'))){return false;}\r\n\t\t\r\n\t\t// patternLayer present\r\n\t\tvar adjustmentList = desc.getList(stringIDToTypeID('adjustment'));\r\n\t\tvar gradientLayerPosition = getKeyPositionInActionList(adjustmentList, stringIDToTypeID(\"gradientLayer\"));\r\n\t\tif( gradientLayerPosition === -1 ){return false}\r\n\t\t\r\n\t\tvar gradientDesc = adjustmentList.getObjectValue(gradientLayerPosition);\r\n\t\t\r\n\t\t// we don't need scale gradient if align with layer is true\r\n\t\tvar hasAlignKey = gradientDesc.hasKey(stringIDToTypeID('align'));\r\n\t\tif( !hasAlignKey ){return false}\r\n\t\t\r\n\t\t// if everything except scale exists then scale should be 100%\r\n\t\tvar hasScaleKey = gradientDesc.hasKey(stringIDToTypeID('scale'));\r\n\t\tif( !hasScaleKey ){return 100}\r\n\t\t\r\n\t\tvar gradientScale = gradientDesc.getUnitDoubleValue(stringIDToTypeID('scale'))\r\n\t\t\r\n\t\treturn gradientScale;\r\n\r\n\t}\r\n\r\n\t// objectType\r\n\t// key = typeID\r\n\tfunction getKeyPositionInActionList(list, key){\r\n\t\tfor (var i = 0, len = list.count; i < len; i++){\r\n\t\t\tvar isKeyFound = list.getObjectType(i) == key;\r\n\t\t\tif(isKeyFound){\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tfunction getLayerDescriptor(index){\r\n\t\tvar ref = new ActionReference();  \r\n\t\tref.putIndex( charIDToTypeID( \"Lyr \" ), index );    \r\n\t\tvar desc = executeActionGet(ref); \r\n\t\treturn desc;\r\n\t}\r\n\r\n\tfunction getLayerIndexByID(id){\r\n\t\tvar backGroundCounter = 0;\r\n\t\t\ttry {\r\n\t\t\t\tvar dummy = app.activeDocument.backgroundLayer;\r\n\t\t\t\tbackGroundCounter = -1;\r\n\t\t\t}\r\n\t\t\tcatch(e){;} //do nothing\r\n\t\t\r\n\t\tvar ref = new ActionReference();  \r\n\t\tref.putProperty(charIDToTypeID( \"Prpr\" ), stringIDToTypeID(\"itemIndex\"));\r\n\t\tref.putIdentifier( charIDToTypeID( \"Lyr \" ), id );    \r\n\t\tvar desc = executeActionGet(ref); \r\n\t\tvar index = desc.getInteger(stringIDToTypeID('itemIndex')) + backGroundCounter;\r\n\t\treturn index;\r\n\t}\r\n\r\n\tfunction round2 (num){\r\n\t\treturn Math.round(num * 100) / 100;\r\n\t}\r\n\t\r\n\tfunction PltProgress(maximum, message) {\r\n\t\tvar obj = {};\r\n\t\tvar win;\r\n\t\tvar closed = false;\r\n\t\tvar max = maximum;\r\n\t\tvar msg = message;\r\n\t  \r\n\t\tobj.show = function() {\r\n\t\t\t var winContructorString = \"\"\"palette{\r\n\t\t\t\ttext:'Progress',\r\n\t\t\t\tmessage:StaticText{text:'\"\"\"+msg+\"\"\"\"',alignment: 'fill'},\r\n\t\t\t\tmyRow: Panel { \r\n\t\t\t\t\torientation: 'row',\r\n\t\t\t\t\tmargins:0,\r\n\t\t\t\t\tproperties:{borderStyle: none}\r\n\t\t\t\t\tpanel:Panel{\r\n\t\t\t\t\t\tmargins:0,\r\n\t\t\t\t\t\tbar:Progressbar{\r\n\t\t\t\t\t\t\tbounds:[20,20,280,31], \r\n\t\t\t\t\t\t\tvalue:0,\r\n\t\t\t\t\t\t\tmaxvalue:\"\"\"+max+\"\"\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcancel:Button{ \r\n\t\t\t\t\t\ttext: 'Cancel', \r\n\t\t\t\t\t\tproperties:{name:'cancel'}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t};\"\"\";\r\n\t\t\t\twin = new Window(winContructorString);\r\n\t\t\t\twin.onClose = function(){\r\n\t\t\t\t\twin.close();\r\n\t\t\t\t\tclosed = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twin.myRow.cancel.onClick = function(){\r\n\t\t\t\t\twin.close();\r\n\t\t\t\t\tclosed = true;\r\n\t\t\t\t}\r\n\t\t\t\twin.show();\r\n\t\t\t\t\r\n\t\t\t\treturn closed;\r\n\t\t};\r\n\t\tobj.hide = function() {\r\n\t\t\tclosed = true;\r\n\t\t\twin.close();\r\n\t\t};\r\n\t\tobj.update = function(step, updateMessage){\r\n\t\t\twin.myRow.panel.bar.value = step;\r\n\t\t\twin.message.text = updateMessage;\r\n\t\t\tif(step === max){closed = true;win.close();}\r\n\t\t\treturn closed;\r\n\t\t}\r\n\t\treturn obj;\r\n\t}\r\n}\r\n\r\nfunction applyPollyFills(){\r\n\t\r\n\tif (!Array.prototype.indexOf) {\r\n\t\t  Array.prototype.indexOf = function(searchElement, fromIndex) {\r\n\t\t\tvar k;\r\n\t\t\tif (this == null) {\r\n\t\t\t  throw new TypeError('\"this\" is null or not defined');\r\n\t\t\t}\r\n\r\n\t\t\tvar o = Object(this);\r\n\t\t\tvar len = o.length >>> 0;\r\n\t\t\tif (len === 0) {\r\n\t\t\t  return -1;\r\n\t\t\t}\r\n\t\t\tvar n = fromIndex | 0;\r\n\t\t\tif (n >= len) {\r\n\t\t\t  return -1;\r\n\t\t\t}\r\n\t\t\tk = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\r\n\t\t\twhile (k < len) {\r\n\t\t\t  if (k in o && o[k] === searchElement) {\r\n\t\t\t\treturn k;\r\n\t\t\t  }\r\n\t\t\t  k++;\r\n\t\t\t}\r\n\t\t\treturn -1;\r\n\t\t  };\r\n\t\t}\r\n\r\n\tif (!Array.prototype.findValueIndex) {\r\n\t\tArray.prototype.findValueIndex = function(value) {\r\n\t\t\tvar o = Object(this);\r\n\t\t\tfor(var i = 0, len = o.length; i < len; i++){\r\n\t\t\t\tif(o[i] == value){\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t}\r\n\t\r\n\tif (!Array.prototype.findIndex) {\r\n\t\tArray.prototype.findIndex = function(predicate) {\r\n\t\t // 1. Let O be ? ToObject(this value).\r\n\t\t  if (this == null) {\r\n\t\t\tthrow new TypeError('\"this\" is null or not defined');\r\n\t\t  }\r\n\r\n\t\t  var o = Object(this);\r\n\r\n\t\t  // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n\t\t  var len = o.length >>> 0;\r\n\r\n\t\t  // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n\t\t  if (typeof predicate !== 'function') {\r\n\t\t\tthrow new TypeError('predicate must be a function');\r\n\t\t  }\r\n\r\n\t\t  // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n\t\t  var thisArg = arguments[1];\r\n\r\n\t\t  // 5. Let k be 0.\r\n\t\t  var k = 0;\r\n\r\n\t\t  // 6. Repeat, while k < len\r\n\t\t  while (k < len) {\r\n\t\t\t// a. Let Pk be ! ToString(k).\r\n\t\t\t// b. Let kValue be ? Get(O, Pk).\r\n\t\t\t// c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n\t\t\t// d. If testResult is true, return k.\r\n\t\t\tvar kValue = o[k];\r\n\t\t\tif (predicate.call(thisArg, kValue, k, o)) {\r\n\t\t\t  return k;\r\n\t\t\t}\r\n\t\t\t// e. Increase k by 1.\r\n\t\t\tk++;\r\n\t\t  }\r\n\r\n\t\t  // 7. Return -1.\r\n\t\t  return -1;\r\n\t\t}\r\n\t}\r\n}"
                },
                "type": {
                  "VarKey": null,
                  "Value": "CUSTOM"
                },
                "ext": {
                  "VarKey": null,
                  "Value": ".jsx"
                },
                "encoding": {
                  "VarKey": null,
                  "Value": "default"
                },
                "runner": {
                  "VarKey": "选中值",
                  "Value": null
                },
                "argTemplate": {
                  "VarKey": null,
                  "Value": "%FILE%"
                },
                "outputEncoding": {
                  "VarKey": null,
                  "Value": "oem"
                },
                "workingDir": {
                  "VarKey": null,
                  "Value": ""
                },
                "runAsAdmin": {
                  "VarKey": null,
                  "Value": "0"
                },
                "waitToExit": {
                  "VarKey": null,
                  "Value": "0"
                }
              },
              "OutputParams": {
                "stdout": null,
                "stdoutOnly": null,
                "stderr": null
              },
              "IfSteps": null,
              "ElseSteps": null,
              "Note": "",
              "Disabled": false,
              "Collapsed": false,
              "DelayMs": 0
            }
          ],
          "ElseSteps": null,
          "Note": "释放智能对象",
          "Disabled": false,
          "Collapsed": true,
          "DelayMs": 0
        },
        {
          "StepRunnerKey": "sys:simpleIf",
          "InputParams": {
            "condition": {
              "VarKey": null,
              "Value": "$= {选中值} == 6"
            }
          },
          "OutputParams": {},
          "IfSteps": [
            {
              "StepRunnerKey": "sys:runScript",
              "InputParams": {
                "script": {
                  "VarKey": null,
                  "Value": "#target photoshop\r\n\r\ns2t = stringIDToTypeID;\r\n\r\n(r = new ActionReference()).putProperty(s2t('property'), p = s2t('targetLayers'));\r\nr.putEnumerated(s2t('document'), s2t('ordinal'), s2t('targetEnum'));\r\nvar sel = executeActionGet(r).hasKey(p) ? executeActionGet(r).getList(p) : null;\r\n\r\n(r = new ActionReference()).putProperty(s2t('property'), p = s2t('hasBackgroundLayer'));\r\nr.putEnumerated(s2t('document'), s2t('ordinal'), s2t('targetEnum'));\r\nvar shift = executeActionGet(r).getBoolean(p) ? 0: 1\r\n\r\nif (sel) {\r\n    for (var i = 0; i < sel.count; i++) {\r\n        (r = new ActionReference()).putIndex(s2t(\"layer\"), sel.getReference(i).getIndex() + shift);\r\n        (d = new ActionDescriptor()).putReference(s2t(\"null\"), r);\r\n        executeAction(s2t(\"select\"), d, DialogModes.NO)\r\n        executeAction(s2t(\"newPlacedLayer\"), undefined, DialogModes.NO);\r\n    }\r\n}"
                },
                "type": {
                  "VarKey": null,
                  "Value": "CUSTOM"
                },
                "ext": {
                  "VarKey": null,
                  "Value": ".jsx"
                },
                "encoding": {
                  "VarKey": null,
                  "Value": "default"
                },
                "runner": {
                  "VarKey": "选中值",
                  "Value": null
                },
                "argTemplate": {
                  "VarKey": null,
                  "Value": "%FILE%"
                },
                "outputEncoding": {
                  "VarKey": null,
                  "Value": "oem"
                },
                "workingDir": {
                  "VarKey": null,
                  "Value": ""
                },
                "runAsAdmin": {
                  "VarKey": null,
                  "Value": "0"
                },
                "waitToExit": {
                  "VarKey": null,
                  "Value": "0"
                }
              },
              "OutputParams": {
                "stdout": null,
                "stdoutOnly": null,
                "stderr": null
              },
              "IfSteps": null,
              "ElseSteps": null,
              "Note": "",
              "Disabled": false,
              "Collapsed": false,
              "DelayMs": 0
            }
          ],
          "ElseSteps": null,
          "Note": "转为智能对象（将选择的图层分别转换为智能对象）",
          "Disabled": false,
          "Collapsed": true,
          "DelayMs": 0
        },
        {
          "StepRunnerKey": "sys:simpleIf",
          "InputParams": {
            "condition": {
              "VarKey": null,
              "Value": "$= {选中值} == 7"
            }
          },
          "OutputParams": {},
          "IfSteps": [
            {
              "StepRunnerKey": "sys:runScript",
              "InputParams": {
                "script": {
                  "VarKey": null,
                  "Value": "#target photoshop \r\n\r\nvar defaultRulerUnits = preferences.rulerUnits; preferences.rulerUnits = Units.PIXELS;\r\nvar doc = app.activeDocument; \r\nvar layers = doc.layers;\r\nvar typeArray = new Array ();\r\nvar isim = new Array();cTID = function(s) { return app.charIDToTypeID(s); }; sTID = function(s) { return app.stringIDToTypeID(s); };\r\n\r\nfunction repeatlastfilter() {    runMenuItem(cTID(\"LstF\"), true);\r\n}  \r\n\r\nfunction checklayermask() {\r\n    try {\r\n        Select_Layermask();\r\n    }\r\n    catch (err) { return }    repeatlastfilter();\r\n    Select_Original_Layer();       \r\n    }\r\n\r\n// MAIN\r\nfunction main()  \r\n{  \r\n    app.bringToFront();  \r\n    var SelectedLayers = getSelectedLayers();  \r\n    for (var i = 0; i < SelectedLayers.length; i++)  \r\n        {  \r\n            doc.activeLayer = SelectedLayers[i];  \r\n\r\n            isim[i] = SelectedLayers[i].name;\r\n            //selectlayer(isim[i]);\r\n            //alert (isim[i]);\r\n            repeatlastfilter();\r\n            checklayermask();\r\n            //doAction(DDActions.selection.text, DDActionSet.selection.text);  \r\n     }\r\n}\r\n\r\n// SELECT ORIGINAL LAYER\r\nfunction Select_Original_Layer(enabled, withDialog) {\r\n  \r\n    if (enabled != undefined && !enabled)\r\n      return;\r\n    var dialogMode = (withDialog ? DialogModes.ALL : DialogModes.NO);\r\n    var desc1 = new ActionDescriptor();\r\n    var ref1 = new ActionReference();    ref1.putEnumerated(cTID('Chnl'), cTID('Chnl'), sTID(\"RGB\"));    desc1.putReference(cTID('null'), ref1);    desc1.putBoolean(cTID('MkVs'), false);    executeAction(cTID('slct'), desc1, dialogMode);\r\n  };\r\n\r\n\r\n// SELECT LAYER MASK\r\nfunction Select_Layermask(enabled, withDialog) {\r\n    if (enabled != undefined && !enabled) \r\n    return;\r\n    var dialogMode = (withDialog ? DialogModes.ALL : DialogModes.NO);\r\n    var desc1 = new ActionDescriptor();\r\n    var ref1 = new ActionReference();    ref1.putEnumerated(cTID('Chnl'), cTID('Chnl'), cTID('Msk '));    desc1.putReference(cTID('null'), ref1);    desc1.putBoolean(cTID('MkVs'), false);    executeAction(cTID('slct'), desc1, dialogMode);\r\n};\r\n\r\n\r\n// GET SELECTED LAYERS\r\nfunction getSelectedLayers()  \r\n{  \r\n  var resultLayers=new Array();  \r\n  try{  \r\n    var descGrp = new ActionDescriptor();  \r\n    var refGrp = new ActionReference();  \r\n    refGrp.putEnumerated(cTID( \"Lyr \" ),cTID( \"Ordn\" ),cTID( \"Trgt\" ));  \r\n    descGrp.putReference(cTID( \"null\" ), refGrp );  \r\n    executeAction( sTID( \"groupLayersEvent\" ), descGrp, DialogModes.NO );  \r\n    for (var ix=0;ix<app.activeDocument.activeLayer.layers.length;ix++){resultLayers.push(app.activeDocument.activeLayer.layers[ix])}  \r\n    var desc5 = new ActionDescriptor();  \r\n    var ref2 = new ActionReference();  \r\n    ref2.putEnumerated( cTID( \"HstS\" ), cTID( \"Ordn\" ), cTID( \"Prvs\" ) );  \r\n    desc5.putReference( cTID( \"null\" ), ref2 );  \r\n    executeAction( cTID( \"slct\" ), desc5, DialogModes.NO );  \r\n  } catch (err) { }  \r\n  return resultLayers;  \r\n}     \r\n\r\nmain();"
                },
                "type": {
                  "VarKey": null,
                  "Value": "CUSTOM"
                },
                "ext": {
                  "VarKey": null,
                  "Value": ".jsx"
                },
                "encoding": {
                  "VarKey": null,
                  "Value": "default"
                },
                "runner": {
                  "VarKey": "选中值",
                  "Value": null
                },
                "argTemplate": {
                  "VarKey": null,
                  "Value": "%FILE%"
                },
                "outputEncoding": {
                  "VarKey": null,
                  "Value": "oem"
                },
                "workingDir": {
                  "VarKey": null,
                  "Value": ""
                },
                "runAsAdmin": {
                  "VarKey": null,
                  "Value": "0"
                },
                "waitToExit": {
                  "VarKey": null,
                  "Value": "0"
                }
              },
              "OutputParams": {
                "stdout": null,
                "stdoutOnly": null,
                "stderr": null
              },
              "IfSteps": null,
              "ElseSteps": null,
              "Note": "",
              "Disabled": false,
              "Collapsed": false,
              "DelayMs": 0
            }
          ],
          "ElseSteps": null,
          "Note": "智能滤镜（对选择的图层执行上一次的滤镜）",
          "Disabled": false,
          "Collapsed": true,
          "DelayMs": 0
        },
        {
          "StepRunnerKey": "sys:simpleIf",
          "InputParams": {
            "condition": {
              "VarKey": null,
              "Value": "$= {选中值} == 8"
            }
          },
          "OutputParams": {},
          "IfSteps": [
            {
              "StepRunnerKey": "sys:runScript",
              "InputParams": {
                "script": {
                  "VarKey": null,
                  "Value": "// apply active selection as layer masks to selected layers;\r\n// 2020, use it at your own risk;\r\nif(app.documents.length != 0) {\r\napplyLayerMasksToLayers();\r\n};\r\n////// apply layer masks to selected layers //////\r\nfunction applyLayerMasksToLayers(){\r\nvar theLayers = getSelectedLayersIdx();\r\nvar selection = hasSelection();\r\nif (selection == true) {app.activeDocument.selection.deselect()};\r\nfor(i = 0; i < theLayers.length; i++){\r\nselectLayerByIndex(theLayers[i], false);\r\n// remove existing mask;\r\nif (hasLayerMask (theLayers[i]) == true) {\r\nvar desc8 = new ActionDescriptor();\r\nvar ref5 = new ActionReference();\r\nvar idchannel = stringIDToTypeID( \"channel\" );\r\nref5.putEnumerated( idchannel, idchannel, stringIDToTypeID( \"mask\" ) );\r\ndesc8.putReference( stringIDToTypeID( \"null\" ), ref5 );\r\nexecuteAction( stringIDToTypeID( \"delete\" ), desc8, DialogModes.NO );\r\n};\r\n// load selection;\r\n   reselect ();\r\n// apply layer mask;\r\nif (selection == true) {makeLayerMask('RvlS')}\r\nelse {makeLayerMask('RvlA')};\r\n}\r\n};\r\n////// by paul mr //////\r\nfunction getSelectedLayersIdx(){ \r\n    var selectedLayers = new Array; \r\n    var ref = new ActionReference(); \r\n    ref.putEnumerated( charIDToTypeID(\"Dcmn\"), charIDToTypeID(\"Ordn\"), charIDToTypeID(\"Trgt\") ); \r\n    var desc = executeActionGet(ref); \r\n    if( desc.hasKey( stringIDToTypeID( 'targetLayers' ) ) ){ \r\n       desc = desc.getList( stringIDToTypeID( 'targetLayers' )); \r\n        var c = desc.count \r\n        var selectedLayers = new Array(); \r\n        for(var i=0;i<c;i++){ \r\n          try{ \r\n             activeDocument.backgroundLayer; \r\n             selectedLayers.push(  desc.getReference( i ).getIndex() ); \r\n          }catch(e){ \r\n             selectedLayers.push(  desc.getReference( i ).getIndex()+1 ); \r\n          } \r\n        } \r\n     }else{ \r\n       var ref = new ActionReference(); \r\n       ref.putProperty( charIDToTypeID(\"Prpr\") , charIDToTypeID( \"ItmI\" )); \r\n       ref.putEnumerated( charIDToTypeID(\"Lyr \"), charIDToTypeID(\"Ordn\"), charIDToTypeID(\"Trgt\") ); \r\n       try{ \r\n          activeDocument.backgroundLayer; \r\n          selectedLayers.push( executeActionGet(ref).getInteger(charIDToTypeID( \"ItmI\" ))-1); \r\n       }catch(e){ \r\n          selectedLayers.push( executeActionGet(ref).getInteger(charIDToTypeID( \"ItmI\" ))); \r\n       } \r\n    } \r\n    return selectedLayers; \r\n};\r\n////// by mike hale, via paul riggott //////\r\nfunction selectLayerByIndex(index,add){ \r\nadd = undefined ? add = false:add \r\nvar ref = new ActionReference();\r\nref.putIndex(charIDToTypeID(\"Lyr \"), index);\r\nvar desc = new ActionDescriptor();\r\n  desc.putReference(charIDToTypeID(\"null\"), ref );\r\n     if(add) desc.putEnumerated( stringIDToTypeID( \"selectionModifier\" ), stringIDToTypeID( \"selectionModifierType\" ), stringIDToTypeID( \"addToSelection\" ) ); \r\n    desc.putBoolean( charIDToTypeID( \"MkVs\" ), false ); \r\n try{\r\n  executeAction(charIDToTypeID(\"slct\"), desc, DialogModes.NO );\r\n}catch(e){\r\nalert(e.message); \r\n}\r\n};\r\n////// add layer mask //////\r\nfunction makeLayerMask(maskType) {\r\ntry {\r\nif( maskType == undefined) maskType = 'RvlA' ; //from selection\r\n// =======================================================\r\nvar idMk = charIDToTypeID( \"Mk  \" );\r\nvar desc3 = new ActionDescriptor();\r\nvar idNw = charIDToTypeID( \"Nw  \" );\r\nvar idChnl = charIDToTypeID( \"Chnl\" );\r\ndesc3.putClass( idNw, idChnl );\r\nvar idAt = charIDToTypeID( \"At  \" );\r\nvar ref1 = new ActionReference();\r\nvar idChnl = charIDToTypeID( \"Chnl\" );\r\nvar idChnl = charIDToTypeID( \"Chnl\" );\r\nvar idMsk = charIDToTypeID( \"Msk \" );\r\nref1.putEnumerated( idChnl, idChnl, idMsk );\r\ndesc3.putReference( idAt, ref1 );\r\nvar idUsng = charIDToTypeID( \"Usng\" );\r\nvar idUsrM = charIDToTypeID( \"UsrM\" );\r\nvar idRvlA = charIDToTypeID(maskType);\r\ndesc3.putEnumerated( idUsng, idUsrM, idRvlA );\r\nexecuteAction( idMk, desc3, DialogModes.NO );\r\n} catch (e) {return false};\r\n};\r\n////// check for selection //////\r\nfunction hasSelection(){\r\nvar ref10 = new ActionReference();\r\nref10.putProperty(stringIDToTypeID(\"property\"), stringIDToTypeID(\"selection\"));\r\nref10.putEnumerated( charIDToTypeID( \"Dcmn\" ), charIDToTypeID( \"Ordn\" ), charIDToTypeID( \"Trgt\" ) );\r\nvar docDesc = executeActionGet(ref10);\r\nreturn docDesc.hasKey(stringIDToTypeID(\"selection\"));\r\n};\r\n////// reselect //////\r\nfunction reselect () {\r\ntry {\r\nvar idsetd = charIDToTypeID( \"setd\" );\r\nvar desc7 = new ActionDescriptor();\r\nvar idnull = charIDToTypeID( \"null\" );\r\nvar ref2 = new ActionReference();\r\nvar idChnl = charIDToTypeID( \"Chnl\" );\r\nvar idfsel = charIDToTypeID( \"fsel\" );\r\nref2.putProperty( idChnl, idfsel );\r\ndesc7.putReference( idnull, ref2 );\r\nvar idT = charIDToTypeID( \"T   \" );\r\nvar idOrdn = charIDToTypeID( \"Ordn\" );\r\nvar idPrvs = charIDToTypeID( \"Prvs\" );\r\ndesc7.putEnumerated( idT, idOrdn, idPrvs );\r\nexecuteAction( idsetd, desc7, DialogModes.NO );\r\n} catch (e) {return false}\r\n};\r\n////// has layer mask //////\r\nfunction hasLayerMask (theIndex) {  \r\nvar m_Dsc01, m_Ref01;  \r\nm_Ref01 = new ActionReference();  \r\nm_Ref01.putIndex(charIDToTypeID(\"Lyr \"), theIndex);  \r\n//m_Ref01.putEnumerated(sTID(\"layer\"), cTID(\"Ordn\"), cTID(\"Trgt\"));  \r\nm_Dsc01 = executeActionGet(m_Ref01);  \r\nreturn m_Dsc01.hasKey(charIDToTypeID(\"Usrs\"));  \r\n};"
                },
                "type": {
                  "VarKey": null,
                  "Value": "CUSTOM"
                },
                "ext": {
                  "VarKey": null,
                  "Value": ".jsx"
                },
                "encoding": {
                  "VarKey": null,
                  "Value": "default"
                },
                "runner": {
                  "VarKey": "选中值",
                  "Value": null
                },
                "argTemplate": {
                  "VarKey": null,
                  "Value": "%FILE%"
                },
                "outputEncoding": {
                  "VarKey": null,
                  "Value": "oem"
                },
                "workingDir": {
                  "VarKey": null,
                  "Value": ""
                },
                "runAsAdmin": {
                  "VarKey": null,
                  "Value": "0"
                },
                "waitToExit": {
                  "VarKey": null,
                  "Value": "0"
                }
              },
              "OutputParams": {
                "stdout": null,
                "stdoutOnly": null,
                "stderr": null
              },
              "IfSteps": null,
              "ElseSteps": null,
              "Note": "",
              "Disabled": false,
              "Collapsed": false,
              "DelayMs": 0
            }
          ],
          "ElseSteps": null,
          "Note": "选区蒙版（对选择的图层设置选区蒙版）",
          "Disabled": false,
          "Collapsed": true,
          "DelayMs": 0
        },
        {
          "StepRunnerKey": "sys:simpleIf",
          "InputParams": {
            "condition": {
              "VarKey": null,
              "Value": "$= {选中值} == 11"
            }
          },
          "OutputParams": {},
          "IfSteps": [
            {
              "StepRunnerKey": "sys:runScript",
              "InputParams": {
                "script": {
                  "VarKey": null,
                  "Value": "app.activeDocument.suspendHistory(\"Script\", \"f()\");\r\n\r\nfunction f(){\r\n\tvar doc = activeDocument;\r\n\tvar adj_layer = doc.activeLayer;\r\n\tvar parent = adj_layer.parent;\r\n\tfor (var n = 0; n < parent.layers.length; n++)\r\n\t\t{\r\n\t\tif (parent.layers[n] == adj_layer)\r\n\t\t\t{\r\n\t\t\tfor (++n; n < parent.layers.length; n++)\r\n\t\t\t\t{\r\n\t\t\t\tif (parent.layers[n].typename == \"LayerSet\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\tvar set = parent.layers[n];\r\n\t\t\t\t\tfor (var i = set.artLayers.length-1; i >= 0; i--){\r\n\t\t\t\t\t\t var layer = adj_layer.duplicate(set.artLayers[i], ElementPlacement.PLACEBEFORE);\r\n\t\t\t\t\t\t doc.activeLayer = layer;\r\n                            var idGrpL = charIDToTypeID( \"GrpL\" );\r\n                            var desc3731 = new ActionDescriptor();  var idnull = charIDToTypeID( \"null\" ); var ref320 = new ActionReference(); var idLyr = charIDToTypeID( \"Lyr \" ); var idOrdn = charIDToTypeID( \"Ordn\" ); var idTrgt = charIDToTypeID( \"Trgt\" );  ref320.putEnumerated( idLyr, idOrdn, idTrgt );  desc3731.putReference( idnull, ref320 );executeAction( idGrpL, desc3731, DialogModes.NO );\r\n \t\t\t\t\t\texecuteAction(stringIDToTypeID(\"mergeLayersNew\"), undefined, DialogModes.NO);\r\n\t\t\t\t\t\t}\r\n                      adj_layer.remove();\r\n                      return;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n}\r\n"
                },
                "type": {
                  "VarKey": null,
                  "Value": "CUSTOM"
                },
                "ext": {
                  "VarKey": null,
                  "Value": ".jsx"
                },
                "encoding": {
                  "VarKey": null,
                  "Value": "default"
                },
                "runner": {
                  "VarKey": "选中值",
                  "Value": null
                },
                "argTemplate": {
                  "VarKey": null,
                  "Value": "%FILE%"
                },
                "outputEncoding": {
                  "VarKey": null,
                  "Value": "oem"
                },
                "workingDir": {
                  "VarKey": null,
                  "Value": ""
                },
                "runAsAdmin": {
                  "VarKey": null,
                  "Value": "0"
                },
                "waitToExit": {
                  "VarKey": null,
                  "Value": "0"
                }
              },
              "OutputParams": {
                "stdout": null,
                "stdoutOnly": null,
                "stderr": null
              },
              "IfSteps": null,
              "ElseSteps": null,
              "Note": "",
              "Disabled": false,
              "Collapsed": false,
              "DelayMs": 0
            }
          ],
          "ElseSteps": null,
          "Note": "组剪切蒙版应用到层",
          "Disabled": false,
          "Collapsed": true,
          "DelayMs": 0
        }
      ],
      "SubPrograms": null,
      "TemplateId": null,
      "TemplateRevision": 0,
      "UseServerVersion": null,
      "IsProtected": null,
      "SharedId": null,
      "ShareTimeUtc": null
    }
  ],
  "Variables": [
    {
      "Key": "procName",
      "Type": 0,
      "Desc": "",
      "DefaultValue": "",
      "SaveState": false,
      "IsInput": false,
      "IsOutput": false,
      "ParamName": "",
      "InputParamInfo": null,
      "OutputParamInfo": null,
      "TableDef": null,
      "CustomType": null,
      "Group": null
    },
    {
      "Key": "list",
      "Type": 4,
      "Desc": "",
      "DefaultValue": "轮廓路径|1\r\n放大所选|2\r\n换位|3\r\n替换形状|9\r\n修建蒙版|4\r\n智能群组|5\r\n统一缩放|6\r\n文本编辑|18\r\n所选到画板|14\r\n画板到对象|15\r\n对象到画板|16\r\n层命名|7\r\n随机上色(色板随机上色)|8\r\n链接文件夹|10\r\n链接替换|11\r\n显示链接名|17\r\n合并重叠|12\r\n随机变化|13\r\n画板旋转|19\r\n画板复制|20\r\n",
      "SaveState": false,
      "IsInput": false,
      "IsOutput": false,
      "ParamName": "",
      "InputParamInfo": null,
      "OutputParamInfo": null,
      "TableDef": null,
      "CustomType": null,
      "Group": null
    },
    {
      "Key": "path",
      "Type": 0,
      "Desc": "",
      "DefaultValue": "",
      "SaveState": false,
      "IsInput": false,
      "IsOutput": false,
      "ParamName": "",
      "InputParamInfo": null,
      "OutputParamInfo": null,
      "TableDef": null,
      "CustomType": null,
      "Group": null
    },
    {
      "Key": "选中值",
      "Type": 12,
      "Desc": "默认的文本变量",
      "DefaultValue": "",
      "SaveState": false,
      "IsInput": false,
      "IsOutput": false,
      "ParamName": "",
      "InputParamInfo": null,
      "OutputParamInfo": null,
      "TableDef": null,
      "CustomType": null,
      "Group": null
    }
  ],
  "Steps": [
    {
      "StepRunnerKey": "sys:getActiveProcessInfo",
      "InputParams": {
        "stopIfFail": {
          "VarKey": null,
          "Value": "1"
        }
      },
      "OutputParams": {
        "path": null,
        "procName": "procName",
        "pid": null,
        "isSuccess": null
      },
      "IfSteps": null,
      "ElseSteps": null,
      "Note": "",
      "Disabled": false,
      "Collapsed": false,
      "DelayMs": 0
    },
    {
      "StepRunnerKey": "sys:if",
      "InputParams": {
        "condition": {
          "VarKey": null,
          "Value": "$= {procName}.Contains(@\"llustrator\")"
        }
      },
      "OutputParams": {},
      "IfSteps": [
        {
          "StepRunnerKey": "sys:repeat",
          "InputParams": {
            "count": {
              "VarKey": null,
              "Value": "-1"
            },
            "stopCondition": {
              "VarKey": null,
              "Value": ""
            },
            "startIndex": {
              "VarKey": null,
              "Value": "0"
            },
            "repeatDelayMs": {
              "VarKey": null,
              "Value": "1"
            }
          },
          "OutputParams": {
            "count": null
          },
          "IfSteps": [
            {
              "StepRunnerKey": "sys:custompanel",
              "InputParams": {
                "operation": {
                  "VarKey": null,
                  "Value": "show_fixed_panel_wait_close"
                },
                "operationData": {
                  "VarKey": "list",
                  "Value": null
                },
                "defaultOperation": {
                  "VarKey": null,
                  "Value": ""
                },
                "spacingStr": {
                  "VarKey": null,
                  "Value": "2"
                },
                "buttonPadding": {
                  "VarKey": null,
                  "Value": "5,5"
                },
                "columnCount": {
                  "VarKey": null,
                  "Value": "2"
                },
                "columnWidth": {
                  "VarKey": null,
                  "Value": "0"
                },
                "groupMode": {
                  "VarKey": null,
                  "Value": "columns"
                },
                "selectGroup": {
                  "VarKey": null,
                  "Value": ""
                },
                "title": {
                  "VarKey": null,
                  "Value": "脚本"
                },
                "windowId": {
                  "VarKey": null,
                  "Value": ""
                },
                "stopIfFail": {
                  "VarKey": null,
                  "Value": "1"
                },
                "buttonContextMenuData": {
                  "VarKey": null,
                  "Value": ""
                },
                "winLocation": {
                  "VarKey": null,
                  "Value": "CenterScreen"
                },
                "winSize": {
                  "VarKey": null,
                  "Value": "200,280"
                },
                "saveState": {
                  "VarKey": null,
                  "Value": "1"
                },
                "horzAlign": {
                  "VarKey": null,
                  "Value": "Center"
                },
                "bgColor": {
                  "VarKey": null,
                  "Value": "#FF535353"
                },
                "btnColor": {
                  "VarKey": null,
                  "Value": "#FF535353"
                },
                "btnBorderColor": {
                  "VarKey": null,
                  "Value": "#FF424242"
                },
                "fontColor": {
                  "VarKey": null,
                  "Value": "#FFDDDDDD"
                },
                "fontsize": {
                  "VarKey": null,
                  "Value": "11"
                },
                "iconsize": {
                  "VarKey": null,
                  "Value": "50"
                },
                "contextMenuData": {
                  "VarKey": null,
                  "Value": ""
                },
                "bindProc": {
                  "VarKey": null,
                  "Value": ""
                },
                "autoCollapse": {
                  "VarKey": null,
                  "Value": "0"
                }
              },
              "OutputParams": {
                "isSuccess": null,
                "selectedItemData": "选中值",
                "selectedItem": null,
                "currentGroup": null,
                "buttonItemData": null,
                "buttonItem": null,
                "errMessage": null
              },
              "IfSteps": null,
              "ElseSteps": null,
              "Note": "",
              "Disabled": false,
              "Collapsed": false,
              "DelayMs": 0
            },
            {
              "StepRunnerKey": "sys:group",
              "InputParams": {
                "skipErr": {
                  "VarKey": null,
                  "Value": "0"
                },
                "skipWhenDebugging": {
                  "VarKey": null,
                  "Value": "0"
                },
                "useMultiThread": {
                  "VarKey": null,
                  "Value": "0"
                },
                "waitAny": {
                  "VarKey": null,
                  "Value": "0"
                }
              },
              "OutputParams": {
                "isSuccess": null,
                "errorMessage": null
              },
              "IfSteps": [
                {
                  "StepRunnerKey": "sys:getActiveProcessInfo",
                  "InputParams": {
                    "stopIfFail": {
                      "VarKey": null,
                      "Value": "1"
                    }
                  },
                  "OutputParams": {
                    "path": "path",
                    "procName": null,
                    "pid": null,
                    "isSuccess": null
                  },
                  "IfSteps": null,
                  "ElseSteps": null,
                  "Note": "",
                  "Disabled": false,
                  "Collapsed": false,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$$ {选中值} == 1"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:keyInput",
                      "InputParams": {
                        "keys": {
                          "VarKey": null,
                          "Value": "{\"CtrlKeys\":[18],\"Keys\":[79,80,39,85]}"
                        },
                        "repeat": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "interval": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "holdMs": {
                          "VarKey": null,
                          "Value": "-1"
                        }
                      },
                      "OutputParams": {},
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "轮廓路径",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 2"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Illustrator.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "//@target illustrator\r\napp.preferences.setBooleanPreference('ShowExternalJSXWarning', false); // Fix drag and drop a .jsx file\r\n\r\nfunction main() {\r\n  var SCRIPT = {\r\n        name: 'Zoom and Center',\r\n        version: 'v1.3'\r\n      };\r\n\r\n  var CFG = {\r\n        ratio: 0.75, // Zoom ratio in document window\r\n        limit: 4000, // The amount of objects, when the script can run slowly\r\n        bnds: 'visibleBounds', // Type of object boundaries: visibleBounds including strokes and effects or geometricBounds\r\n        aiVers: parseFloat(app.version),\r\n        isMac: /mac/i.test($.os),\r\n      };\r\n\r\n  if (!/illustrator/i.test(app.name)) {\r\n    alert('Wrong application\\nRun script from Adobe Illustrator', 'Script error');\r\n    return;\r\n  }\r\n\r\n  if (CFG.aiVers < 16) {\r\n    alert('Wrong app version\\nSorry, script only works in Illustrator CS6 and later', 'Script error');\r\n    return;\r\n  }\r\n\r\n  if (!app.documents.length) {\r\n    alert('No documents\\nOpen a document and try again', 'Script error');\r\n    return;\r\n  }\r\n\r\n  var doc = app.activeDocument;\r\n  if (!doc.pageItems.length) return;\r\n\r\n  deselectGuides(app.selection);\r\n\r\n  var selBnds = [];\r\n  \r\n  if (app.selection.typename === 'TextRange') {\r\n    // Define the current TextFrames to zoom, if text editing mode is active\r\n    var selTFs = getTextFrames(app.selection);\r\n    selBnds = getTotalBounds(selTFs, CFG.bnds);\r\n    zoom(selBnds, CFG.ratio);\r\n  } else if (app.selection.length) {\r\n    selBnds = getTotalBounds( get(app.selection), CFG.bnds );\r\n    zoom(selBnds, CFG.ratio);\r\n  } else {\r\n    invokeUI(SCRIPT, CFG);\r\n  }\r\n}\r\n\r\n/**\r\n * Deselect all guide objects within a given collection of items\r\n * \r\n * @param {(Object|Array)} coll - The collection of items to process\r\n */\r\nfunction deselectGuides(coll) {\r\n  if (coll.typename === 'TextRange') return;\r\n\r\n  for (var i = 0, len = coll.length; i < len; i++) {\r\n    var item = coll[i];\r\n    if (item.typename === 'GroupItem' && item.pageItems.length) {\r\n      deselectGuides(item.pageItems);\r\n    } else if (isGuide(item)) {\r\n      item.selected = false;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Determine whether an item is a guide\r\n * \r\n * @param {Object} item - The item to check\r\n * @returns {boolean} - True if the item is a guide, otherwise false\r\n */\r\nfunction isGuide(item) {\r\n  return (item.hasOwnProperty('guides') && item.guides) ||\r\n    (item.typename === 'CompoundPathItem' &&\r\n      item.pathItems.length &&\r\n      item.pathItems[0].guides);\r\n}\r\n\r\n/**\r\n * Retrieve the text frames that contain the specified text range selection\r\n * \r\n * @param {Object} coll - The selected text range\r\n * @returns {Array} - An array of text frame objects containing the selected text range\r\n */\r\nfunction getTextFrames(coll) {\r\n  if (coll.typename !== 'TextRange') return [];\r\n\r\n  var results = [];\r\n  var parentTFs = coll.parent.textFrames;\r\n  var firstIdx, lastIdx;\r\n\r\n  // Find the index range of text frames overlapping the selection\r\n  for (var i = 0, len = parentTFs.length; i < len; i++) {\r\n    if (coll.start >= parentTFs[i].textRange.start &&\r\n      coll.start <= parentTFs[i].textRange.end) {\r\n      firstIdx = i;\r\n    }\r\n\r\n    if (coll.end >= parentTFs[i].textRange.start &&\r\n      coll.end <= parentTFs[i].textRange.end) {\r\n      lastIdx = i;\r\n    }\r\n  }\r\n\r\n  // If valid indices are found, collect the overlapping text frames\r\n  for (var j = firstIdx; j <= lastIdx; j++) {\r\n    results.push(parentTFs[j]);\r\n  }\r\n\r\n  return results;\r\n}\r\n\r\n/**\r\n * Convert a collection into a standard Array\r\n *\r\n * @param {Object} coll - The collection to be converted\r\n * @returns {Array} - A new array containing the elements\r\n */\r\nfunction get(coll) {\r\n  var results = [];\r\n\r\n  for (var i = 0, len = coll.length; i < len; i++) {\r\n    results.push(coll[i]);\r\n  }\r\n\r\n  return results;\r\n}\r\n\r\n/**\r\n * Calculate the total bounds of all items in a given collection\r\n * \r\n * @param {(Object|Array)} coll - The collection of items to process\r\n * @param {string} type - The type of bounds to calculate\r\n * @returns {Array} - An array representing the total bounds [left, top, right, bottom]\r\n */\r\nfunction getTotalBounds(coll, type) {\r\n  if (arguments.length == 1 || type == undefined) type = 'geometricBounds';\r\n  if (!coll.length) return [0, 0, 0, 0];\r\n\r\n  var totalBnds = getItemBounds(coll[0], type);\r\n\r\n  for (var i = 1, len = coll.length; i < len; i++) {\r\n    var item = coll[i];\r\n    if (isGuide(item)) continue;\r\n\r\n    var currBnds = getItemBounds(item, type);\r\n\r\n    totalBnds[0] = Math.min(totalBnds[0], currBnds[0]);\r\n    totalBnds[1] = Math.max(totalBnds[1], currBnds[1]);\r\n    totalBnds[2] = Math.max(totalBnds[2], currBnds[2]);\r\n    totalBnds[3] = Math.min(totalBnds[3], currBnds[3]);\r\n  }\r\n\r\n  return totalBnds;\r\n}\r\n\r\n/**\r\n * Calculate the bounds of selected points or the entire object\r\n * \r\n * @param {Object} item - The item to evaluate\r\n * @param {string} type - The type of bounds to calculate\r\n * @returns {Array} - An array representing the bounds\r\n */\r\nfunction getItemBounds(item, type) {\r\n  if (arguments.length == 1 || type == undefined) type = 'geometricBounds';\r\n\r\n  if (isSelectedEntireItem(item) || !item.editable) {\r\n    return getVisibleBounds(item, type);\r\n  };\r\n\r\n  var results = [];\r\n  var anchPt = PathPointSelection.ANCHORPOINT;\r\n  var points = item.pathPoints;\r\n\r\n  for (var i = 0; i < points.length; i++) {\r\n    if (points[i].selected === anchPt) {\r\n      results.push(points[i]);\r\n    }\r\n  }\r\n\r\n  var left = Infinity, right = -Infinity, top = -Infinity, bottom = Infinity;\r\n\r\n  for (var j = 0; j < results.length; j++) {\r\n    var currAnch = results[j].anchor;\r\n    left = Math.min(left, currAnch[0]);\r\n    right = Math.max(right, currAnch[0]);\r\n    top = Math.max(top, currAnch[1]);\r\n    bottom = Math.min(bottom, currAnch[1]);\r\n  }\r\n\r\n  return [left, top, right, bottom];\r\n}\r\n\r\n/**\r\n * Check if an entire object is selected\r\n * \r\n * @param {Object} item - The item to evaluate\r\n * @returns {boolean} - True if the entire object is selected, otherwise false\r\n */\r\nfunction isSelectedEntireItem(item) {\r\n  if (!item.hasOwnProperty('pathPoints') || !item.pathPoints.length) {\r\n    return true;\r\n  };\r\n\r\n  var selPoints = [];\r\n  var anchPt = PathPointSelection.ANCHORPOINT;\r\n  var points = item.pathPoints;\r\n\r\n  for (var i = 0; i < points.length; i++) {\r\n    if (points[i].selected === anchPt) {\r\n      selPoints.push(points[i]);\r\n    }\r\n  }\r\n\r\n  if (selPoints.length > 0 && selPoints.length < points.length) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * Get the actual \"visible\" bounds\r\n * https://github.com/joshbduncan/illustrator-scripts/blob/main/jsx/DrawVisibleBounds.jsx\r\n *\r\n * @param {Object} obj - The target object\r\n * @param {string} type - The object bounds type\r\n * @returns {Array} - An array representing the actual bounds\r\n */\r\nfunction getVisibleBounds(obj, type) {\r\n  if (arguments.length == 1 || type == undefined) type = 'geometricBounds';\r\n  var doc = app.activeDocument;\r\n  var bnds, clippedItem, tmpItem, tmpLayer;\r\n  var curItem;\r\n  if (obj.typename === 'GroupItem') {\r\n    if (obj.clipped) {\r\n      // Check all sub objects to find the clipping path\r\n      for (var i = 0; i < obj.pageItems.length; i++) {\r\n        curItem = obj.pageItems[i];\r\n        if (curItem.clipping) {\r\n          clippedItem = curItem;\r\n          break;\r\n        } else if (curItem.typename === 'CompoundPathItem') {\r\n          if (!curItem.pathItems.length) {\r\n            // Catch compound path items with no pathItems\r\n            // via William Dowling @ github.com/wdjsdev\r\n            tmpLayer = doc.layers.add();\r\n            tmpItem = curItem.duplicate(tmpLayer);\r\n            app.executeMenuCommand('deselectall');\r\n            tmpItem.selected = true;\r\n            app.executeMenuCommand('noCompoundPath');\r\n            tmpLayer.hasSelectedArtwork = true;\r\n            app.executeMenuCommand('group');\r\n            clippedItem = item[0];\r\n            break;\r\n          } else if (curItem.pathItems[0].clipping) {\r\n            clippedItem = curItem;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if (!clippedItem) clippedItem = obj.pageItems[0];\r\n      bnds = clippedItem[type];\r\n      if (tmpLayer) {\r\n        tmpLayer.remove();\r\n        tmpLayer = undefined;\r\n      }\r\n    } else {\r\n      // If the object is not clipped\r\n      var subObjBnds;\r\n      var allBoundPoints = [[], [], [], []];\r\n      // Get the bounds of every object in the group\r\n      for (var i = 0; i < obj.pageItems.length; i++) {\r\n        curItem = obj.pageItems[i];\r\n        subObjBnds = getVisibleBounds(curItem, type);\r\n        allBoundPoints[0].push(subObjBnds[0]);\r\n        allBoundPoints[1].push(subObjBnds[1]);\r\n        allBoundPoints[2].push(subObjBnds[2]);\r\n        allBoundPoints[3].push(subObjBnds[3]);\r\n      }\r\n      // Determine the groups bounds from it sub object bound points\r\n      bnds = [\r\n        Math.min.apply(Math, allBoundPoints[0]),\r\n        Math.max.apply(Math, allBoundPoints[1]),\r\n        Math.max.apply(Math, allBoundPoints[2]),\r\n        Math.min.apply(Math, allBoundPoints[3]),\r\n      ];\r\n    }\r\n  } else {\r\n    bnds = obj[type];\r\n  }\r\n  return bnds;\r\n}\r\n\r\n/**\r\n * Zoom the Illustrator document view to fit the given bounds with a specified zoom ratio\r\n *\r\n * @param {Array} bnds - The bounding box [left, top, right, bottom] for the object(s) to focus on\r\n * @param {number} ratio - The zoom ratio to apply (e.g., 1 for 100% zoom)\r\n */\r\nfunction zoom(bnds, ratio) {\r\n  var doc = app.activeDocument;\r\n\r\n  // Reset zoom to 100% to calculate the view size\r\n  doc.views[0].zoom = 1;\r\n\r\n  var screenSize = doc.views[0].bounds;\r\n  var screenW = screenSize[2] - screenSize[0];\r\n  var screenH = screenSize[1] - screenSize[3];\r\n  var proportion = screenH / screenW;\r\n\r\n  // Calculate the center position of the bounding box\r\n  var position = [bnds[0], bnds[1]];\r\n  var bndsW = bnds[2] - bnds[0];\r\n  var bndsH = bnds[1] - bnds[3];\r\n\r\n  position[0] = bnds[0] + bndsW / 2;\r\n  position[1] = bnds[1] - bndsH / 2;\r\n\r\n  // Center the view on the bounding box\r\n  doc.views[0].centerPoint = position;\r\n\r\n  // Calculate zoom factors for width and height\r\n  var zoomFactorW = screenW / bndsW;\r\n  var zoomFactorH = screenH / bndsH;\r\n\r\n  // Choose the larger zoom factor based on the bounding box's proportion\r\n  var zoomFactor = bndsW * proportion >= bndsH ? zoomFactorW : zoomFactorH;\r\n\r\n  // Apply the zoom factor adjusted by the ratio\r\n  doc.views[0].zoom = zoomFactor * ratio;\r\n}\r\n\r\n/**\r\n * Display the user interface for zooming in on items in the active document\r\n *\r\n * @param {Object} SCRIPT - The script's name and version\r\n * @param {Object} CFG - Configuration settings\r\n */\r\nfunction invokeUI(SCRIPT, CFG) {\r\n  var doc = app.activeDocument;\r\n\r\n  // Create the main dialog window\r\n  var win = new Window('dialog', SCRIPT.name + ' ' + SCRIPT.version);\r\n      win.orientation = 'column';\r\n      win.alignChildren = ['fill', 'center'];\r\n      win.opacity = .98;\r\n\r\n  // Zoom options panel\r\n  var option = win.add('panel', undefined, 'Zoom to');\r\n      option.orientation = 'column';\r\n      option.alignChildren = ['fill', 'fill'];\r\n      option.margins = [10, 20, 10, 10];\r\n\r\n  var isZoomVis = option.add('radiobutton', undefined, 'Visible and Unlocked');\r\n      isZoomVis.helpTip = 'Press 1 to activate';\r\n  var isZoomLock = option.add('radiobutton', undefined, 'All Visible Items');\r\n      isZoomLock.helpTip = 'Press 2 to activate';\r\n  var isZoomAll = option.add('radiobutton', undefined, 'All in Document');\r\n      isZoomAll.helpTip = 'Press 3 to activate';\r\n  \r\n  isZoomVis.value = true;\r\n\r\n  if (CFG.isMac || CFG.aiVers >= 26.4 || CFG.aiVers <= 17) {\r\n    isZoomVis.active = true;\r\n  }\r\n\r\n  // If the document has a large number of items, the script can run slowly\r\n  // The number depends on the performance of the computer \r\n  if (doc.pageItems.length > CFG.limit) {\r\n    var info = win.add('statictext', undefined, '', { multiline: true });\r\n        info.text = 'The document has over ' + CFG.limit + ' items. The script can run slowly';\r\n        info.justify = 'center';\r\n  }\r\n\r\n  // Buttons\r\n  var btns = win.add('group');\r\n      btns.alignChildren = ['fill', 'center'];\r\n\r\n  var cancel = btns.add('button', undefined, 'Cancel', {name: 'cancel'});\r\n      cancel.helpTip = 'Press Esc to Close';\r\n  var ok = btns.add('button', undefined, 'Ok', {name: 'ok'});\r\n      ok.helpTip = 'Press Enter to Run';\r\n\r\n  var copyright = win.add('statictext', undefined, '\\u00A9 Sergey Osokin. Visit Github');\r\n      copyright.justify = 'center';\r\n\r\n  // Keyboard shortcuts for radio buttons\r\n  win.addEventListener('keydown', function(kd) {\r\n    var key = kd.keyName;\r\n    if (key.match(/1/)) isZoomVis.notify();\r\n    if (key.match(/2/)) isZoomLock.notify();\r\n    if (key.match(/3/)) isZoomAll.notify();\r\n  });\r\n\r\n  cancel.onClick = win.close;\r\n  ok.onClick = okClick;\r\n\r\n  copyright.addEventListener('mousedown', function () {\r\n    openURL('https://github.com/creold');\r\n  });\r\n\r\n  function okClick() {\r\n    var selBnds = [];\r\n\r\n    if (isZoomVis.value) { // Zoom to visible and unlocked items\r\n      app.executeMenuCommand('deselectall');\r\n      app.executeMenuCommand('selectall');\r\n      deselectGuides(app.selection);\r\n      selBnds = getTotalBounds(app.selection, CFG.bnds);\r\n      zoom(selBnds, CFG.ratio);\r\n      app.executeMenuCommand('deselectall');\r\n    } else if (isZoomLock.value) { // Zoom to all visible items\r\n      var items = getVisibleItems( get(doc.pageItems) );\r\n      selBnds = getTotalBounds(items, CFG.bnds);\r\n      zoom(selBnds, CFG.ratio);\r\n    } else if (isZoomAll.value) { // Zoom to entire document\r\n      selBnds = getTotalBounds(doc.pageItems, CFG.bnds);\r\n      zoom(selBnds, CFG.ratio);\r\n    }\r\n\r\n    win.close();\r\n  }\r\n\r\n  win.center();\r\n  win.show();\r\n}\r\n\r\n/**\r\n * Filter and returns all visible items from a given collection\r\n *\r\n * @param {(Object|Array)} coll - The collection of items to check for visibility\r\n * @returns {Array} - An array of visible items from the collection\r\n */\r\nfunction getVisibleItems(coll) {\r\n  var results = [];\r\n\r\n  for (var i = 0, len = coll.length; i < len; i++) {\r\n    if (isVisible(coll[i])) results.push(coll[i]);\r\n  }\r\n\r\n  return results;\r\n}\r\n\r\n/**\r\n * Check whether an item is visible, considering visibility and lock status of its parent layers and groups\r\n *\r\n * @param {Object} item - The item to check for visibility\r\n * @returns {boolean} - True if the item is visible, false otherwise\r\n */\r\nfunction isVisible(item) {\r\n  var prnt = item.parent;\r\n  var result = true;\r\n\r\n  switch (prnt.typename) {\r\n    case 'GroupItem':\r\n      // Group is not visible, item is considered hidden\r\n      if (prnt.hidden) return false;\r\n      else result = isVisible(prnt);\r\n      break;\r\n    case 'Layer':\r\n      // Layer is not visible, item is considered hidden\r\n      if (!prnt.visible) return false;\r\n      else result = isVisible(prnt);\r\n      break;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Open a URL in the default web browser\r\n * \r\n * @param {string} url - The URL to open in the web browser\r\n * @returns {void}\r\n*/\r\nfunction openURL(url) {\r\n  var html = new File(Folder.temp.absoluteURI + '/aisLink.html');\r\n  html.open('w');\r\n  var htmlBody = '<html><head><META HTTP-EQUIV=Refresh CONTENT=\"0; URL=' + url + '\"></head><body> <p></body></html>';\r\n  html.write(htmlBody);\r\n  html.close();\r\n  html.execute();\r\n}\r\n\r\n// Run script\r\ntry {\r\n  main();\r\n} catch (err) {}"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "放大",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 3"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Illustrator.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "/*\r\n* Decompiled with Jsxer\r\n* Version: 1.6.0\r\n* JSXBIN 2.0\r\n*/\r\n\r\nfunction strokeObj(pName, strokeWt, diff) {\r\nthis.pName = pName;\r\nthis.strokeWt = strokeWt;\r\nthis.diff = diff;\r\n}\r\nfunction markStroked(Sel, mydiff) {\r\nvar strokdiff = mydiff;\r\nvar slen = Sel.length;\r\nif (Sel.typename == \"GroupItem\") { \r\nmarkStroked(Sel.pageItems, mydiff);\r\n}\r\nelse if (Sel.typename == \"CompoundPathItem\") {\r\nmyColor = Sel.pathItems[0];\r\nmyWt = myColor.strokeWidth;\r\nbob = new strokeObj(myColor, myWt, strokdiff);\r\nstrokeArray.push(bob);\r\n}\r\nelse if (Sel.typename == \"TextFrame\") {\r\nif (Sel.textRange.characterAttributes.strokeColor.typename != \"NoColor\") { \r\nvar clMax = Sel.textRange.characters.length;\r\nfor (var cl = 0; cl < clMax; cl++) {\r\nmyColor = Sel.textRange.characters[cl].characterAttributes;\r\nmyWt = myColor.strokeWeight;\r\nbob = new strokeObj(myColor, myWt, strokdiff);\r\nstrokeArray.push(bob);\r\n}\r\n}\r\n}\r\nelse {\r\nif (Sel.typename == \"PathItem\") { \r\nmyColor = Sel;\r\nmyWt = myColor.strokeWidth;\r\nbob = new strokeObj(myColor, myWt, strokdiff);\r\nstrokeArray.push(bob);\r\n}\r\n}\r\nif (Sel.typename == \"GroupItem\") { \r\nfor (var a = 0; a < slen; a++) {\r\nif (Sel[a].typename == \"GroupItem\") { \r\nmarkStroked(Sel[a].pageItems, mydiff);\r\n}\r\nelse if (Sel[a].typename == \"CompoundPathItem\") {\r\nmyColor = Sel[a].pathItems[0];\r\nmyWt = myColor.strokeWidth;\r\nbob = new strokeObj(myColor, myWt, strokdiff);\r\nstrokeArray.push(bob);\r\n}\r\nelse if (Sel[a].typename == \"PathItem\") {\r\nif (Sel[a].stroked == true) { \r\nmyColor = Sel[a];\r\nmyWt = myColor.strokeWidth;\r\nbob = new strokeObj(myColor, myWt, strokdiff);\r\nstrokeArray.push(bob);\r\n}\r\n}\r\nelse {\r\nif (Sel[a].typename == \"TextFrame\") { \r\nif (Sel[a].textRange.characterAttributes.strokeColor.typename != \"NoColor\") { \r\nvar clMax = Sel[a].textRange.characters.length;\r\nfor (var cl = 0; cl < clMax; cl++) {\r\nmyColor = Sel[a].textRange.characters[cl].characterAttributes;\r\nmyWt = myColor.strokeWeight;\r\nbob = new strokeObj(myColor, myWt, strokdiff);\r\nstrokeArray.push(bob);\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\n}\r\nfunction scaleStroke(mySlx) {\r\nvar slen = mySlx.length;\r\nfor (var a = 0; a < slen; a++) {\r\nmySlx[a].pName.strokeWidth = mySlx[a].strokeWt * mySlx[a].diff;\r\nmySlx[a].pName.strokeWeight = mySlx[a].strokeWt * mySlx[a].diff;\r\n}\r\n}\r\ntry {\r\nvar selObjs = \"\\u8bf7\\u5728\\u540c\\u4e00\\u4e2a\\u753b\\u677f\\u4e0a\\u9009\\u53d6\\u4e24\\u4e2a\\u5bf9\\u8c61\";\r\nvar docRef = activeDocument;\r\nif (documents.length > 0) { \r\nif (docRef.selection.length == 2) { \r\nmySelection = docRef.selection;\r\nif (mySelection instanceof Array) { \r\nvar scaled = true;\r\nvar strokeArray = new Array();\r\nvar origBounds = mySelection[0].geometricBounds;\r\nvar initBounds = mySelection[1].geometricBounds;\r\nvar oul_x = origBounds[0];\r\nvar oul_y = origBounds[1];\r\nvar olr_x = origBounds[2];\r\nvar olr_y = origBounds[3];\r\nvar oSelWidth = olr_x - oul_x;\r\nvar oSelHeight = oul_y - olr_y;\r\nvar oSelPos = [oul_x, oul_y];\r\nvar ul_x = initBounds[0];\r\nvar ul_y = initBounds[1];\r\nvar lr_x = initBounds[2];\r\nvar lr_y = initBounds[3];\r\nvar mySelWidth = lr_x - ul_x;\r\nvar mySelHeight = ul_y - lr_y;\r\nvar mySelPos = [ul_x, ul_y];\r\nif (scaled == true) { \r\nvar wdiff = mySelWidth / oSelWidth;\r\nvar whght = mySelHeight / oSelHeight;\r\nvar cdiff = oSelWidth / mySelWidth;\r\nvar chght = oSelHeight / mySelHeight;\r\nvar propDiff = (wdiff + whght) / 2;\r\nvar revDiff = (cdiff + chght) / 2;\r\n}\r\nelse {\r\nvar propDiff = 1;\r\n}\r\nmySelPos = [(ul_x - (oSelWidth / 2)) + (mySelWidth / 2), (ul_y + (oSelHeight / 2)) - (mySelHeight / 2)];\r\nmySelection[0].position = mySelPos;\r\noSelPos = [(oul_x - (mySelWidth / 2)) + (oSelWidth / 2), (oul_y + (mySelHeight / 2)) - (oSelHeight / 2)];\r\nmySelection[1].position = oSelPos;\r\nscaleStroke(strokeArray);\r\n}\r\nelse {\r\nalert(mySelection + \" is not an array!\\n\" + selObjs);\r\n}\r\n}\r\nelse {\r\nalert(\"\\u9009\\u53d6\\u7684\\u5bf9\\u8c61\\u5e76\\u975e\\u4e24\\u4e2a!\\n\" + selObjs);\r\n}\r\n}\r\n} catch (e) {alert(\"problem:\\n\" + e);\r\n}"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "换位",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 4"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Illustrator.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "/*\r\n  TrimMasks.jsx for Adobe Illustrator\r\n  Description: Automatic trimming of all clipping groups in a document using Pathfinder > Crop\r\n  Date: March, 2020\r\n  Author: Sergey Osokin, email: hi@sergosokin.ru\r\n\r\n  Installation: https://github.com/creold/illustrator-scripts#how-to-run-scripts\r\n\r\n  Release notes:\r\n  0.1 Initial version.\r\n  0.2 Added \"isSaveMask\" boolean flag for save the filled mask path, fixed the live text masks.\r\n  0.3 Fixed a cropping bug when is even-odd fill-rule\r\n\r\n  Donate (optional):\r\n  If you find this script helpful, you can buy me a coffee\r\n  - via YooMoney https://yoomoney.ru/to/410011149615582\r\n  - via QIWI https://qiwi.com/n/OSOKIN\r\n  - via Donatty https://donatty.com/sergosokin\r\n  - via PayPal http://www.paypal.me/osokin/usd\r\n\r\n  NOTICE:\r\n  Tested with Adobe Illustrator CC 2018-2021 (Mac), 2021 (Win).\r\n  This script is provided \"as is\" without warranty of any kind.\r\n  Free to use, not for sale\r\n\r\n  Released under the MIT license\r\n  http://opensource.org/licenses/mit-license.php\r\n\r\n  Check other author's scripts: https://github.com/creold\r\n*/\r\n\r\n//@target illustrator\r\napp.preferences.setBooleanPreference('ShowExternalJSXWarning', false); // Fix drag and drop a .jsx file\r\n$.localize = true; // Enabling automatic localization\r\napp.userInteractionLevel = UserInteractionLevel.DONTDISPLAYALERTS;\r\n\r\nfunction main() {\r\n  var CFG = {\r\n        aiVers: parseInt(app.version),\r\n        actionSet: 'Trim-Mask',\r\n        actionName: 'Trim-Mask',\r\n        actionPath: Folder.myDocuments + '/Adobe Scripts/',\r\n        isSaveMask: true, // true — save the filled mask path when trimming, false - not save\r\n        over: 10 // When the number of clip groups >, full-screen mode is enabled\r\n      },\r\n      LANG = {\r\n        errDoc: { en: 'Error\\nOpen a document and try again',\r\n                  ru: 'Ошибка\\nОткройте документ и запустите скрипт' },\r\n        errVers: { en: 'Error\\nSorry, script only works in Illustrator CS6 and later',\r\n                  ru: 'Ошибка\\nСкрипт работает в Illustrator CS6 и выше' }\r\n      },\r\n      itemAttr = { \r\n        mOpacity: 100,\r\n        mBlending: BlendModes.NORMAL\r\n      };\r\n\r\n  if (!documents.length) {\r\n    alert(LANG.errDoc);\r\n    return;\r\n  }\r\n\r\n  if (CFG.aiVers < 16) {\r\n    alert(LANG.errVers);\r\n    return;\r\n  }\r\n\r\n  if (selection.typename == 'TextRange') return;\r\n\r\n  if (!Folder(CFG.actionPath).exists) Folder(CFG.actionPath).create();\r\n\r\n  var doc = app.activeDocument,\r\n      userView = doc.views[0].screenMode;\r\n\r\n  // Generate action\r\n  var actionStr =\r\n    ['   /version 3',\r\n    '/name [' + CFG.actionSet.length + ' ' + ascii2Hex(CFG.actionSet) + ']',\r\n    '/actionCount 1',\r\n    '/action-1 {',\r\n    '/name [' + CFG.actionName.length + ' ' + ascii2Hex(CFG.actionName) + ']',\r\n    '  /keyIndex 0',\r\n    '  /colorIndex 0',\r\n    '  /isOpen 1',\r\n    '  /eventCount 1',\r\n    '  /event-1 {',\r\n    '    /useRulersIn1stQuadrant 0',\r\n    '    /internalName (ai_plugin_pathfinder)',\r\n    '    /localizedName [ 10',\r\n    '      5061746866696e646572',\r\n    '    ]',\r\n    '   /isOpen 0',\r\n    '    /isOn 1',\r\n    '    /hasDialog 0',\r\n    '    /parameterCount 1',\r\n    '    /parameter-1 {',\r\n    '      /key 1851878757',\r\n    '      /showInPalette 4294967295',\r\n    '      /type (enumerated)',\r\n    '      /name [ 4',\r\n    '        43726f70',\r\n    '      ]',\r\n    '      /value 9',\r\n    '    }',\r\n    '  }',\r\n    '}'].join('');\r\n\r\n  createAction(actionStr, CFG.actionSet, CFG.actionPath);\r\n\r\n  if (selection.length == 0) app.executeMenuCommand('selectall');\r\n  var groups = getGroups(selection),\r\n      clipCounter = countClipGroups(groups);\r\n  // When the number of clip groups >, full-screen mode is enabled\r\n  if (clipCounter > CFG.over) doc.views[0].screenMode = ScreenMode.FULLSCREEN;\r\n\r\n  try {\r\n    processing(groups, itemAttr, CFG.isSaveMask, CFG.actionSet, CFG.actionName);\r\n  } catch (e) {}\r\n\r\n  app.unloadAction(CFG.actionSet, '');\r\n  deselect();\r\n  doc.views[0].screenMode = userView;\r\n  app.userInteractionLevel = UserInteractionLevel.DISPLAYALERTS;\r\n}\r\n\r\nfunction createAction(str, set, path) {\r\n  var f = new File('' + path + '/' + set + '.aia');\r\n  f.open('w');\r\n  f.write(str);\r\n  f.close();\r\n  app.loadAction(f);\r\n  f.remove();\r\n}\r\n\r\nfunction ascii2Hex(hex) {\r\n  return hex.replace(/./g, function (a) { return a.charCodeAt(0).toString(16) });\r\n}\r\n\r\n// Get only groups from selection or document\r\nfunction getGroups(items) {\r\n  var childsArr = [],\r\n      currItem;\r\n  for (var i = 0, iLen = items.length; i < iLen; i++) {\r\n    currItem = items[i];\r\n    if (isGroup(currItem)) childsArr.push(currItem);\r\n  }\r\n  return childsArr;\r\n}\r\n\r\n// Check the item type\r\nfunction isGroup(item) {\r\n  return item.typename === 'GroupItem';\r\n}\r\n\r\n// Count all clipping groups\r\nfunction countClipGroups(items) {\r\n  var counter = 0;\r\n  for (var i = 0, iLen = items.length; i < iLen; i++) {\r\n    if (isGroup(items[i]) && items[i].clipped) counter++;\r\n    if (isGroup(items[i]) && !items[i].clipped) counter +=   countClipGroups(items[i].pageItems);\r\n  }\r\n  return counter;\r\n}\r\n\r\nfunction processing(items, attr, isSaveMask, actionSet, actionName) {\r\n  var currItem;\r\n  for (var i = 0, iLen = items.length; i < iLen; i++) {\r\n    deselect();\r\n    currItem = items[i];\r\n    if (isGroup(currItem) && currItem.clipped) {\r\n      fixFillRule(currItem);\r\n      trim(currItem, attr, isSaveMask, actionSet, actionName);\r\n    }\r\n    if (isGroup(currItem) && !currItem.clipped) {\r\n      if (currItem.pageItems.length == 1 && isGroup(currItem.pageItems[0])) {\r\n        var singleItem = currItem.pageItems[0];\r\n        singleItem.moveBefore(currItem);\r\n        trim(singleItem, attr, isSaveMask, actionSet, actionName);\r\n      } else {\r\n        processing(currItem.pageItems, attr, isSaveMask, actionSet, actionName);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction deselect() {\r\n  selection = null;\r\n  redraw();\r\n}\r\n\r\n// If Attributes > Even-Odd is true, then the Pathfinder > Crop has an incorrect result\r\nfunction fixFillRule(item) {\r\n  for (var i = 0, piLen = item.pageItems.length; i < piLen; i++) {\r\n    var currItem = item.pageItems[i];\r\n    if (isGroup(currItem)) fixFillRule(currItem);\r\n    if (currItem.typename === 'CompoundPathItem') currItem = currItem.pathItems[0];\r\n    currItem.evenodd = false;\r\n  }\r\n}\r\n\r\nfunction trim(item, attr, isSaveMask, actionSet, actionName) {\r\n  // Save opacity & blendingMode properties\r\n  if (item.opacity < 100) attr.mOpacity = item.opacity;\r\n  if (item.blendingMode != BlendModes.NORMAL) attr.mBlending = item.blendingMode;\r\n\r\n  // If <clip group> contains live text\r\n  outlineText(item);\r\n\r\n  // Trick for Compound path created from groups of paths\r\n  item.selected = true;\r\n  compoundPathsNormalize(selection);\r\n\r\n  if (isSaveMask) {\r\n    duplicateFilledMask(item, attr.mOpacity, attr.mBlending);\r\n  }\r\n\r\n  item.selected = true;\r\n  // Because the duplicate mask is select behind\r\n  if (isSaveMask) selection = selection[0];\r\n  app.doScript(actionName, actionSet);\r\n\r\n  if (selection.length > 0) {\r\n    // Restore opacity to child path\r\n    if (attr.mOpacity < 100) selection[0].opacity = attr.mOpacity;\r\n    // Restore blendingMode to child path\r\n    if (attr.mBlending != BlendModes.NORMAL) selection[0].blendingMode = attr.mBlending;\r\n  }\r\n\r\n  attr.mOpacity = 100;\r\n  attr.mBlending = BlendModes.NORMAL;\r\n}\r\n\r\nfunction outlineText(group) {\r\n  try {\r\n    for (var i = 0, piLen = group.pageItems.length; i < piLen; i++) {\r\n      var currItem = group.pageItems[i],\r\n          itemType = currItem.typename;\r\n      if (itemType === 'TextFrame') {\r\n        var textColor = currItem.textRange.fillColor;\r\n        currItem.selected = true;\r\n        app.executeMenuCommand('outline');\r\n        for (var j = 0, selLen = selection.length; j < selLen; j++) {\r\n          if (selection[j].typename  === 'PathItem') selection[j].fillColor = textColor;\r\n          if (selection[j].typename  === 'CompoundPathItem') {\r\n            // Trick for Compound path created from groups of paths\r\n            if (selection[j].pathItems.length == 0) {\r\n              var tempPath = selection[j].pathItems.add();\r\n            }\r\n            selection[j].pathItems[0].fillColor = textColor;\r\n            tempPath.remove();\r\n          }\r\n        }\r\n        deselect();\r\n      }\r\n      if (isGroup(currItem)) outlineText(currItem);\r\n    }\r\n  } catch (e) {}\r\n}\r\n\r\nfunction ungroup(items) {\r\n  for (var i = 0, iLen = items.length; i < iLen; i++) {\r\n    if (isGroup(items[i])) {\r\n      var j = items[i].pageItems.length;\r\n      while (j--) {\r\n        items[i].pageItems[0].locked = items[i].pageItems[0].hidden = false;\r\n        items[i].pageItems[0].moveBefore(items[i]);\r\n      }\r\n      items[i].remove();\r\n    }\r\n  }\r\n}\r\n\r\n// Trick for Compound path created from groups of paths\r\nfunction compoundPathFix(item) {\r\n  selection = [item];\r\n  app.executeMenuCommand('noCompoundPath');\r\n  ungroup(selection);\r\n  app.executeMenuCommand('compoundPath');\r\n  deselect();\r\n}\r\n\r\n// From compoundFix.jsx by Alexander Ladygin https://github.com/alexander-ladygin\r\nfunction compoundPathsNormalize(items) {\r\n  var i = items.length;\r\n  while (i--) {\r\n    if (isGroup(items[i])) {\r\n      compoundPathsNormalize(items[i].pageItems);\r\n    } else if (items[i].typename === 'CompoundPathItem') {\r\n      compoundPathFix(items[i]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction duplicateFilledMask(group, opacity, blending) {\r\n  try {\r\n    for (var i = 0, piLen = group.pageItems.length; i < piLen; i++) {\r\n      var currItem = group.pageItems[i],\r\n          itemType = currItem.typename,\r\n          zeroPath = (itemType === 'CompoundPathItem') ? currItem.pathItems[0] : currItem;\r\n\r\n      if ((itemType === 'PathItem' || itemType === 'CompoundPathItem') &&\r\n          zeroPath.clipping && zeroPath.filled) {\r\n        var maskClone = currItem.duplicate(group, ElementPlacement.PLACEAFTER);\r\n            // Restore opacity to child path\r\n            if (opacity < 100) maskClone.opacity = opacity;\r\n            // Restore blendingMode to child path\r\n            if (blending != BlendModes.NORMAL) maskClone.blendingMode = blending;\r\n      }\r\n    }\r\n    redraw();\r\n  } catch (e) {}\r\n}\r\n\r\ntry {\r\n  main();\r\n} catch (e) {}"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "修建蒙版",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 5"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Illustrator.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "/*\r\n* Decompiled with Jsxer\r\n* Version: 1.6.0\r\n* JSXBIN 2.0\r\n*/\r\n\r\nfunction E_G(arr, L) {\r\nvar tempGroup = AD.groupItems.add();\r\narr.sort(function (x, y) {\r\nreturn x._order > y._order;\r\n});\r\nfor (var i = 0; i < L; i++) {\r\narr[i].moveToEnd(tempGroup);\r\n}\r\n}\r\nvar AD = activeDocument;\r\nvar S = selection;\r\nvar len = S.length;\r\nfor (var i = len; i--; ) { \r\nS[i]._order = i;}\r\nwhile (len > 1) {\r\nvar groupArr = [];\r\nvar a = S.pop();\r\nvar pa = !a.clipped ? a.visibleBounds : a.pathItems[0].visibleBounds;\r\ngroupArr[0] = a;\r\nlen--;\r\npoint: \r\ndo {\r\n  var exchange = 0;\r\nfor (var i = len; i--; ) { \r\nvar b = S[i];\r\nvar pb = !b.clipped ? b.visibleBounds : b.pathItems[0].visibleBounds;\r\nif ((((pb[0] >= pa[0]) && (pb[0] <= pa[2])) || ((pa[0] >= pb[0]) && (pa[0] <= pb[2]))) && (((pb[1] <= pa[1]) && (pb[1] >= pa[3])) || ((pa[1] <= pb[1]) && (pa[1] >= pb[3])))) { \r\ngroupArr.push(S.splice(i, 1)[0]);\r\nlen--;\r\npa = [Math.min(pa[0], pb[0]), Math.max(pa[1], pb[1]), Math.max(pa[2], pb[2]), Math.min(pa[3], pb[3])];\r\nexchange = 1;\r\ncontinue point;\r\n}}\r\n} while (exchange)\r\ng_len = groupArr.length;\r\n(g_len > 1) && (E_G(groupArr, g_len));\r\n}\r\nAD.selection = null;"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "智能群组",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 6"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Illustrator.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "/*\r\n  ResizeToSize.jsx for Adobe Illustrator\r\n  Description: Resize each selected object to the entered size\r\n  Date: April, 2020\r\n  Modification date: February, 2024\r\n  Author: Sergey Osokin, email: hi@sergosokin.ru\r\n\r\n  Installation: https://github.com/creold/illustrator-scripts#how-to-run-scripts\r\n\r\n  Release notes:\r\n  0.9.1 Removed input activation on Windows OS below CC v26.4\r\n  0.9 Added Smaller and Random option to Scaling side\r\n  0.8.3 Added new units API for CC 2023 v27.1.1\r\n  0.8.2 Added size correction in large canvas mode\r\n  0.8.1 Fixed input activation in Windows OS\r\n  0.8 Added relative resize option. Minor improvements\r\n  0.7.1 Code refactoring\r\n  0.7 Fixed live preview bug. Minor improvements\r\n  0.6 Added live preview (Shift+P)\r\n  0.5 Added dimensions bounds\r\n  0.4 Correct resize Clipping Mask. Added access key shortcuts\r\n  0.3 Added additional settings\r\n  0.2 Added menu for side selection\r\n  0.1 Initial version\r\n\r\n  Donate (optional):\r\n  If you find this script helpful, you can buy me a coffee\r\n  - via Buymeacoffee: https://www.buymeacoffee.com/aiscripts\r\n  - via Donatty https://donatty.com/sergosokin\r\n  - via DonatePay https://new.donatepay.ru/en/@osokin\r\n  - via YooMoney https://yoomoney.ru/to/410011149615582\r\n\r\n  NOTICE:\r\n  Tested with Adobe Illustrator CC 2019-2024 (Mac/Win)\r\n  This script is provided \"as is\" without warranty of any kind\r\n  Free to use, not for sale\r\n\r\n  Released under the MIT license\r\n  http://opensource.org/licenses/mit-license.php\r\n\r\n  Check my other scripts: https://github.com/creold\r\n*/\r\n\r\n//@target illustrator\r\npreferences.setBooleanPreference('ShowExternalJSXWarning', false); // Fix drag and drop a .jsx file\r\n\r\nfunction main () {\r\n  var SCRIPT = {\r\n        name: '调整大小',\r\n        version: 'v0.9.1'\r\n      },\r\n      CFG = {\r\n        size: 100, // Default size value\r\n        modKey: 'Q', // User modifier key for shortcuts\r\n        maxSize: 16383, // Illustrator canvas, px\r\n        units: getUnits(),\r\n        aiVers: parseFloat(app.version),\r\n        isMac: /mac/i.test($.os),\r\n        isInclStroke: preferences.getBooleanPreference('includeStrokeInBounds'),\r\n        isScaleCorner: preferences.getIntegerPreference('policyForPreservingCorners'),\r\n        isScaleStroke: preferences.getBooleanPreference('scaleLineWeight'),\r\n        isScalePattern: preferences.getBooleanPreference('transformPatterns'),\r\n        refActive: preferences.getIntegerPreference('plugin/Transform/AnchorPoint'),\r\n        refPointsHint: ['Top Left', 'Top', 'Top Right',\r\n                        'Left', 'Center', 'Right',\r\n                        'Bottom Left', 'Bottom', 'Bottom Right'\r\n                      ],\r\n        sideList: ['W\\u0332\\u5bbd', 'H\\u0332\\u9ad8', 'L\\u0332\\u8f83\\u5927', 'S\\u0332\\u8f83\\u5c0f', 'R\\u0332\\u968f\\u673a\\u7684'],\r\n        uiMargins: [10, 15, 10, 10]\r\n      },\r\n      SETTINGS = {\r\n        name: SCRIPT.name.replace(/\\s/g, '_') + '_data.json',\r\n        folder: Folder.myDocuments + '/Adobe Scripts/'\r\n      };\r\n\r\n  if (!documents.length) {\r\n    alert('Error\\nOpen a document and try again');\r\n    return;\r\n  }\r\n\r\n  if (!selection.length || selection.typename == 'TextRange') {\r\n    alert('Error\\nPlease select atleast one object');\r\n    return;\r\n  }\r\n\r\n  var refPointArr = new Array(9), // Reference point array\r\n      refPointVal = '', // Reference point name\r\n      ratio = 0, // Resize ratio\r\n      isUndo = false\r\n      result = []; // Bad items\r\n\r\n  // Scale factor for Large Canvas mode\r\n  CFG.sf = activeDocument.scaleFactor ? activeDocument.scaleFactor : 1;\r\n\r\n  // DIALOG\r\n  var win = new Window('dialog', SCRIPT.name + ' ' + SCRIPT.version);\r\n      win.orientation = 'column';\r\n\r\n  // Size\r\n  var sizeGrp = win.add('group');\r\n      sizeGrp.alignChildren = 'fill';\r\n      sizeGrp.spacing = 20;\r\n\r\n  sizeGrp.add('statictext', undefined, 'Size, ' + CFG.units + ':');\r\n  var sizeInp = sizeGrp.add('edittext', undefined, CFG.size);\r\n      sizeInp.preferredSize.width = 60;\r\n  if (CFG.isMac || CFG.aiVers >= 26.4 || CFG.aiVers <= 17) {\r\n    sizeInp.active = true;\r\n  }\r\n\r\n  var relGrp = sizeGrp.add('group');\r\n\r\n  var exacRb = relGrp.add('radiobutton', undefined, '\\u4fee\\u6539');\r\n      exacRb.alignment = 'bottom';\r\n      exacRb.value = true;\r\n  var deltaRb = relGrp.add('radiobutton', undefined, '\\u589e\\u52a0');\r\n      deltaRb.alignment = 'bottom';\r\n\r\n  // Item bounds\r\n  var bndsPnl = win.add('panel', undefined, '\\u8fb9\\u754c');\r\n      bndsPnl.orientation = 'row';\r\n      bndsPnl.alignChildren = 'fill';\r\n      bndsPnl.margins = CFG.uiMargins;\r\n      bndsPnl.preferredSize.width = 270;\r\n\r\n  var vbRb = bndsPnl.add('radiobutton', undefined, '\\u542b\\u63cf\\u8fb9'); // Unicode V̲\r\n      vbRb.helpTip = 'Object\\u0027s bounding box, \\nincluding any stroke widths.' +\r\n                        '\\nCheck Preferences > General >\\nUse Preview Bounds,' +\r\n                        '\\nView > Show bounding box';\r\n  var gbRb = bndsPnl.add('radiobutton', undefined, '\\u4e0d\\u542b\\u63cf\\u8fb9'); // Unicode G̲\r\n      gbRb.helpTip = 'Object\\u0027s bounding box, excluding \\nstroke width. ' +\r\n                        'Uncheck Preferences > \\nGeneral > Use Preview Bounds.';\r\n\r\n  CFG.isInclStroke ? vbRb.value = true : gbRb.value = true;\r\n\r\n  // Side and reference point\r\n  var sideGrp = win.add('group');\r\n\r\n  var sidePnl = sideGrp.add('panel', undefined, 'Scaling side');\r\n      sidePnl.orientation = 'row';\r\n      sidePnl.bounds = [0, 0 , 160, 110];\r\n\r\n  // Create scaling side matrix\r\n  var idx = 0;\r\n  var sideArr = [];\r\n  for (var i = 0; i < 3; i++) {\r\n    for (var j = 0; j < 2; j++) {\r\n      if (!CFG.sideList[idx]) break;\r\n      sideArr[idx] = addRadiobutton(sidePnl, j, i, CFG.sideList[idx], true);\r\n      idx++;\r\n    };\r\n  };\r\n\r\n  var refPointPnl = sideGrp.add('panel', undefined, 'Ref. point');\r\n      refPointPnl.orientation = 'row';\r\n      refPointPnl.bounds = [0, 0 , 100, 110];\r\n\r\n  // Create Reference point matrix\r\n  var idx = 0;\r\n  for (var i = 0; i < 3; i++) {\r\n    for (var j = 0; j < 3; j++) {\r\n      refPointArr[idx] = addRadiobutton(refPointPnl, j, i, CFG.refPointsHint[idx]);\r\n      idx++;\r\n    };\r\n  };\r\n  refPointArr[CFG.refActive].value = true; // Get value from Transform panel\r\n\r\n  // Extra options\r\n  var prefs = win.add('panel', undefined, 'Scaling options');\r\n      prefs.orientation = 'row';\r\n      prefs.alignChildren = 'fill';\r\n      prefs.margins = CFG.uiMargins;\r\n      prefs.spacing = 20;\r\n      prefs.preferredSize.width = 270;\r\n\r\n  var prefsColOne = prefs.add('group');\r\n      prefsColOne.orientation = 'column';\r\n      prefsColOne.alignChildren = 'left';\r\n      prefsColOne.alignment = 'top';\r\n\r\n  var isUniform = prefsColOne.add('checkbox', undefined, '\\u7b49\\u6bd4'); // Unicode U̲\r\n      isUniform.helpTip = 'Scale proportionally';\r\n      isUniform.value = true;\r\n\r\n  if (CFG.aiVers > 16) { // Illustrator CS6 not support Live Shape\r\n    var isCorner = prefsColOne.add('checkbox', undefined, '\\u5706\\u89d2'); // Unicode C̲\r\n        isCorner.helpTip = 'Only works with Live Shape';\r\n        isCorner.value = (CFG.isScaleCorner == 1) ? true : false;\r\n  }\r\n\r\n  var isStroke = prefsColOne.add('checkbox', undefined, '\\u7b14\\u753b\\u548c\\u6548\\u679c'); // Unicode S̲\r\n      isStroke.value = CFG.isScaleStroke;\r\n\r\n  var prefsColTwo = prefs.add('group');\r\n      prefsColTwo.orientation = 'column';\r\n      prefsColTwo.alignChildren = 'left';\r\n      prefsColTwo.alignment = 'top';\r\n\r\n  var isFillPatt = prefsColTwo.add('checkbox', undefined, '\\u586b\\u5145\\u56fe\\u6848'); // Unicode F̲\r\n      isFillPatt.value = CFG.isScalePattern;\r\n  var isStrokePatt = prefsColTwo.add('checkbox', undefined, '\\u63cf\\u8fb9\\u56fe\\u6848'); // Unicode t̲\r\n      isStrokePatt.value = CFG.isScalePattern;\r\n\r\n  var hint = win.add('statictext', undefined, 'Quick access with ' + CFG.modKey + ' + underlined key/digit');\r\n      hint.justify = 'center';\r\n      hint.enabled = false;\r\n\r\n  // Buttons\r\n  var btns = win.add('group');\r\n      btns.alignChildren = 'fill';\r\n\r\n  var isPreview = btns.add('checkbox', undefined, 'P\\u0332review'); // Unicode P̲\r\n      isPreview.alignment = 'center';\r\n      isPreview.value = false;\r\n\r\n  var cancel = btns.add('button', undefined, 'Cancel', { name: 'cancel' });\r\n  var ok = btns.add('button', undefined, 'OK',  { name: 'ok' });\r\n\r\n  var copyright = win.add('statictext', undefined, '\\u00A9 Sergey Osokin. Visit Github');\r\n      copyright.justify = 'center';\r\n\r\n  loadSettings();\r\n\r\n  copyright.addEventListener('mousedown', function () {\r\n    openURL('https://github.com/creold');\r\n  });\r\n\r\n  // Shortcut listener\r\n  var keysList = new RegExp('^[' + CFG.modKey + 'EDVGWHLSRUCFTOP1-9]$', 'i');\r\n  var keys = {};\r\n\r\n  // Block size input\r\n  sizeInp.addEventListener('keydown', function(kd) {\r\n    if (kd.keyName && kd.keyName.match(CFG.modKey))\r\n      keys[kd.keyName] = true;\r\n    if (keys[CFG.modKey])\r\n      kd.preventDefault(); \r\n  });\r\n\r\n  shiftInputNumValue(sizeInp);\r\n\r\n  win.addEventListener('keydown', function(kd) {\r\n    var key = kd.keyName;\r\n    if (!key) return; // non-English layout\r\n    if (keysList.test(key)) keys[kd.keyName] = true;\r\n    \r\n    if (keys[CFG.modKey]) {\r\n      for (var k in keys) {\r\n        if (k == 'E') exacRb.notify();\r\n        if (k == 'D') deltaRb.notify();\r\n        if (k == 'V') vbRb.notify();\r\n        if (k.match(/[1-9]/)) refPointArr[k * 1 - 1].notify();\r\n        if (k == 'V') vbRb.notify();\r\n        if (k == 'G') gbRb.notify();\r\n        if (k == 'W') sideArr[0].notify();\r\n        if (k == 'H') sideArr[1].notify();\r\n        if (k == 'L') sideArr[2].notify();\r\n        if (k == 'S') sideArr[3].notify();\r\n        if (k == 'R') sideArr[4].notify();\r\n        if (k == 'U') isUniform.notify();\r\n        if (k == 'C' && isCorner) isCorner.notify();\r\n        if (k == 'F') isFillPatt.notify();\r\n        if (k == 'T') isStrokePatt.notify();\r\n        if (k == 'O') isStroke.notify();\r\n        if (k == 'P') isPreview.notify();\r\n      }\r\n    }\r\n  });\r\n\r\n  win.addEventListener('keyup', function(kd) {\r\n    var key = kd.keyName;\r\n    if (key && keysList.test(key)) delete keys[kd.keyName];\r\n  });\r\n\r\n  // Preview\r\n  if (isPreview.value) preview();\r\n  sizeInp.onChanging = preview;\r\n  isPreview.onClick = preview;\r\n\r\n  // Change relative size\r\n  getItems(relGrp.children).forEach(function (e) {\r\n    e.onClick = preview;\r\n  });\r\n\r\n  // Change item bounds\r\n  getItems(bndsPnl.children).forEach(function (e) {\r\n    e.onClick = preview;\r\n  });\r\n\r\n  // Change scaling side\r\n  getItems(sideArr).forEach(function (e) {\r\n    e.onClick = preview;\r\n  });\r\n\r\n  // Change reference point\r\n  getItems(refPointArr).forEach(function (e) {\r\n    e.onClick = preview;\r\n  });\r\n\r\n  // Change extra options\r\n  getItems(prefs.children[0].children).forEach(function (e) {\r\n    e.onClick = preview;\r\n  });\r\n\r\n  getItems(prefs.children[1].children).forEach(function (e) {\r\n    e.onClick = preview;\r\n  });\r\n  // End preview\r\n\r\n  cancel.onClick = win.close;\r\n  ok.onClick = okClick;\r\n\r\n  // Resize preview\r\n  function preview() {\r\n    try {\r\n      if (isPreview.value) {\r\n        if (isUndo) undo();\r\n        else isUndo = true;\r\n        result = start();\r\n        var aLayer = activeDocument.activeLayer,\r\n            dummyLayer = activeDocument.layers.add();\r\n        activeDocument.activeLayer = aLayer;\r\n        dummyLayer.remove();\r\n        redraw();\r\n      } else if (isUndo) {\r\n        undo();\r\n        redraw();\r\n        isUndo = false;\r\n        result = [];\r\n      }\r\n    } catch (e) {}\r\n  }\r\n\r\n  // Resize selection\r\n  function start() {\r\n    var items = getItems(selection),\r\n        val = strToNum(sizeInp.text, CFG.size),\r\n        side = 'W',\r\n        failItems = [];\r\n\r\n    if (val == 0) val = CFG.size;\r\n    sizeInp.text = val;\r\n\r\n    // Check size limit\r\n    var pxVal = convertUnits(val, CFG.units, 'px') / CFG.sf;\r\n    if (pxVal > CFG.maxSize) {\r\n      pxVal = CFG.maxSize;\r\n      sizeInp.text = CFG.sf * convertUnits(CFG.maxSize, 'px', CFG.units);\r\n    }\r\n\r\n    // Set transformation side key\r\n    getItems(sideArr).forEach(function (e) {\r\n      if (e.value) {\r\n        side = e.text.slice(0, 1).toUpperCase();\r\n        return;\r\n      }\r\n    });\r\n\r\n    var isRnd = side === 'R';\r\n\r\n    // Set the point to use as anchor, to transform about\r\n    getItems(refPointPnl.children).forEach(function (e, i) {\r\n      if (e.value) {\r\n        refPointVal = CFG.refPointsHint[i].replace(/\\s+/g, '').toUpperCase();\r\n        return;\r\n      }\r\n    });\r\n\r\n    if (CFG.aiVers > 16) {\r\n      preferences.setIntegerPreference('policyForPreservingCorners', isCorner.value ? 1 : 2);\r\n    }\r\n\r\n    items.forEach(function (e, i) {\r\n      if (isRnd) {\r\n        side = Math.random() >= 0.5 ? 'W' : 'H';\r\n      }\r\n      try {\r\n        var orig = getSize(e, side, vbRb.value),\r\n            isWidth = orig.isW,\r\n            stop = 0;\r\n\r\n        while ( getSize(e, side, vbRb.value).val.toFixed(4) !== (pxVal + (exacRb.value ? 0 : orig.val)).toFixed(4) ) {\r\n          stop++;\r\n          ratio = getRatio(e, pxVal, side, isWidth, exacRb.value, vbRb.value, isUniform.value);\r\n          e.resize(\r\n            ratio.x, // x\r\n            ratio.y, // y\r\n            true, // changePositions\r\n            isFillPatt.value, // changeFillPatterns\r\n            true, // changeFillGradients\r\n            isStrokePatt.value, // changeStrokePattern\r\n            isStroke.value ? ratio.r : 100, // changeLineWidths\r\n            Transformation[refPointVal] // scaleAbout\r\n            );\r\n          if (stop == 10) break; // Fix infinity looping\r\n        }\r\n      } catch (err) {\r\n        failItems.push(e);\r\n      }\r\n    });\r\n\r\n    return failItems;\r\n  }\r\n\r\n  function okClick() {\r\n    if (!isPreview.value) {\r\n      result = start();\r\n    }\r\n    if (result.length) {\r\n      var isShowFail = confirm('Warning\\nSome objects could not be resized. Select them?');\r\n      if (isShowFail) selection = result;\r\n    }\r\n    isUndo = false;\r\n    saveSettings();\r\n    win.close();\r\n  }\r\n\r\n  win.onClose = function () {\r\n    try {  \r\n      if (isUndo) {\r\n        redraw();\r\n        undo();\r\n      }\r\n    } catch (e) {}\r\n    // Restore Scale Corners pref\r\n    preferences.setIntegerPreference('policyForPreservingCorners', CFG.isScaleCorner);\r\n  }\r\n\r\n  // Use Up / Down arrow keys (+ Shift) for change value\r\n  function shiftInputNumValue(item) {\r\n    item.addEventListener('keydown', function (kd) {\r\n      var step = ScriptUI.environment.keyboardState['shiftKey'] ? 10 : 1;\r\n      if (kd.keyName == 'Down') {\r\n        this.text = strToNum(this.text) - step;\r\n        kd.preventDefault();\r\n        preview();\r\n      }\r\n      if (kd.keyName == 'Up') {\r\n        this.text = strToNum(this.text) + step;\r\n        kd.preventDefault();\r\n        preview();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Save input data to file\r\n  function saveSettings() {\r\n    if(!Folder(SETTINGS.folder).exists) Folder(SETTINGS.folder).create();\r\n    var $file = new File(SETTINGS.folder + SETTINGS.name);\r\n    $file.encoding = 'UTF-8';\r\n    $file.open('w');\r\n    var pref = {};\r\n    pref.size = sizeInp.text;\r\n    pref.exac = relGrp.children[0].value ? 0 : 1;\r\n    pref.bounds = bndsPnl.children[0].value ? 0 : 1;\r\n    getItems(sidePnl.children).forEach(function (e, i) {\r\n      if (e.value) pref.side = i;\r\n    });\r\n    getItems(refPointPnl.children).forEach(function (e, i) {\r\n      if (e.value) pref.point = i;\r\n    });\r\n    pref.uniform = isUniform.value;\r\n    pref.corner = isCorner.value;\r\n    pref.fill = isFillPatt.value;\r\n    pref.stroke = isStrokePatt.value;\r\n    pref.width = isStroke.value;\r\n    pref.preview = isPreview.value;\r\n    var data = pref.toSource();\r\n    $file.write(data);\r\n    $file.close();\r\n  }\r\n\r\n  // Load input data from file\r\n  function loadSettings() {\r\n    var $file = File(SETTINGS.folder + SETTINGS.name);\r\n    if ($file.exists) {\r\n      try {\r\n        $file.encoding = 'UTF-8';\r\n        $file.open('r');\r\n        var json = $file.readln();\r\n        var pref = new Function('return ' + json)();\r\n        $file.close();\r\n        if (typeof pref != 'undefined') {\r\n          sizeInp.text = pref.size;\r\n          relGrp.children[pref.exac].value = true;\r\n          bndsPnl.children[pref.bounds].value = true;\r\n          sidePnl.children[pref.side].value = true;\r\n          refPointPnl.children[pref.point].value = true;\r\n          isUniform.value = pref.uniform;\r\n          isCorner.value = pref.corner;\r\n          isFillPatt.value = pref.fill;\r\n          isStrokePatt.value = pref.stroke;\r\n          isStroke.value = pref.width;\r\n          isPreview.value = pref.preview;\r\n        }\r\n      } catch (e) {}\r\n    }\r\n  }\r\n\r\n  win.center();\r\n  win.show();\r\n}\r\n\r\n// Get active document ruler units\r\nfunction getUnits() {\r\n  if (!documents.length) return '';\r\n  var key = activeDocument.rulerUnits.toString().replace('RulerUnits.', '');\r\n  switch (key) {\r\n    case 'Pixels': return 'px';\r\n    case 'Points': return 'pt';\r\n    case 'Picas': return 'pc';\r\n    case 'Inches': return 'in';\r\n    case 'Millimeters': return 'mm';\r\n    case 'Centimeters': return 'cm';\r\n    // Added in CC 2023 v27.1.1\r\n    case 'Meters': return 'm';\r\n    case 'Feet': return 'ft';\r\n    case 'FeetInches': return 'ft';\r\n    case 'Yards': return 'yd';\r\n    // Parse new units in CC 2020-2023 if a document is saved\r\n    case 'Unknown':\r\n      var xmp = activeDocument.XMPString;\r\n      if (/stDim:unit/i.test(xmp)) {\r\n        var units = /<stDim:unit>(.*?)<\\/stDim:unit>/g.exec(xmp)[1];\r\n        if (units == 'Meters') return 'm';\r\n        if (units == 'Feet') return 'ft';\r\n        if (units == 'FeetInches') return 'ft';\r\n        if (units == 'Yards') return 'yd';\r\n        return 'px';\r\n      }\r\n      break;\r\n    default: return 'px';\r\n  }\r\n}\r\n\r\n// Convert units of measurement\r\nfunction convertUnits(value, currUnits, newUnits) {\r\n  return UnitValue(value, currUnits).as(newUnits);\r\n}\r\n\r\n// Generate radiobutton\r\nfunction addRadiobutton(place, x, y, info, isNamed) {\r\n  var rb = place.add('radiobutton', undefined, isNamed ? info : ''),\r\n      xStep = isNamed ? 74 : 30,\r\n      yStep = 30,\r\n      x0 = 10, y0 = 15,\r\n      dX = isNamed ? 90 : 16,\r\n      dY = 16; // Padding\r\n\r\n  x = x0 + xStep * x;\r\n  y = y0 + yStep * y;\r\n  rb.bounds = [x, y, x + dX, y + dY];\r\n  rb.helpTip = info;\r\n\r\n  return rb;\r\n}\r\n\r\n// Get items array\r\nfunction getItems(collection) {\r\n  var out = [];\r\n  for (var i = 0, len = collection.length; i < len; i++) {\r\n    out.push(collection[i]);\r\n  }\r\n  return out;\r\n}\r\n\r\n// Polyfill forEach() for Array\r\nArray.prototype.forEach = function (callback) {\r\n  for (var i = 0; i < this.length; i++) callback(this[i], i, this);\r\n}\r\n\r\n// Convert string to number\r\nfunction strToNum(str, def) {\r\n  if (arguments.length == 1 || def == undefined) def = 1;\r\n  str = str.replace(/,/g, '.').replace(/[^\\d.-]/g, '');\r\n  str = str.split('.');\r\n  str = str[0] ? str[0] + '.' + str.slice(1).join('') : '';\r\n  str = str.substr(0, 1) + str.substr(1).replace(/-/g, '');\r\n  if (isNaN(str) || !str.length) return parseFloat(def);\r\n  else return parseFloat(str);\r\n}\r\n\r\n// Get current item size\r\nfunction getSize(item, side, isVB) {\r\n  var itemB = itemBW = itemBH = 0,\r\n      isW = true, // width > heigth\r\n      size;\r\n\r\n  if (isType(item, 'group') && item.clipped) {\r\n    item = getMaskPath(item);\r\n  }\r\n\r\n  itemB = isVB ? item.visibleBounds : item.geometricBounds;\r\n  itemBW = itemB[2] - itemB[0]; // width\r\n  itemBH = itemB[1] - itemB[3]; // heigth\r\n  if (itemBH >= itemBW) isW = false;\r\n\r\n  switch (side) {\r\n    case 'W':\r\n      size = itemBW;\r\n      break;\r\n    case 'H':\r\n      size = itemBH;\r\n      break;\r\n    case 'S':\r\n      size = Math.min(itemBH, itemBW);\r\n      break;\r\n    case 'L':\r\n      size = Math.max(itemBH, itemBW);\r\n      break;\r\n  }\r\n\r\n  return { 'val': size, 'isW': isW };\r\n}\r\n\r\n// Get clipping mask\r\nfunction getMaskPath(group) {\r\n  for (var i = 0, len = group.pageItems.length; i < len; i++) {\r\n    var currItem = group.pageItems[i];\r\n    if (isClippingPath(currItem)) {\r\n      return currItem;\r\n    }\r\n  }\r\n}\r\n\r\n// Check clipping mask\r\nfunction isClippingPath(item) {\r\n  var clipText = (isType(item, 'text') &&\r\n                  item.textRange.characterAttributes.fillColor == '[NoColor]' &&\r\n                  item.textRange.characterAttributes.strokeColor == '[NoColor]');\r\n  return (isType(item, 'compound') && item.pathItems[0].clipping) ||\r\n          item.clipping || clipText;\r\n}\r\n\r\n// Check the item typename by short name\r\nfunction isType(item, type) {\r\n  var regexp = new RegExp(type, 'i');\r\n  return regexp.test(item.typename);\r\n}\r\n\r\n// Get resize ratio\r\nfunction getRatio(item, newSize, side, isW, isExac, isVB, isUni) {\r\n  var ratio = {},\r\n      wSize = getSize(item, 'W', isVB).val,\r\n      hSize = getSize(item, 'H', isVB).val,\r\n      size = getSize(item, side, isVB).val;\r\n\r\n  ratio.x = 100 * (newSize + (isExac ? 0 : wSize)) / wSize;\r\n  ratio.y = 100 * (newSize + (isExac ? 0 : hSize)) / hSize;\r\n  ratio.r = 100 * (newSize + (isExac ? 0 : size)) / size;\r\n\r\n  if (!isUni) {\r\n    switch (side) {\r\n      case 'W':\r\n        ratio.x = ratio.r;\r\n        ratio.y = 100;\r\n        break;\r\n      case 'H':\r\n        ratio.x = 100;\r\n        ratio.y = ratio.r;\r\n        break;\r\n      case 'L':\r\n        if (isW) {\r\n          ratio.y = 100;\r\n          ratio.r = ratio.x;\r\n        } else {\r\n          ratio.x = 100;\r\n          ratio.r = ratio.y;\r\n        }\r\n        break;\r\n      case 'S':\r\n        if (isW) {\r\n          ratio.x = 100;\r\n          ratio.r = ratio.y;\r\n        } else {\r\n          ratio.y = 100;\r\n          ratio.r = ratio.x;\r\n        }\r\n        break;\r\n    }\r\n  } else {\r\n    ratio.x = ratio.r;\r\n    ratio.y = ratio.r;\r\n  }\r\n\r\n  return ratio;\r\n}\r\n\r\n// Open link in browser\r\nfunction openURL(url) {\r\n  var html = new File(Folder.temp.absoluteURI + '/aisLink.html');\r\n  html.open('w');\r\n  var htmlBody = '<html><head><META HTTP-EQUIV=Refresh CONTENT=\"0;URL=' + url + '\"></head><body> <p></body></html>';\r\n  html.write(htmlBody);\r\n  html.close();\r\n  html.execute();\r\n}\r\n\r\n// Run script\r\ntry {\r\n  main();\r\n} catch (e) {}"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "统一缩放",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 7"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Illustrator.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "/*\r\n  BatchRenamer.jsx for Adobe Illustrator\r\n  Description: Script for batch renaming artboards, layers & selected items manually or by placeholders.\r\n  Find & Replace supports regular expressions.\r\n  Date: January, 2022\r\n  Modification date: January, 2024\r\n\r\n  Original idea by Qwertyfly:\r\n  https://community.adobe.com/t5/illustrator-discussions/is-there-a-way-to-batch-rename-artboards-in-illustrator-cc/m-p/7243667#M153618\r\n\r\n  Modification by Sergey Osokin, email: hi@sergosokin.ru\r\n  \r\n  Installation: https://github.com/creold/illustrator-scripts#how-to-run-scripts\r\n  \r\n  Release notes:\r\n  1.0 Fixed variables, scrollbar in original script by Qwertyfly\r\n      Added tabs for batch rename Artboards, Layers, Paths\r\n      Added 'Select all' checkboxes, 'Find and Replace' algorithm\r\n      Addedd save and load user settings\r\n      Added placeholders for batch rename \r\n  1.1 Minor improvements\r\n  1.1.1 Fixed load user settings\r\n  1.2 Added more units (yards, meters, etc.) support if the document is saved\r\n  1.2.1 Added custom RGB color (idxColor) for artboard indexes\r\n  1.2.2 Added size correction in large canvas mode\r\n  1.2.3 Added new units API for CC 2023 v27.1.1\r\n  1.2.4 Added {fn} placeholder to insert a filename\r\n  1.2.4a Fixed problem launching through LAScripts extension\r\n  1.3 Info about number of artboards, layers, selected document objects added to {nu}, {nd} placeholder text. Minor improvements\r\n  1.3.1 Added display of text frame content as name if it is empty\r\n  1.3.2 Fixed rename bug\r\n  1.3.3 Added display symbol object names\r\n  1.4 Added import names from txt and export names into txt from active tab\r\n  1.5 Added custom range for Find and Replace. Minor improvements\r\n  \r\n  Donate (optional):\r\n  If you find this script helpful, you can buy me a coffee\r\n  - via Buymeacoffee: https://www.buymeacoffee.com/aiscripts\r\n  - via Donatty https://donatty.com/sergosokin\r\n  - via DonatePay https://new.donatepay.ru/en/@osokin\r\n  - via YooMoney https://yoomoney.ru/to/410011149615582\r\n\r\n  NOTICE:\r\n  Tested with Adobe Illustrator CC 2019-2024 (Mac/Win).\r\n  This script is provided \"as is\" without warranty of any kind.\r\n  Free to use, not for sale\r\n\r\n  Released under the MIT license\r\n  http://opensource.org/licenses/mit-license.php\r\n\r\n  Check my other scripts: https://github.com/creold\r\n*/\r\n\r\n//@target illustrator\r\napp.preferences.setBooleanPreference('ShowExternalJSXWarning', false); // Fix drag and drop a .jsx file\r\n\r\n// MAIN DIALOG\r\n\r\nfunction main() {\r\n  if (!/illustrator/i.test(app.name)) {\r\n    alert('Wrong application\\nRun script from Adobe Illustrator', 'Script error');\r\n    return;\r\n  }\r\n\r\n  if (!documents.length) {\r\n    alert('No documents\\nOpen a document and try again', 'Script error');\r\n    return;\r\n  }\r\n\r\n  var doc = app.activeDocument;\r\n  var absLength = doc.artboards.length;\r\n  var lyrsLength = doc.layers.length;\r\n  var selLength = app.selection.length;\r\n\r\n  var SCRIPT = {\r\n        name:     'Batch Renamer',\r\n        version:  'v.1.5'\r\n      };\r\n  var CFG = {\r\n        listHeight: 6 * 32,\r\n        rows:       6, // Amount of visible rows\r\n        precision:  2, // Rounding the artboard or the path width and height to decimal places\r\n        decimal:    ',', // Decimal separator point or comma for width and height\r\n        defTab:     0, // Default tab. 0 - Artboard, 1 - Layer, 2 - Path\r\n        idxColor:   [255, 0, 0], // Artboard index color\r\n        isFind:     false, // Default Find and Replace state\r\n        isMac:      /mac/i.test($.os),\r\n        aiVers:     parseInt(app.version),\r\n        sf:         activeDocument.scaleFactor ? activeDocument.scaleFactor : 1, // Scale factor for Large Canvas mode\r\n        tmpLyr:     'ARTBOARD_INDEX',\r\n        uiOpacity:  1, // UI window opacity. Range 0-1\r\n      };\r\n  var PH = { // Placeholders\r\n        color:    '{c}',\r\n        date:     '{d}',\r\n        fName:    '{fn}',\r\n        height:   '{h}',\r\n        name:     '{n}',\r\n        numDown:  '{nd:0}',\r\n        numUp:    '{nu:0}',\r\n        units:    '{u}',\r\n        width:    '{w}',\r\n      };\r\n  var MSG = {\r\n        all:          '所有元素',\r\n        cancel:       'Cancel',\r\n        copyright:    'Visit Github',\r\n        empty:        'No paths are selected',\r\n        enable:       '启用',\r\n        ex:           'Export',\r\n        exDlg:        '选择一个文件夹来导出TXT...',\r\n        exHint:       '从活动选项卡导出名称到TXT文件',\r\n        exSuccess:    'Your file * has been created successfull',\r\n        find:         '查找',\r\n        findHint:     '支持正则表达式',\r\n        findTitle:    '查找和替换',\r\n        im:           '导入',\r\n        imDlg:        'Choose TXT file...',\r\n        imHint:       '从TXT文件导入名称到活动选项卡\\nfrom a TXT file. Start each name\\non a new line',\r\n        imSuccess:    'Your file * has been imported successfully into the active tab',\r\n        nameAb:       '画板名称',\r\n        nameLyr:      '图层名称',\r\n        namePath:     '对象名称',\r\n        ok:           'OK',\r\n        ph:           '占位符: ' + PH.name + ' - 当前名称',\r\n        prefix:       '前缀',\r\n        prvw:         '预览',\r\n        prvwOn:       '预览 ON',\r\n        range:        '范围',\r\n        rplc:         '替换',\r\n        suffix:       '后缀',\r\n        tabAb:        'ARTBOARDS',\r\n        tabLyr:       'LAYERS',\r\n        tabPath:      'OBJECTS',\r\n        preSuffAb:    '占位符:\\n' +\r\n                      PH.width + ' - 画板宽度, ' +\r\n                      PH.height + ' - 画板高度, ' +\r\n                      PH.units + ' - 标尺单位, ' +\r\n                      PH.numUp.replace(/\\d/g, absLength) + ' - 自动升序, ' + // Ascending\r\n                      PH.numDown.replace(/\\d/g, absLength) + ' - 自动降序, ' + // Descending\r\n                      PH.color + ' - 文档颜色RGB 或 CMYK' + \r\n                      PH.date + ' - 当前日期 YYYYMMDD, ' +\r\n                      PH.fName + ' - filename',\r\n        preSuffLyr:   '占位符:\\n' +\r\n                      PH.numUp.replace(/\\d/g, lyrsLength) + ' - 自动升序, ' + // Ascending\r\n                      PH.numDown.replace(/\\d/g, lyrsLength) + ' - 自动降序, ' + // Descending\r\n                      PH.fName + ' - 扩展名',\r\n        preSuffPath:  '占位符:\\n' +\r\n                      PH.numUp.replace(/\\d/g, selLength) + ' - 自动升序, ' + // Ascending\r\n                      PH.numDown.replace(/\\d/g, selLength) + ' - 自动降序, ' + // Descending\r\n                      PH.width + ' - 对象宽度, ' +\r\n                      PH.height + ' - 对象高度, ' +\r\n                      PH.units + ' - 标尺单位',\r\n      };\r\n  var SETTINGS = {\r\n        name:   SCRIPT.name.replace(/\\s/g, '_') + '_data.json',\r\n        folder: Folder.myDocuments + '/Adobe Scripts/'\r\n      };\r\n\r\n  var abs = initObject(CFG.isFind); // Artboards\r\n  var lyrs = initObject(CFG.isFind); // Layers\r\n  var paths = initObject(CFG.isFind); // Selected objects\r\n\r\n  var absPH = initPlaceholders('artboards', PH); // Artboard placeholders\r\n  var lyrsPH = initPlaceholders('layers', PH); // Layers placeholders\r\n  var pathsPH = initPlaceholders('paths', PH); // Paths placeholders\r\n\r\n  var rowItem = []; // List rows\r\n\r\n  // Init prefix, index, name and suffix\r\n  initData(doc.artboards, abs.state);\r\n  initData(doc.layers, lyrs.state);\r\n  initData(app.selection, paths.state);\r\n\r\n  // SHOW DIALOG\r\n  var win = new Window('dialog', SCRIPT.name + ' ' + SCRIPT.version);\r\n      win.orientation = 'row';\r\n      win.opacity = CFG.uiOpacity;\r\n\r\n  var wrapper = win.add('group');\r\n\r\n  // Tabs and properties\r\n  var tabPnl = wrapper.add('tabbedpanel');\r\n      tabPnl.alignChildren = ['fill', 'top'];\r\n\r\n  var absTab = tabPnl.add('tab', undefined, MSG.tabAb); // Artboard\r\n  var lyrsTab = tabPnl.add('tab', undefined, MSG.tabLyr); // Layer\r\n  var pathsTab = tabPnl.add('tab', undefined, MSG.tabPath);  // Path\r\n\r\n  absTab.margins = lyrsTab.margins = pathsTab.margins = [10, 20, 0, 5];\r\n  tabPnl.selection = CFG.defTab;\r\n\r\n  var absTabData = addTabContent(absTab, abs, MSG, MSG.nameAb, MSG.preSuffAb);\r\n  var lyrsTabData = addTabContent(lyrsTab, lyrs, MSG, MSG.nameLyr, MSG.preSuffLyr);\r\n  var pathsTabData = addTabContent(pathsTab, paths, MSG, MSG.namePath, MSG.preSuffPath);\r\n  \r\n  var btns = win.add('group');\r\n      btns.orientation = 'column';\r\n      btns.spacing = 20;\r\n      btns.alignment = 'top';\r\n\r\n  var b1 = btns.add('group');\r\n      b1.orientation = 'column';\r\n\r\n  var ok = b1.add('button', undefined, MSG.ok, { name: 'ok' });\r\n  var cancel = b1.add('button', undefined, MSG.cancel, { name: 'cancel' });\r\n\r\n  var b2 = btns.add('group');\r\n      b2.orientation = 'column';\r\n\r\n  var preview = b2.add('button', undefined, MSG.prvw);\r\n  var importBtn = b2.add('button', undefined, MSG.im);\r\n      importBtn.helpTip = MSG.imHint;\r\n  var exportBtn = b2.add('button', undefined, MSG.ex);\r\n      exportBtn.helpTip = MSG.exHint;\r\n\r\n  var copyright = btns.add('statictext', undefined, MSG.copyright);\r\n      copyright.justify = 'center';\r\n\r\n  loadSettings();\r\n\r\n  cancel.onClick = win.close;\r\n  ok.onClick = okClick;\r\n\r\n  // DIALOG LOCAL FUNCTIONS\r\n\r\n  win.onShow = function () {\r\n    showAbIndex(CFG.tmpLyr, CFG.idxColor);\r\n    var delta = 20;\r\n    setScrollMax(absTabData, delta);\r\n    setScrollMax(lyrsTabData, delta);\r\n    setScrollMax(pathsTabData, delta);\r\n  }\r\n\r\n  // Import names from txt file\r\n  importBtn.onClick = function() {\r\n    var type = ($.os.match('Windows')) ? '*.txt;' : function(f) {\r\n      return f instanceof Folder || (f instanceof File && f.name.match(/(.txt)$/));\r\n    };\r\n    var f = File.openDialog(MSG.imDlg, type, false);\r\n    var txtArr = parseFromText(f);\r\n\r\n    var obj = tabPnl.selection.text.match(MSG.tabAb) ? abs : (tabPnl.selection.text.match(MSG.tabLyr) ? lyrs : paths);\r\n    var min = Math.min(txtArr.length, obj.names.length);\r\n    for (var i = 0; i < min; i++) {\r\n      var str = txtArr[i];\r\n      if (isEmpty(str)) continue;\r\n      obj.names[i].text = str;\r\n      obj.state[i][1] = str;\r\n    }\r\n\r\n    alert( MSG.imSuccess.replace(/\\*/, decodeURIComponent(f.name)) );\r\n  }\r\n\r\n  // Export names from txt file\r\n  exportBtn.onClick = function() {\r\n    var fol = Folder.selectDialog(MSG.exDlg);\r\n    if (fol == null) return;\r\n    var type = tabPnl.selection.text.replace(/\\s+.+/g, '').toLowerCase();\r\n    var f = new File(fol + '/' + doc.name.replace(/\\.[^\\.]+$/, '') + '_' + type + '.txt');\r\n\r\n    var txtArr = [];\r\n    if (tabPnl.selection.text.match(MSG.tabAb)) {\r\n      txtArr = generateNames(doc.artboards, CFG, PH, abs, absPH);\r\n    } else if (tabPnl.selection.text.match(MSG.tabLyr)) {\r\n      txtArr = generateNames(doc.layers, CFG, PH, lyrs, lyrsPH);\r\n    } else {\r\n      txtArr = generateNames(app.selection, CFG, PH, paths, pathsPH);\r\n    }\r\n\r\n    if (txtArr.length) {\r\n      writeToText(txtArr.join('\\n'), f);\r\n      alert( MSG.exSuccess.replace(/\\*/, decodeURIComponent(f.name)) );\r\n    }\r\n  }\r\n\r\n  // Preview new item names in the tabs\r\n  preview.onClick = function () {\r\n    absTabData.prvwTitle.text = lyrsTabData.prvwTitle.text = MSG.prvwOn;\r\n    if (pathsTabData.hasOwnProperty('prvwTitle')) {\r\n      pathsTabData.prvwTitle.text = MSG.prvwOn;\r\n    }\r\n\r\n    previewNames(doc.artboards, CFG, PH, abs, absPH);\r\n    previewNames(doc.layers, CFG, PH, lyrs, lyrsPH);\r\n    previewNames(app.selection, CFG, PH, paths, pathsPH);\r\n  }\r\n\r\n  // Add elements to tab\r\n  function addTabContent(tab, data, txt, name, placeholder) {\r\n    // Paths tab when nothing is selected\r\n    if (tab.text === txt.tabPath && !selLength) {\r\n      var pathList = tab.add('group');\r\n          pathList.alignment = 'center';\r\n      pathList.add('statictext', undefined, txt.empty);\r\n\r\n      return {};\r\n    }\r\n\r\n    var tabList = tab.add('group');\r\n        tabList.orientation = 'column';\r\n\r\n    // Title\r\n    var header = tabList.add('group');\r\n        header.alignment = 'left';\r\n\r\n    var preHeader = header.add('group');\r\n        preHeader.margins = [(CFG.isMac || CFG.aiVers == 16) ? 12 : 12, 0, 0, 0];\r\n    var p = preHeader.add('statictext', undefined, txt.prefix);\r\n\r\n    var nameHeader = header.add('group');\r\n        nameHeader.margins = [(CFG.isMac || CFG.aiVers == 16) ? 90 : 130, 0, 0, 0];\r\n    var n = nameHeader.add('statictext', undefined, name);\r\n        n.characters = 16;\r\n\r\n    var suffHeader = header.add('group');\r\n        suffHeader.margins = [CFG.isMac ? 22 : (CFG.aiVers == 16 ? 46 : 30), 0, 0, 0];\r\n    var s = suffHeader.add('statictext', undefined, txt.suffix);\r\n\r\n    var selector = tabList.add('group');\r\n        selector.orientation = 'row';\r\n        selector.alignment = 'left';\r\n  \r\n    var headerAllPre = selector.add('group');\r\n        headerAllPre.margins = [(CFG.isMac || CFG.aiVers == 16) ? 20 : 20, 0, 0, -6];\r\n    var chkAllPre = headerAllPre.add('checkbox');\r\n    \r\n    var headerPrvw = selector.add('group');\r\n        headerPrvw.margins = [CFG.isMac ? 106 : (CFG.aiVers == 16 ? 100 : 140), 0, 0, 0];\r\n    var prvwTitle = headerPrvw.add('statictext', undefined, '');\r\n        prvwTitle.characters = 17;\r\n  \r\n    var headerAllSuff = selector.add('group');\r\n        headerAllSuff.margins = [CFG.isMac ? 20 : (CFG.aiVers == 16 ? 44 : 28), 0, 0, -6];\r\n    var chkAllSuff = headerAllSuff.add('checkbox');\r\n\r\n    // Item rows\r\n    var scrollWin = tabList.add('group');\r\n        scrollWin.alignChildren = 'fill';\r\n    var pageListPanel = scrollWin.add('panel');\r\n        pageListPanel.alignChildren = 'left';\r\n\r\n    // Generate list\r\n    if (data.state.length <= CFG.rows) { // Without scroll\r\n      for (var i = 0, osLen = data.state.length; i < osLen; i++) {\r\n        rowItem = pageListPanel.add('group');\r\n        rowItem.margins = [3, 0, 0, 0];\r\n        addNewRow(tab, i, rowItem, data, chkAllPre, chkAllSuff, CFG.isMac, CFG.aiVers);\r\n      }\r\n    } else { // With scroll\r\n      pageListPanel.maximumSize.height = CFG.listHeight;\r\n      var smallList = pageListPanel.add('group');\r\n          smallList.orientation = 'column';\r\n          smallList.alignment = 'left';\r\n          smallList.maximumSize.height = data.state.length * 100;\r\n\r\n      var scroll = scrollWin.add('scrollbar');\r\n          scroll.stepdelta = 30;\r\n          scroll.preferredSize.width = 16;\r\n          scroll.maximumSize.height = pageListPanel.maximumSize.height;\r\n      for (var i = 0, osLen = data.state.length; i < osLen; i++) {\r\n        rowItem = smallList.add('group');\r\n        addNewRow(tab, i, rowItem, data, chkAllPre, chkAllSuff, CFG.isMac, CFG.aiVers);\r\n      }\r\n\r\n      scroll.onChanging = function() {\r\n        smallList.location.y = -1 * this.value;\r\n      }\r\n    }\r\n\r\n    var extra = tab.add('group');\r\n        extra.orientation = 'column';\r\n        extra.alignChildren = ['fill', 'top'];\r\n        extra.margins = [0, 20, 0, 0];\r\n\r\n    var extraInpSize = [0, 0, (CFG.isMac || CFG.aiVers == 16) ? 108 : 140, 20];\r\n\r\n    var preSuffGrp = extra.add('group');\r\n        preSuffGrp.orientation = 'column';\r\n        preSuffGrp.alignChildren = ['fill', 'top'];\r\n        preSuffGrp.margins = [0, 0, 0, 10];\r\n\r\n    var preSuffInp = preSuffGrp.add('group');\r\n        preSuffInp.orientation = 'row';\r\n        preSuffInp.alignChildren = ['left', 'top'];\r\n\r\n    var preTitle = preSuffInp.add('statictext', undefined, txt.prefix);\r\n    var pre = preSuffInp.add('edittext', extraInpSize, '');\r\n\r\n    var suffTitle = preSuffInp.add('statictext', undefined, txt.suffix);\r\n    var suff = preSuffInp.add('edittext', extraInpSize, '');\r\n\r\n    var preSuffNote = preSuffGrp.add('statictext', undefined, placeholder, { multiline: true });\r\n        preSuffNote.characters = 40;\r\n        preSuffNote.alignment = 'fill';\r\n\r\n    // Add find and replace\r\n    var findRplcPnl = extra.add('panel', undefined, txt.findTitle);\r\n        findRplcPnl.alignChildren = ['fill', 'top'];\r\n        findRplcPnl.margins = [10, 15, 10, 10];\r\n\r\n    var findRplcOn = findRplcPnl.add('checkbox', undefined, txt.enable);\r\n        findRplcOn.value = CFG.isFind;\r\n\r\n    var rangeStrGrp = findRplcPnl.add('group');\r\n\r\n    var rangeRadioGrp = rangeStrGrp.add('group');\r\n        rangeRadioGrp.enabled = CFG.isFind;\r\n    var allRange = rangeRadioGrp.add('radiobutton', undefined, txt.all);\r\n        allRange.value = true;\r\n    var cstmRange = rangeRadioGrp.add('radiobutton', undefined, txt.range);\r\n\r\n    var range = rangeRadioGrp.add('edittext', extraInpSize, '1, 3-5, 7');\r\n        range.enabled = CFG.isFind;\r\n\r\n    var findStrGrp = findRplcPnl.add('group');\r\n\r\n    var findGrp = findStrGrp.add('group');\r\n    var findTitle = findGrp.add('statictext', undefined, txt.find);\r\n    var find = findGrp.add('edittext', extraInpSize, '');\r\n        find.helpTip = txt.findHint;\r\n        find.enabled = CFG.isFind;\r\n\r\n    var rplcGrp = findStrGrp.add('group');\r\n    var rplcTitle = rplcGrp.add('statictext', undefined, txt.rplc);\r\n    var rplc = rplcGrp.add('edittext', extraInpSize, '');\r\n        rplc.enabled = CFG.isFind;\r\n\r\n    var findRplcNote = findRplcPnl.add('statictext', undefined, txt.ph);\r\n\r\n    // TAB EVENTS\r\n\r\n    // Select all prefixes\r\n    chkAllPre.onClick = function () {\r\n      for (var i = 0, osLen = data.state.length; i < osLen; i++) {\r\n        data.isPre[i].value = this.value;\r\n        data.state[i][0] = this.value;\r\n      }\r\n      changeTabName(tab);\r\n    }\r\n\r\n    // Select all suffixes\r\n    chkAllSuff.onClick = function () {\r\n      for (var i = 0, osLen = data.state.length; i < osLen; i++) {\r\n        data.isSuff[i].value = this.value;\r\n        data.state[i][2] = this.value;\r\n      }\r\n      changeTabName(tab);\r\n    }\r\n\r\n    findRplcOn.onClick = function () {\r\n      changeTabName(tab);\r\n      find.enabled = rplc.enabled = this.value;\r\n      data.isFind = this.value;\r\n      rangeRadioGrp.enabled = this.value;\r\n      data.range = '1-' + data.state.length;\r\n    }\r\n\r\n    pre.onChange = function() {\r\n      data.pre = this.text;\r\n      changeTabName(tab);\r\n    }\r\n\r\n    suff.onChange = function() {\r\n      data.suff = suff.text;\r\n      changeTabName(tab);\r\n    }\r\n\r\n    find.onChange = function() {\r\n      data.find = this.text;\r\n      changeTabName(tab);\r\n    }\r\n\r\n    rplc.onChange = function() {\r\n      data.rplc = this.text;\r\n      changeTabName(tab);\r\n    }\r\n\r\n    allRange.onClick = function () {\r\n      range.enabled = false;\r\n      data.range = '1-' + data.state.length;\r\n    }\r\n\r\n    cstmRange.onClick = function () {\r\n      range.enabled = true;\r\n      data.range = range.text;\r\n    }\r\n\r\n    range.onChange = function() {\r\n      this.text = this.text.replace(/;/g, ',')\r\n      data.range = this.text;\r\n      changeTabName(tab);\r\n    }\r\n\r\n    var parent = (data.state.length <= CFG.rows) ? pageListPanel : smallList;\r\n    \r\n    for (var i = 0, pcLen = parent.children.length; i < pcLen; i++) {\r\n      goToNextPrevName(data, i, pre, scroll, parent);\r\n      // Reset preview when activating name field [2]\r\n      parent.children[i].children[2].onActivate = function() {\r\n        if (!isEmpty(prvwTitle.text)) {\r\n          for (var j = 0, nLen = data.names.length; j < nLen; j++) {\r\n            data.names[j].text = data.state[j][1]; // Restore original name\r\n          }\r\n        }\r\n        prvwTitle.text = '';\r\n      }\r\n    }\r\n\r\n    var obj = {\r\n      pre:            extra     ? pre : undefined,\r\n      suff:           extra     ? suff : undefined,\r\n      find:           extra     ? find : undefined,\r\n      rplc:           extra     ? rplc : undefined,\r\n      range:          extra     ? range : undefined,\r\n      prvwTitle:      prvwTitle ? prvwTitle : undefined,\r\n      scroll:         scroll    ? scroll : undefined,\r\n      smallList:      scroll    ? smallList : undefined,\r\n      pageListPanel:  scroll    ? pageListPanel : undefined,\r\n    }\r\n\r\n    return obj;\r\n  }\r\n\r\n  // Add row with prefix checkbox, name and suffix checkbox\r\n  function addNewRow(tab, idx, row, obj, allPre, allSuff, isMac, aiVers) {\r\n    var dummyPre = row.add('group');\r\n        dummyPre.margins = [0, (!isMac && aiVers == 16) ? 0 : 5, 0, 0]; // Vertical align\r\n    obj.isPre[idx] = dummyPre.add('checkbox');\r\n    obj.isPre[idx].value = obj.state[idx][0];\r\n\r\n    obj.isPre[idx].onClick = function() {\r\n      obj.state[idx][0] = !obj.state[idx][0];\r\n      if (!obj.isPre[idx].value) allPre.value = false;\r\n      changeTabName(tab);\r\n    }\r\n\r\n    // Add order number\r\n    var order = row.add('statictext');\r\n    order.text = padZero(idx + 1, obj.state.length.toString().length);\r\n    \r\n    obj.names[idx] = row.add('edittext', [0, 0, isMac ? 244 : (aiVers > 16 ? 320 : 230), 20]);\r\n    obj.names[idx].text = obj.state[idx][1];\r\n    obj.names[idx].onChange = function () {\r\n      if (isEmpty(this.text)) {\r\n        this.text = obj.state[idx][1];\r\n      } else {\r\n        obj.state[idx][1] = this.text;\r\n      }\r\n      changeTabName(tab);\r\n    }\r\n\r\n    var dummySuff = row.add('group');\r\n        dummySuff.margins = [0, (!isMac && aiVers == 16) ? 0 : 5, 0, 0]; // Vertical align\r\n    obj.isSuff[idx] = dummySuff.add('checkbox');\r\n    obj.isSuff[idx].value = obj.state[idx][2];\r\n\r\n    obj.isSuff[idx].onClick = function() {\r\n      obj.state[idx][2] = !obj.state[idx][2];\r\n      if (!obj.isSuff[idx].value) allSuff.value = false;\r\n      changeTabName(tab);\r\n    }\r\n  }\r\n\r\n  // Change tab name after any action\r\n  function changeTabName(tab) {\r\n    if (!/\\*/g.test(tab.text)) tab.text += ' *';\r\n  }\r\n\r\n  // Moves to the next and previous name using the Up and Down keys\r\n  function goToNextPrevName(obj, idx, pre, scroll, scrollList) {\r\n    var length = obj.names.length;\r\n    obj.names[idx].addEventListener('keydown', function (kd) {\r\n      // Go to next name\r\n      if (kd.keyName == 'Down' && (idx + 1) < length) {\r\n        // Update the scrollbar position when the Down key is pressed\r\n        if (idx !== 0 && scroll) {\r\n          scroll.value = (idx + 1) * (scroll.maxvalue / length);\r\n          scrollList.location.y += -1 * scroll.stepdelta;\r\n        }\r\n        obj.isPre[idx].active = true;\r\n        obj.names[idx + 1].active = true;\r\n        win.update();\r\n        kd.preventDefault();\r\n      }\r\n\r\n      // Go to previous name\r\n      if (kd.keyName == 'Up' && (idx - 1 >= 0)) {\r\n        // Update the scrollbar position when the Up key is pressed\r\n        if ((idx + 1 < length) && scroll && scrollList.location.y < 0) {\r\n          scroll.value = (idx - 1) * (scroll.maxvalue / length);\r\n          scrollList.location.y += 1 * scroll.stepdelta;\r\n        }\r\n        obj.isPre[idx].active.active = true;\r\n        obj.names[idx - 1].active = true;\r\n        win.update();\r\n        kd.preventDefault();\r\n      }\r\n\r\n      // Go to prefix after last name\r\n      if (kd.keyName == 'Down' && (idx + 1) == length) {\r\n        obj.isPre[idx].active = true;\r\n        pre.active = true;\r\n        win.update();\r\n        kd.preventDefault();\r\n      }\r\n    });\r\n\r\n    pre.addEventListener('keydown', function (kd) {\r\n      // Go to last name from prefix\r\n      if (kd.keyName == 'Up') {\r\n        obj.isPre[obj.names.length - 1].active = true;\r\n        obj.names[obj.names.length - 1].active = true;\r\n        win.update();\r\n        kd.preventDefault();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Fix scrollbar size for the dialog\r\n  function setScrollMax(obj, delta) {\r\n    if (obj.hasOwnProperty('scroll')) {\r\n      obj.scroll.maxvalue = obj.smallList.size.height - obj.pageListPanel.size.height + delta;\r\n    }\r\n  }\r\n\r\n  // Copyright link\r\n  copyright.addEventListener('mousedown', function () {\r\n    openURL('https://github.com/creold/');\r\n  });\r\n\r\n  // Save prefix, suffix, find and replace values\r\n  function saveSettings() {\r\n    if(!Folder(SETTINGS.folder).exists) Folder(SETTINGS.folder).create();\r\n    var $file = new File(SETTINGS.folder + SETTINGS.name),\r\n        absPrefs = setSettingsString(abs),\r\n        lyrsPrefs = setSettingsString(lyrs),\r\n        pathsPrefs = setSettingsString(paths),\r\n        activeTab = 0;\r\n\r\n    if (tabPnl.selection.text.match(MSG.tabLyr)) activeTab = 1;\r\n    if (tabPnl.selection.text.match(MSG.tabPath)) activeTab = 2;\r\n\r\n    $file.encoding = 'UTF-8';\r\n    $file.open('w');\r\n\r\n    var pref = {};\r\n    pref.abs = absPrefs;\r\n    pref.layers = lyrsPrefs;\r\n    pref.paths = pathsPrefs;\r\n    pref.tab = activeTab;\r\n\r\n    var data = pref.toSource();\r\n    $file.write(data);\r\n    $file.close();\r\n  }\r\n\r\n  function setSettingsString(obj) {\r\n    return [obj.pre, obj.suff, obj.find, obj.rplc, obj.range].join(';');\r\n  }\r\n  \r\n  // Load prefix, suffix, find and replace values\r\n  function loadSettings() {\r\n    var $file = File(SETTINGS.folder + SETTINGS.name);\r\n    if ($file.exists) {\r\n      try {\r\n        $file.encoding = 'UTF-8';\r\n        $file.open('r');\r\n        var json = $file.readln();\r\n        var pref = new Function('return ' + json)();\r\n        $file.close();\r\n        if (typeof pref != 'undefined') {\r\n          loadSettingsString(abs, absTabData, pref.abs.split(';'));\r\n          loadSettingsString(lyrs, lyrsTabData, pref.layers.split(';'));\r\n          loadSettingsString(paths, pathsTabData, pref.paths.split(';'));\r\n          tabPnl.selection = isNaN(pref.tab) ? 0 : pref.tab * 1;\r\n        }\r\n      } catch (e) {}\r\n    }\r\n  }\r\n\r\n  function loadSettingsString(obj, tabData, arr) {\r\n    if (tabData.hasOwnProperty('pre')) {\r\n      if (arr[0]) obj.pre  = tabData.pre.text  = arr[0];\r\n      if (arr[1]) obj.suff = tabData.suff.text = arr[1];\r\n      if (arr[2]) obj.find = tabData.find.text = arr[2];\r\n      if (arr[3]) obj.rplc = tabData.rplc.text = arr[3];\r\n      if (arr[4]) obj.range = tabData.range.text = arr[4];\r\n    }\r\n  }\r\n\r\n  function okClick() {\r\n    renameObjects(doc.artboards, CFG, PH, abs, absPH);\r\n    renameObjects(doc.layers, CFG, PH, lyrs, lyrsPH);\r\n    renameObjects(app.selection, CFG, PH, paths, pathsPH);\r\n    saveSettings();\r\n    win.close();\r\n  }\r\n\r\n  win.center();\r\n  win.show();\r\n}\r\n\r\n// GLOBAL FUNCTIONS\r\n\r\n// Initialize an object to store data\r\nfunction initObject(isFind) {\r\n  var obj = {\r\n    find: '',\r\n    isFind: isFind,\r\n    isPre: [],\r\n    isSuff: [],\r\n    names: [],\r\n    pre: '',\r\n    range: '',\r\n    rplc: '',\r\n    state: [],\r\n    suff: '',\r\n  };\r\n\r\n  return obj;\r\n}\r\n\r\n// Initialize an object to store placeholders\r\nfunction initPlaceholders(type, ph) {\r\n  var obj = {\r\n    nd: ph.numDown,\r\n    nu: ph.numUp,\r\n  };\r\n\r\n  if (type === 'artboards') {\r\n    obj.c   = ph.color;\r\n    obj.d   = ph.date;\r\n    obj.fn  = ph.fName;\r\n    obj.h   = ph.height;\r\n    obj.u   = ph.units;\r\n    obj.w   = ph.width;\r\n  } else if (type === 'layers') {\r\n    obj.fn  = ph.fName;\r\n  } else if (type === 'paths') {\r\n    obj.h   = ph.height;\r\n    obj.u   = ph.units;\r\n    obj.w   = ph.width;\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\n// Collect prefix, object name, suffix, and index\r\nfunction initData(src, result) {\r\n  for (var i = 0, len = src.length; i < len; i++) {\r\n    var name = getName(src[i]);\r\n    result.push([false, name, false, i]);\r\n  }\r\n}\r\n\r\n// Get item name of different types\r\nfunction getName(item) {\r\n  var str = '';\r\n\r\n  if (item.typename === 'TextFrame' && isEmpty(item.name) && !isEmpty(item.contents)) {\r\n    str = item.contents;\r\n  } else if (item.typename === 'SymbolItem' && isEmpty(item.name)) {\r\n    str = item.symbol.name;\r\n  } else {\r\n    str = item.name;\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n// Check empty string\r\nfunction isEmpty(str) {\r\n  return str.replace(/\\s/g, '').length == 0;\r\n}\r\n\r\n// Output artboard indexes as text\r\nfunction showAbIndex(layer, color) {\r\n  if (arguments.length == 1 || color == undefined) color = [0, 0, 0];\r\n\r\n  var doc = activeDocument,\r\n      idxColor = setRGBColor(color),\r\n      tmpLayer;\r\n\r\n  try {\r\n    tmpLayer = doc.layers.getByName(layer);\r\n  } catch (e) {\r\n    tmpLayer = doc.layers.add();\r\n    tmpLayer.name = layer;\r\n  }\r\n\r\n  for (var i = 0, len = doc.artboards.length; i < len; i++)  {\r\n    doc.artboards.setActiveArtboardIndex(i);\r\n    var currAb = doc.artboards[i],\r\n        abWidth = currAb.artboardRect[2] - currAb.artboardRect[0],\r\n        abHeight = currAb.artboardRect[1] - currAb.artboardRect[3],\r\n        label = tmpLayer.textFrames.add(),\r\n        labelSize = (abWidth >= abHeight) ? abHeight / 2 : abWidth / 2;\r\n    label.contents = i + 1;\r\n    // 1296 pt limit for font size in Illustrator\r\n    label.textRange.characterAttributes.size = (labelSize > 1296) ? 1296 : labelSize;\r\n    label.textRange.characterAttributes.fillColor = idxColor;\r\n    label.position = [currAb.artboardRect[0], currAb.artboardRect[1]];\r\n  }\r\n\r\n  if (parseInt(app.version) >= 16) {\r\n    app.executeMenuCommand('artboard');\r\n    app.executeMenuCommand('artboard');\r\n  } else {\r\n    app.redraw();\r\n  }\r\n\r\n  tmpLayer.remove();\r\n}\r\n\r\n// Generate solid RGB color\r\nfunction setRGBColor(rgb) {\r\n  var color = new RGBColor();\r\n  color.red = rgb[0];\r\n  color.green = rgb[1];\r\n  color.blue = rgb[2];\r\n\r\n  return color;\r\n}\r\n\r\n// Read text from a file\r\nfunction parseFromText(f) {\r\n  f.open('r');\r\n  var contents = f.read();\r\n  var lines = contents.split(/\\n|\\r|\\r\\n/);\r\n  f.close();\r\n\r\n  return lines;\r\n}\r\n\r\n// Write text to a file\r\nfunction writeToText(str, f) {\r\n  f.open('w');\r\n  f.write(str);\r\n  f.close();\r\n}\r\n\r\n// Preview new name in input field\r\nfunction previewNames(src, cfg, cfgPh, obj, objPh) {\r\n  var nameArr = generateNames(src, cfg, cfgPh, obj, objPh);\r\n\r\n  for (var i = 0, len = obj.names.length; i < len; i++) {\r\n    obj.names[i].text = nameArr[i];\r\n  }\r\n}\r\n\r\n// Rename objects in a collection\r\nfunction renameObjects(target, cfg, cfgPh, obj, objPh) {\r\n  if (!target.length) return;\r\n\r\n  var nameArr = generateNames(target, cfg, cfgPh, obj, objPh);\r\n  var currTarget, currName;\r\n\r\n  for (var i = 0, len = nameArr.length; i < len; i++) {\r\n    currTarget = target[i];\r\n    currName = nameArr[i];\r\n    if (isEmpty(currTarget.name) && currTarget.contents === currName) continue;\r\n    currTarget.name = currName; // Name is modified\r\n  }\r\n}\r\n\r\n// Generate new name\r\nfunction generateNames(target, cfg, cfgPh, obj, objPh) {\r\n  var result = [];\r\n  var findList = parseAndFilterIndexes(obj.range, obj.state.length - 1);\r\n\r\n  var cnt = getStartingNum(cfgPh, obj, objPh);\r\n  var amountUp = Math.abs(cnt.up) + target.length;\r\n  var amountDown = Math.abs(cnt.down) + target.length;\r\n\r\n  var newName = '', isPre = false, isSuff = false;\r\n  var cntUp = '', cntDown = '' , tmpPre = '', tmpSuff = '';\r\n  var isInRange = false;\r\n\r\n  for (var i = 0, len = obj.state.length; i < len; i++) {\r\n    isInRange = isIncludeNum(findList, i);\r\n    newName = findAndReplace(cfgPh, obj, i, isInRange);\r\n    isPre = obj.state[i][0];\r\n    isSuff = obj.state[i][2];\r\n    cntUp = padZero(cnt.up, amountUp.toString().length);\r\n    cntDown = padZero(cnt.down, amountDown.toString().length);\r\n    \r\n    if (isPre) {\r\n      tmpPre = rplcPlaceholder(obj.state[i], cntUp, cntDown, obj.pre, cfg, target, objPh);\r\n    }\r\n\r\n    if (isSuff) { \r\n      tmpSuff = rplcPlaceholder(obj.state[i], cntUp, cntDown, obj.suff, cfg, target, objPh);\r\n    }\r\n\r\n    cnt.up = changeCounter(cnt.up, obj.pre, obj.suff, objPh.nu, isPre, isSuff, true);\r\n    cnt.down = changeCounter(cnt.down, obj.pre, obj.suff, objPh.nd, isPre, isSuff, false);\r\n\r\n    result.push(tmpPre + newName + tmpSuff);\r\n    cntUp = '', cntDown = '' , tmpPre = '', tmpSuff = '';\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n// Get an array of item indexes from a range string\r\nfunction parseAndFilterIndexes(str, total) {\r\n  var chunks = str.split(/[, ]+/);\r\n  var length = chunks.length;\r\n  var parsedNums = [];\r\n\r\n  var chunk, range;\r\n  for (var i = 0; i < length; i++) {\r\n    chunk = chunks[i];\r\n    range = chunk.split('-');\r\n\r\n    if (range.length === 2) {\r\n      var start = parseInt(range[0], 10);\r\n      var end = parseInt(range[1], 10);\r\n\r\n      for (var j = start; j <= end; j++) {\r\n        parsedNums.push(j);\r\n      }\r\n    } else {\r\n      var num = parseInt(chunk, 10);\r\n      if (!isNaN(num)) parsedNums.push(num);\r\n    }\r\n  }\r\n\r\n  var filteredNums = [];\r\n  length = parsedNums.length;\r\n\r\n  for (var k = 0; k < length; k++) {\r\n    var num = parsedNums[k] - 1;\r\n\r\n    if (num >= 0 && num <= total) {\r\n      filteredNums.push(num);\r\n    }\r\n  }\r\n\r\n  return filteredNums;\r\n}\r\n\r\n// Find first placeholder with number\r\nfunction getStartingNum(cfgPh, obj, objPh) {\r\n  var tmpNumUp = cfgPh.numUp.substr(0, 4), // Part of the placeholder before number\r\n      tmpNumDown = cfgPh.numDown.substr(0, 4),\r\n      tmpPreSuff = (obj.pre + obj.suff).toLocaleLowerCase();\r\n\r\n  // Parse number up from string\r\n  var startIdxNumUp = tmpPreSuff.indexOf(tmpNumUp) + tmpNumUp.length,\r\n      endIdxNumUp = tmpPreSuff.indexOf('}', startIdxNumUp);\r\n  var cntUp = 1 * tmpPreSuff.substring(startIdxNumUp, endIdxNumUp);\r\n  if (isNaN(cntUp)) cntUp = 0;\r\n  objPh.nu = tmpNumUp + cntUp + '}';\r\n  \r\n  // Parse number down from string\r\n  var startIdxNumDown = tmpPreSuff.indexOf(tmpNumDown) + tmpNumUp.length,\r\n      endIdxNumDown = tmpPreSuff.indexOf('}', startIdxNumDown);\r\n  var cntDown = 1 * tmpPreSuff.substring(startIdxNumDown, endIdxNumDown);\r\n  if (isNaN(cntDown)) cntDown = 0;\r\n  objPh.nd = tmpNumDown + cntDown + '}';\r\n\r\n  return { 'up': cntUp, 'down': cntDown };\r\n}\r\n\r\n// Check for value in array\r\nfunction isIncludeNum(arr, value) {\r\n  for (var i = 0; i < arr.length; i++) {\r\n    if (arr[i] === value) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n// Find and replace in old name\r\nfunction findAndReplace(cfgPh, obj, idx, isInRange) {\r\n  var result = obj.state[idx][1];\r\n\r\n  if (obj.isFind && isInRange && (obj.find.length || !isEmpty(obj.find))) {\r\n    if (obj.find.match(cfgPh.name) != null) {\r\n      result = obj.rplc;\r\n    } else {\r\n      var regex = new RegExp(obj.find, 'gi');\r\n      result = result.replace(regex, obj.rplc);\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n// Add leading zero to number\r\nfunction padZero(number, size) {\r\n  var minus = (number < 0) ? '-' : '',\r\n      str = '00000000000' + Math.abs(number);\r\n\r\n  return minus + str.slice(str.length - size);\r\n}\r\n\r\n// Replace placeholders in suffix or prefix with text\r\nfunction rplcPlaceholder(row, cntUp, cntDown, str, cfg, target, ph) {\r\n  var name = activeDocument.name.replace(/\\.[^\\.]+$/, ''),\r\n      units = getUnits(),\r\n      width = height = 0,\r\n      color = /rgb/i.test(activeDocument.documentColorSpace) ? 'RGB' : 'CMYK';\r\n\r\n  switch (target[0].typename) {\r\n    case 'Artboard':\r\n      var currAb = activeDocument.artboards[row[3]];\r\n      width = currAb.artboardRect[2] - currAb.artboardRect[0];\r\n      height = currAb.artboardRect[1] - currAb.artboardRect[3];\r\n      break;\r\n    case 'Layer':\r\n      break;\r\n    default:\r\n      var item = app.selection[row[3]];\r\n      if (item.typename === 'GroupItem' && item.clipped) {\r\n        item = getMaskPath(item);\r\n      }\r\n      width = item.width;\r\n      height = item.height;\r\n      break;\r\n  }\r\n  \r\n  width = ( cfg.sf * convertUnits(width, 'px', units) ).toFixed(cfg.precision);\r\n  height = ( cfg.sf * convertUnits(height, 'px', units) ).toFixed(cfg.precision);\r\n\r\n  for (var prop in ph) {\r\n    // Fix for LAScripts extension users\r\n    if (/function/i.test(ph[prop])) continue;\r\n\r\n    var regex = new RegExp(ph[prop], 'gi');\r\n    if (str.match(regex)) {\r\n      var val;\r\n      switch (ph[prop]) {\r\n        case ph.u:\r\n          val = units;\r\n          break;\r\n        case ph.fn:\r\n          val = name;\r\n          break;\r\n        case ph.d:\r\n          val = getTodayDate();\r\n          break;\r\n        case ph.c:\r\n          val = color;\r\n          break;\r\n        case ph.nu:\r\n          val = cntUp;\r\n          break;\r\n        case ph.nd:\r\n          val = cntDown;\r\n          break;\r\n        case ph.h:\r\n          val = height.replace('.', cfg.decimal);\r\n          break;\r\n        case ph.w:\r\n          val = width.replace('.', cfg.decimal);\r\n          break;\r\n      }\r\n\r\n      str = str.replace(regex, val);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n// Change counter for active prefix or suffix\r\nfunction changeCounter(num, pre, suff, ph, isPre, isSuff, isUp) {\r\n  var regex = new RegExp(ph, 'gi');\r\n\r\n  if ((isPre && regex.test(pre)) || (isSuff && regex.test(suff))) {\r\n    num = isUp ? num + 1 : num - 1;\r\n  }\r\n\r\n  return num;\r\n}\r\n\r\n// Get data as YYYYMMDD format\r\nfunction getTodayDate() {\r\n  var date = new Date(),\r\n      mm = date.getMonth() + 1,\r\n      dd = date.getDate();\r\n\r\n  return [date.getFullYear(), (mm > 9 ? '' : '0') + mm,\r\n          (dd > 9 ? '' : '0') + dd].join('');\r\n}\r\n\r\n// Get clipping mask\r\nfunction getMaskPath(group) {\r\n  for (var i = 0, len = group.pageItems.length; i < len; i++) {\r\n    var currItem = group.pageItems[i];\r\n\r\n    if (isClippingPath(currItem)) {\r\n      return currItem;\r\n    }\r\n  }\r\n\r\n  // Return if no clipping path is found\r\n  return group;\r\n}\r\n\r\n// Check clipping mask\r\nfunction isClippingPath(item) {\r\n  var clipText = (item.typename === 'TextFrame' &&\r\n                  item.textRange.characterAttributes.fillColor == '[NoColor]' &&\r\n                  item.textRange.characterAttributes.strokeColor == '[NoColor]');\r\n  return (item.typename === 'CompoundPathItem' && item.pathItems[0].clipping) ||\r\n          item.clipping || clipText;\r\n}\r\n\r\n// Get active document ruler units\r\nfunction getUnits() {\r\n  if (!documents.length) return '';\r\n  var key = activeDocument.rulerUnits.toString().replace('RulerUnits.', '');\r\n  switch (key) {\r\n    case 'Pixels': return 'px';\r\n    case 'Points': return 'pt';\r\n    case 'Picas': return 'pc';\r\n    case 'Inches': return 'in';\r\n    case 'Millimeters': return 'mm';\r\n    case 'Centimeters': return 'cm';\r\n    // Added in CC 2023 v27.1.1\r\n    case 'Meters': return 'm';\r\n    case 'Feet': return 'ft';\r\n    case 'FeetInches': return 'ft';\r\n    case 'Yards': return 'yd';\r\n    // Parse new units in CC 2020-2023 if a document is saved\r\n    case 'Unknown':\r\n      var xmp = activeDocument.XMPString;\r\n      if (/stDim:unit/i.test(xmp)) {\r\n        var units = /<stDim:unit>(.*?)<\\/stDim:unit>/g.exec(xmp)[1];\r\n        if (units == 'Meters') return 'm';\r\n        if (units == 'Feet') return 'ft';\r\n        if (units == 'FeetInches') return 'ft';\r\n        if (units == 'Yards') return 'yd';\r\n        return 'px';\r\n      }\r\n      break;\r\n    default: return 'px';\r\n  }\r\n}\r\n\r\n// Convert units of measurement\r\nfunction convertUnits(value, currUnits, newUnits) {\r\n  return UnitValue(value, currUnits).as(newUnits);\r\n}\r\n\r\n// Open link in browser\r\nfunction openURL(url) {\r\n  var html = new File(Folder.temp.absoluteURI + '/aisLink.html');\r\n  html.open('w');\r\n  var htmlBody = '<html><head><META HTTP-EQUIV=Refresh CONTENT=\"0; URL=' + url + '\"></head><body> <p></body></html>';\r\n  html.write(htmlBody);\r\n  html.close();\r\n  html.execute();\r\n}\r\n\r\ntry {\r\n  main();\r\n} catch (e) {}"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "层命名",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 8"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Illustrator.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "mySelection = app.activeDocument.selection;\r\nmyDoc = app.activeDocument;\r\nif (mySelection instanceof Array)\r\n{\r\n\tselSwatches = myDoc.swatches.getSelected();\r\n\t\r\n\tif(selSwatches.length != 0)\r\n\t\tfor (i=0; i<mySelection.length; i++)\r\n\t\t{\r\n\t\t\tif(mySelection[i].typename == \"PathItem\" || mySelection[i].typename == \"CompoundPathItem\")\r\n\t\t\t{\r\n\t\t\t\tselItem = mySelection[i];\r\n\t\t\t\tselItem.filled = true;\r\n\r\n\t\t\t\tswatchIndex = Math.round( Math.random() * (selSwatches.length - 1 ));\r\n\t\t\t\t\r\n\t\t\t\tif(selItem.typename == \"PathItem\")\r\n\t\t\t\t\tselItem.fillColor = selSwatches[swatchIndex].color;\r\n\t\t\t\telse\r\n\t\t\t\t\tselItem.pathItems[0].fillColor = selSwatches[swatchIndex].color;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n}"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "随机上色",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 9"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Illustrator.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "/* \r\n\r\n  Author: Alexander Ladygin (i@ladygin.pro)\r\n  Program version: Adobe Illustrator CC+\r\n  Name: replaceItems.jsx;\r\n\r\n  Copyright (c) 2018\r\n  www.ladygin.pro\r\n\r\n*/\r\n\r\nvar scriptName = '替换形状',\r\n    settingFile = {\r\n        name: scriptName + '__setting.json',\r\n        folder: Folder.myDocuments + '/LA_AI_Scripts/'\r\n    };\r\n\r\nvar win = new Window('dialog', scriptName + ' 白泽宝宝汉化');\r\n    win.orientation = 'column';\r\n    win.alignChildren = ['fill', 'fill'];\r\n\r\nwith (win.add('group')) {\r\n    orientation = 'row';\r\n\r\n    var panel = add('panel', undefined, '替换什么?');\r\n        panel.orientation = 'column';\r\n        panel.alignChildren = ['fill', 'fill'];\r\n        panel.margins = [20, 30, 20, 20];\r\n\r\n        var bufferRadio = panel.add('radiobutton', undefined, '储存的对象'),\r\n            currentRadio = panel.add('radiobutton', undefined, '顶层对象'),\r\n            groupSuccessively = panel.add('radiobutton', undefined, '群组内全部 (顺序)'),\r\n            randomRadio = panel.add('radiobutton', undefined, '群组内全部 (随机)'),\r\n            groupValue = panel.add('group'),\r\n            randomValue = groupValue.add('edittext', undefined, '100'),\r\n            randomValueUnit = groupValue.add('statictext', undefined, '%'),\r\n            elementsInGroupCheckbox = panel.add('checkbox', undefined, '替换组中的项目?');\r\n\r\n        groupValue.orientation = 'row';\r\n        groupValue.margins = 0;\r\n        groupValue.alignChildren = ['fill', 'fill'];\r\n        randomValue.minimumSize = [140, undefined];\r\n\r\n    var panelCheckboxes = add('panel');\r\n        panelCheckboxes.orientation = 'column';\r\n        panelCheckboxes.alignChildren = ['fill', 'fill'];\r\n        panelCheckboxes.margins = 20;\r\n\r\n        var fitInSizeCheckbox = panelCheckboxes.add('checkbox', undefined, '适合元素大小');\r\n            copyWHCheckbox = panelCheckboxes.add('checkbox', undefined, '复制宽度和高度');\r\n            saveOriginalCheckbox = panelCheckboxes.add('checkbox', undefined, '保存原始元素'),\r\n            copyColorsCheckbox = panelCheckboxes.add('checkbox', undefined, '复制元素颜色'),\r\n            randomRotateCheckbox = panelCheckboxes.add('checkbox', undefined, '随机元素旋转'),\r\n            symbolByRPCheckbox = panelCheckboxes.add('checkbox', [0, 0, 100, 40], '对齐符号\\选中的点');\r\n\r\n        bufferRadio.value = true;\r\n        fitInSizeCheckbox.value = false;\r\n        copyWHCheckbox.value = false;\r\n        saveOriginalCheckbox.value = false;\r\n\r\n}\r\n\r\nvar winButtons = win.add('group');\r\n    winButtons.alignChildren = ['fill', 'fill'];\r\n    winButtons.margins = [0, 0, 0, 0];\r\n\r\n    var cancel = winButtons.add('button', undefined, '取消');\r\n    cancel.helpTip = '按Esc键关闭';\r\n    cancel.onClick = function () { win.close(); }\r\n\r\n    var ok = winButtons.add('button', [0, 0, 100, 30], 'OK');\r\n    ok.helpTip = '按Enter键运行';\r\n    ok.onClick = startAction;\r\n    ok.active = true;\r\n\r\n    var progressBar = win.add('progressbar', [0, 0, 110, 5]),\r\n        progressBarCounter = 100;\r\n    progressBar.value = 0;\r\n    progressBar.minvalue = 0;\r\n    progressBar.maxvalue = progressBarCounter;\r\n\r\n    copyWHCheckbox.onClick = function (e) {\r\n        groupValue.enabled = !copyWHCheckbox.value;\r\n        fitInSizeCheckbox.enabled = !this.value;\r\n    }\r\n\r\n    fitInSizeCheckbox.onClick = function (e) {\r\n        copyWHCheckbox.enabled = !this.value;\r\n    }\r\n\r\nfunction randomRotation (item) {\r\n    item.rotate(Math.floor(Math.random() * 360), true, true, true, true, Transformation.CENTER);\r\n}\r\n\r\nfunction setFillColor (items, color) {\r\n    if (color) {\r\n        var i = items.length;\r\n        if (i) while (i--) {\r\n            if (items[i].typename === 'GroupItem') {\r\n                setFillColor(items[i].pageItems, color);\r\n            }\r\n                else if (items[i].typename === 'CompoundPathItem') {\r\n                    if (items[i].pathItems.length) items[i].pathItems[0].fillColor = color;\r\n                }\r\n                else if (items[i].typename === 'PathItem') {\r\n                    items[i].fillColor = color;\r\n                }\r\n        }\r\n    }\r\n}\r\n\r\nfunction getFillColor (items) {\r\n    var i = items.length, gc;\r\n    if (i) while (i--) {\r\n        if (items[i].typename === 'GroupItem' && (gc = getFillColor(items[i].pageItems))) return gc;\r\n            else if (items[i].typename === 'CompoundPathItem' && items[i].pathItems.length) return items[i].pathItems[0].fillColor;\r\n            else if (items[i].typename === 'PathItem') return items[i].fillColor;\r\n    }\r\n}\r\n\r\nfunction getSymbolPositionByRegistrationPoint (item) {\r\n    var bakupSymbol = item.symbol,\r\n        newSymbol = activeDocument.symbols.add(item, SymbolRegistrationPoint.SYMBOLTOPLEFTPOINT);\r\n\r\n    // replace symbol\r\n    item.symbol = newSymbol;\r\n\r\n    // set position\r\n    var position = [\r\n            item.left,\r\n            item.top\r\n        ];\r\n\r\n    // restore symbol\r\n    item.symbol = bakupSymbol;\r\n    newSymbol.remove();\r\n    \r\n    return position;\r\n}\r\n\r\nfunction startAction() {\r\n    if (selection.length) {\r\n        panel.enabled = groupValue.enabled = panelCheckboxes.enabled = ok.enabled = cancel.enabled = false;\r\n\r\n        var __ratio = !isNaN(parseFloat(randomValue.text)) ? parseFloat(randomValue.text) / 100 : 1,\r\n            items = (!elementsInGroupCheckbox.value ? selection : selection[selection.length - 1].pageItems),\r\n            nodes = (currentRadio.value ? selection[0] : (bufferRadio.value ? [] : selection[0].pageItems)),\r\n            length = nodes.length,\r\n            i = items.length,\r\n            j = 0;\r\n\r\n        progressBarCounter = progressBar.maxvalue / i;\r\n\r\n        if (bufferRadio.value) {\r\n            selection = null;\r\n            app.paste();\r\n            nodes = selection[0];\r\n            selection = null;\r\n        }\r\n\r\n        function getNode (__index) {\r\n            return ((currentRadio.value || bufferRadio.value) ? nodes : nodes[ typeof __index === 'number' ? __index : Math.floor(Math.random() * length) ]);\r\n        }\r\n\r\n        while (i--) {\r\n            if (!bufferRadio.value && !i) break;\r\n            if (j >= nodes.length) j = 0;\r\n            var item = items[i],\r\n                node = getNode(groupSuccessively.value ? j : undefined).duplicate(item, ElementPlacement.PLACEBEFORE),\r\n                __fn = 'height',\r\n                __fnReverse = 'width';\r\n\r\n            j++;\r\n\r\n            if (node.height <= node.width) {\r\n                __fn = 'width';\r\n                __fnReverse = 'height';\r\n            }\r\n\r\n            if (randomRotateCheckbox.value) randomRotation(node);\r\n\r\n            if (!copyWHCheckbox.value) {\r\n                var __size = (item.height >= item.width ? item.width : item.height) * __ratio,\r\n                    precent = __size * 100 / node[__fn] / 100;\r\n\r\n                if (fitInSizeCheckbox.value) {\r\n                    node[__fn] = __size;\r\n                    node[__fnReverse] *= precent;\r\n                }\r\n            }\r\n                else {\r\n                    node.width = item.width;\r\n                    node.height = item.height;\r\n                }\r\n\r\n            node.left = item.left - (node.width - item.width) / 2;\r\n            node.top = item.top + (node.height - item.height) / 2;\r\n\r\n            if (symbolByRPCheckbox.value && node.typename === 'SymbolItem') {\r\n                var __pos = getSymbolPositionByRegistrationPoint(node);\r\n                node.left += (item.left + item.width / 2) - __pos[0];\r\n                node.top += (item.top - item.height / 2) - __pos[1];\r\n            }\r\n\r\n            if (copyColorsCheckbox.value) {\r\n                setFillColor([node], getFillColor([item]));\r\n            }\r\n            if (!saveOriginalCheckbox.value) item.remove();\r\n\r\n            progressBar.value += progressBarCounter;\r\n            win.update();\r\n        }\r\n\r\n        if (bufferRadio.value) nodes.remove();\r\n\r\n    }\r\n\r\n    win.close();\r\n}\r\n\r\nfunction saveSettings() {\r\n    var $file = new File(settingFile.folder + settingFile.name),\r\n        data = [\r\n            bufferRadio.value,\r\n            currentRadio.value,\r\n            randomRadio.value,\r\n            elementsInGroupCheckbox.value,\r\n            copyWHCheckbox.value,\r\n            saveOriginalCheckbox.value,\r\n            copyColorsCheckbox.value,\r\n            randomRotateCheckbox.value,\r\n            symbolByRPCheckbox.value,\r\n            randomValue.text,\r\n            groupSuccessively.value,\r\n            fitInSizeCheckbox.value\r\n        ].toString();\r\n\r\n    $file.open('w');\r\n    $file.write(data);\r\n    $file.close();\r\n}\r\n\r\nfunction loadSettings() {\r\n    var $file = File(settingFile.folder + settingFile.name);\r\n    if ($file.exists) {\r\n        try {\r\n            $file.open('r');\r\n            var data = $file.read().split('\\n'),\r\n                $main = data[0].split(',');\r\n                bufferRadio.value = ($main[0] === 'true');\r\n                currentRadio.value = ($main[1] === 'true');\r\n                randomRadio.value = ($main[2] === 'true');\r\n                elementsInGroupCheckbox.value = ($main[3] === 'true');\r\n                copyWHCheckbox.value = ($main[4] === 'true');\r\n                saveOriginalCheckbox.value = ($main[5] === 'true');\r\n                copyColorsCheckbox.value = ($main[6] === 'true');\r\n                randomRotateCheckbox.value = ($main[7] === 'true');\r\n                symbolByRPCheckbox.value = ($main[8] === 'true');\r\n                randomValue.text = $main[9];\r\n                groupSuccessively.value = ($main[10] === 'true');\r\n                fitInSizeCheckbox.value = ($main[11] === 'true');\r\n\r\n                groupValue.enabled = !copyWHCheckbox.value;\r\n                fitInSizeCheckbox.enabled = !copyWHCheckbox.value;\r\n                copyWHCheckbox.enabled = !fitInSizeCheckbox.value;\r\n        } catch (e) {}\r\n        $file.close();\r\n    }\r\n}\r\n\r\nwin.onClose = function() {\r\n    saveSettings();\r\n    return true;\r\n}\r\n\r\nfunction checkSettingFolder() {\r\n    var $folder = new Folder(settingFile.folder);\r\n    if (!$folder.exists) $folder.create();\r\n}\r\n\r\ncheckSettingFolder();\r\nloadSettings();\r\nwin.center();\r\nwin.show();"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "替换形状",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 10"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Illustrator.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "/* ===============================================================================================================================================\r\n   relinkToFolder\r\n\r\n   Description\r\n   This script replaces linked files with a file of the same name in the selected folder,\r\n   equivalent to InDesign's Links panel menu > Relink to Folder.\r\n\r\n   Usage\r\n   1. Select any linked files, run this script from File > Scripts > Other Script...\r\n      If no file is selected, it replaces all files in the document.\r\n   2. Select a folder from the dialog that appears.\r\n\r\n   Notes\r\n   Missing linked files and embedded files are not replaced.\r\n   When selecting linked files, select them in the document rather than the Links panel.\r\n   In rare cases, the script may not work if you continue to use it.\r\n   In this case, restart Illustrator and try again.\r\n\r\n   Requirements\r\n   Illustrator CS4 or higher\r\n\r\n   Version\r\n   1.1.1\r\n\r\n   Homepage\r\n   github.com/sky-chaser-high/adobe-illustrator-scripts\r\n\r\n   License\r\n   Released under the MIT license.\r\n   https://opensource.org/licenses/mit-license.php\r\n   =============================================================================================================================================== */\r\n\r\n(function() {\r\n    if (app.documents.length && isValidVersion()) main();\r\n})();\r\n\r\n\r\nfunction main() {\r\n    var files = getImageFiles();\r\n    if (!files) return;\r\n\r\n    var items = app.activeDocument.selection;\r\n    var links = getPlacedItems(items);\r\n    if (!links.length) return;\r\n\r\n    var failures = relink(links, files);\r\n\r\n    app.activeDocument.selection = null;\r\n    if (failures.length) showResult(failures);\r\n}\r\n\r\n\r\nfunction relink(links, files) {\r\n    var failedFiles = [];\r\n    for (var i = 0; i < links.length; i++) {\r\n        var link = links[i];\r\n        try {\r\n            var name = link.file.name;\r\n            var file = files[name];\r\n            if (file.exists) link.file = file;\r\n            else failedFiles.push(link);\r\n        }\r\n        catch (err) {\r\n            failedFiles.push(link);\r\n        }\r\n    }\r\n    return failedFiles;\r\n}\r\n\r\n\r\nfunction getImageFiles() {\r\n    $.localize = true;\r\n    var ui = localizeUI();\r\n    var dir = Folder.selectDialog(ui.folder);\r\n    if (!dir) return false;\r\n\r\n    var images = {};\r\n    var files = dir.getFiles();\r\n    for (var i = 0; i < files.length; i++) {\r\n        var file = files[i];\r\n        images[file.name] = file;\r\n    }\r\n    return images;\r\n}\r\n\r\n\r\nfunction getPlacedItems(items) {\r\n    if (!items.length) return app.activeDocument.placedItems;\r\n    var links = [];\r\n    for (var i = 0; i < items.length; i++) {\r\n        var item = items[i];\r\n        if (item.typename == 'PlacedItem') {\r\n            links.push(item);\r\n        }\r\n        if (item.typename == 'GroupItem') {\r\n            links = links.concat(getPlacedItems(item.pageItems));\r\n        }\r\n    }\r\n    return links;\r\n}\r\n\r\n\r\nfunction isValidVersion() {\r\n    var cs4 = 14;\r\n    var aiVersion = parseInt(app.version);\r\n    if (aiVersion < cs4) return false;\r\n    return true;\r\n}\r\n\r\n\r\nfunction showResult(items) {\r\n    $.localize = true;\r\n    var ui = localizeUI();\r\n\r\n    for (var i = 0; i < items.length; i++) {\r\n        items[i].selected = true;\r\n    }\r\n    var message = {\r\n        en: 'Failed to find ' + items.length + ' links in new folder. These links have not been relinked, and will remain selected in the Links panel.',\r\n        ja: items.length + ' 個のリンクが見つかりませんでした。これらのリンクは再リンクされず、リンクパネルで選択された状態のまま残ります。'\r\n    }\r\n\r\n    var dialog = new Window('dialog');\r\n    dialog.text = ui.title;\r\n    dialog.orientation = 'column';\r\n    dialog.alignChildren = ['fill', 'top'];\r\n    dialog.spacing = 10;\r\n    dialog.margins = 16;\r\n\r\n    var group1 = dialog.add('group', undefined, { name: 'group1' });\r\n    group1.orientation = 'row';\r\n    group1.alignChildren = ['left', 'center'];\r\n    group1.spacing = 10;\r\n    group1.margins = 0;\r\n\r\n    var statictext1 = group1.add('statictext', undefined, undefined, { name: 'statictext1', multiline: true });\r\n    statictext1.text = message;\r\n    statictext1.preferredSize.width = 410;\r\n    statictext1.preferredSize.height = 40;\r\n\r\n    var group2 = dialog.add('group', undefined, { name: 'group2' });\r\n    group2.orientation = 'row';\r\n    group2.alignChildren = ['right', 'center'];\r\n    group2.spacing = 10;\r\n    group2.margins = 0;\r\n\r\n    var button1 = group2.add('button', undefined, undefined, { name: 'button1' });\r\n    button1.text = ui.ok;\r\n    button1.preferredSize.width = 90;\r\n\r\n    dialog.show();\r\n}\r\n\r\n\r\nfunction localizeUI() {\r\n    return {\r\n        title: {\r\n            en: 'Relink to Folder',\r\n            ja: 'フォルダーに再リンク'\r\n        },\r\n        folder: {\r\n            en: 'Select a Folder',\r\n            ja: 'フォルダーを選択'\r\n        },\r\n        ok: {\r\n            en: 'OK',\r\n            ja: 'OK'\r\n        }\r\n    };\r\n}\r\n"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "链接文件夹",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 11"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Illustrator.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "/* ===============================================================================================================================================\r\n   relinkFileExtensionExtra\r\n\r\n   Description\r\n   This script is an enhanced version of relinkFileExtension.js with more advanced settings for relinking linked files.\r\n\r\n   Usage\r\n   1. Select any linked files, run this script from File > Scripts > Other Script...\r\n      If no files are selected, it replaces all files in the document.\r\n   2. Select either file renaming method.\r\n      Replace: Enter the current file name in the Find field and a new file name in the Replace field.\r\n               It can also be part of the file name. Regular expressions are supported in the Find field.\r\n      Add: Enter a string to be added to the prefix, suffix, or both of the original file names.\r\n   3. Enter an extension.\r\n      If the file extension is the same, enter nothing.\r\n   4. If you specify PDF as the extension, select the Crop to option and enter the page number.\r\n      See also: https://helpx.adobe.com/illustrator/using/importing-pdf-files.html\r\n   5. To change the folder for the linked file, select a new folder.\r\n      If the folder is the same as the original file, select nothing.\r\n      To clear the new folder path, hold down the Option/Alt key and click the Clear button.\r\n\r\n   Notes\r\n   Missing linked files and embedded files are not replaced.\r\n   When selecting linked files, select them in the document rather than the Links panel.\r\n   In rare cases, the script may not work if you continue to use it.\r\n   In this case, restart Illustrator and try again.\r\n\r\n   Requirements\r\n   Illustrator CS6 or higher\r\n\r\n   Version\r\n   1.3.1\r\n\r\n   Homepage\r\n   github.com/sky-chaser-high/adobe-illustrator-scripts\r\n\r\n   License\r\n   Released under the MIT license.\r\n   https://opensource.org/licenses/mit-license.php\r\n   =============================================================================================================================================== */\r\n\r\n(function() {\r\n    if (app.documents.length && isValidVersion()) main();\r\n})();\r\n\r\n\r\nfunction main() {\r\n    var items = app.activeDocument.selection;\r\n    var links = getPlacedItems(items);\r\n    if (!links.length) return;\r\n\r\n    var dialog = showDialog();\r\n\r\n    dialog.ok.onClick = function() {\r\n        var config = getConfiguration(dialog);\r\n        if (!config) return dialog.close();\r\n\r\n        var failures = relink(links, config);\r\n\r\n        app.activeDocument.selection = null;\r\n        if (failures.length) showResult(failures);\r\n        dialog.close();\r\n    }\r\n\r\n    dialog.show();\r\n}\r\n\r\n\r\nfunction relink(items, config) {\r\n    var failures = [];\r\n    for (var i = 0; i < items.length; i++) {\r\n        var link = items[i];\r\n        try {\r\n            var file = getRelinkFile(link.file, config);\r\n            if (!file) {\r\n                failures.push(link);\r\n                continue;\r\n            }\r\n            if (/pdf/i.test(config.extension)) {\r\n                setPDFFileOptions(config);\r\n                relinkPDFFile(link, file);\r\n                link.remove();\r\n            }\r\n            else {\r\n                link.file = file;\r\n            }\r\n        }\r\n        catch (err) {\r\n            failures.push(link);\r\n        }\r\n    }\r\n    return failures;\r\n}\r\n\r\n\r\nfunction getRelinkFile(src, config) {\r\n    var dir = (config.dir) ? config.dir : src.path;\r\n    var original = {\r\n        name: getFilename(src),\r\n        extension: getExtension(src)\r\n    };\r\n    var filename = getRelinkFilename(original, config);\r\n    var extension = (config.extension) ? config.extension : original.extension;\r\n    var file = File(dir + '/' + filename + extension);\r\n    if (file.exists) return file;\r\n    return;\r\n}\r\n\r\n\r\nfunction getRelinkFilename(src, config) {\r\n    if (config.isReplace) {\r\n        var regex = new RegExp(config.search, 'ig');\r\n        if (!regex.test(src.name)) return;\r\n        return src.name.replace(regex, config.replace);\r\n    }\r\n    if (config.isAdd) {\r\n        return config.prefix + src.name + config.suffix;\r\n    }\r\n}\r\n\r\n\r\nfunction getFilename(src) {\r\n    var filename = File.decode(src.name);\r\n    if (isMac()) filename = convertJapanese(filename);\r\n    var words = filename.split('.');\r\n    var name = words.slice(0, -1).join('.') || filename;\r\n    return name;\r\n}\r\n\r\n\r\nfunction getExtension(src) {\r\n    var filename = File.decode(src.name);\r\n    var words = filename.split('.');\r\n    if (words.length < 2) return '';\r\n    return '.' + words.pop();\r\n}\r\n\r\n\r\nfunction setPDFFileOptions(config) {\r\n    var options = app.preferences.PDFFileOptions;\r\n    options.pDFCropToBox = config.crop;\r\n    if (isCC2015Higher()) {\r\n        options.pageToOpen = config.page;\r\n        options.placeAsLinks = true;\r\n    }\r\n    else {\r\n        var key = 'plugin/PDFImport/PageNumber';\r\n        app.preferences.setIntegerPreference(key, config.page);\r\n    }\r\n}\r\n\r\n\r\nfunction relinkPDFFile(link, src) {\r\n    var item;\r\n    if (isCC2015Higher()) {\r\n        var layer = link.parent;\r\n        item = layer.placedItems.add();\r\n        item.file = src;\r\n    }\r\n    else {\r\n        item = placePDFFile(src);\r\n    }\r\n    resizePDFFile(item, link);\r\n}\r\n\r\n\r\nfunction placePDFFile(src) {\r\n    var filename = File.decode(src.fsName);\r\n    if (isMac()) filename = convertJapanese(filename);\r\n    runPlacePDFFileAction(filename);\r\n    return app.activeDocument.placedItems[0];\r\n}\r\n\r\n\r\nfunction resizePDFFile(item, link) {\r\n    var angle = getRotationAngle(link);\r\n    if (angle) item.rotate(angle);\r\n\r\n    var ratio = {\r\n        x: link.width / item.width * 100,\r\n        y: link.height / item.height * 100\r\n    };\r\n    var scale = (ratio.x < ratio.y) ? ratio.x : ratio.y;\r\n    item.resize(scale, scale);\r\n\r\n    item.top = link.top - (link.height / 2) + (item.height / 2);\r\n    item.left = link.left + (link.width / 2) - (item.width / 2);\r\n    item.move(link, ElementPlacement.PLACEAFTER);\r\n}\r\n\r\n\r\nfunction getRotationAngle(item) {\r\n    var matrix = item.matrix;\r\n    var rad = Math.atan2(matrix.mValueB, matrix.mValueA);\r\n    var deg = rad * 180 / Math.PI;\r\n    return deg * -1;\r\n}\r\n\r\n\r\nfunction runPlacePDFFileAction(src) {\r\n    var set = '_replaceLinkedFile_';\r\n    var action = 'placePDFFile';\r\n    var code = setActionCode(\r\n        convertToHexChars(set),\r\n        convertToHexChars(action),\r\n        convertToHexChars(src)\r\n    );\r\n    var aia = createAction(code, set);\r\n    try {\r\n        app.loadAction(aia);\r\n        app.doScript(action, set);\r\n        app.unloadAction(set, '');\r\n    }\r\n    catch (err) { }\r\n    aia.remove();\r\n}\r\n\r\n\r\nfunction createAction(code, filename) {\r\n    var dir = Folder('~/Desktop/')\r\n    var file = File(dir + filename + '.aia');\r\n    file.open('w');\r\n    file.write(code);\r\n    file.close();\r\n    return file;\r\n}\r\n\r\n\r\nfunction setActionCode(set, action, src) {\r\n    return '\\\r\n        /version 3\\\r\n        /name [ ' + set.length + '\\\r\n            ' + set.hex + '\\\r\n        ]\\\r\n        /isOpen 1\\\r\n        /actionCount 1\\\r\n        /action-1 {\\\r\n            /name [ ' + action.length + '\\\r\n                ' + action.hex + '\\\r\n            ]\\\r\n            /keyIndex 0\\\r\n            /colorIndex 0\\\r\n            /isOpen 1\\\r\n            /eventCount 1\\\r\n            /event-1 {\\\r\n                /useRulersIn1stQuadrant 0\\\r\n                /internalName (adobe_placeDocument)\\\r\n                /localizedName [ 5\\\r\n                    506c616365\\\r\n                ]\\\r\n                /isOpen 1\\\r\n                /isOn 1\\\r\n                /hasDialog 1\\\r\n                /showDialog 0\\\r\n                /parameterCount 7\\\r\n                /parameter-1 {\\\r\n                    /key 1885431653\\\r\n                    /showInPalette 4294967295\\\r\n                    /type (integer)\\\r\n                    /value 1\\\r\n                }\\\r\n                /parameter-2 {\\\r\n                    /key 1668444016\\\r\n                    /showInPalette 4294967295\\\r\n                    /type (enumerated)\\\r\n                    /name [ 7\\\r\n                        43726f7020546f\\\r\n                    ]\\\r\n                    /value 4\\\r\n                }\\\r\n                /parameter-3 {\\\r\n                    /key 1885823860\\\r\n                    /showInPalette 4294967295\\\r\n                    /type (integer)\\\r\n                    /value 1\\\r\n                }\\\r\n                /parameter-4 {\\\r\n                    /key 1851878757\\\r\n                    /showInPalette 4294967295\\\r\n                    /type (ustring)\\\r\n                    /value [ ' + src.length + '\\\r\n                        ' + src.hex + '\\\r\n                    ]\\\r\n                }\\\r\n                /parameter-5 {\\\r\n                    /key 1818848875\\\r\n                    /showInPalette 4294967295\\\r\n                    /type (boolean)\\\r\n                    /value 1\\\r\n                }\\\r\n                /parameter-6 {\\\r\n                    /key 1919970403\\\r\n                    /showInPalette 4294967295\\\r\n                    /type (boolean)\\\r\n                    /value 0\\\r\n                }\\\r\n                /parameter-7 {\\\r\n                    /key 1953329260\\\r\n                    /showInPalette 4294967295\\\r\n                    /type (boolean)\\\r\n                    /value 0\\\r\n                }\\\r\n            }\\\r\n        }\\\r\n    ';\r\n}\r\n\r\n\r\n// https://sttk3.com/blog/tips/illustrator/dynamic-generate-action.html\r\nfunction convertToHexChars(str) {\r\n    var hexStr = str.replace(/[0-9A-Za-z!'()*._~-]/g, function(c) {\r\n        return c.charCodeAt(0).toString(16);\r\n    });\r\n    var uri = encodeURIComponent(hexStr).replace(/%/g, '').toLowerCase();\r\n    return {\r\n        hex: uri,\r\n        length: uri.length / 2\r\n    };\r\n}\r\n\r\n\r\nfunction getPlacedItems(items) {\r\n    if (!items.length) return app.activeDocument.placedItems;\r\n    var links = [];\r\n    for (var i = 0; i < items.length; i++) {\r\n        var item = items[i];\r\n        if (item.typename == 'PlacedItem') {\r\n            links.push(item);\r\n        }\r\n        if (item.typename == 'GroupItem') {\r\n            links = links.concat(getPlacedItems(item.pageItems));\r\n        }\r\n    }\r\n    return links;\r\n}\r\n\r\n\r\nfunction getValue(text) {\r\n    var twoByteChar = /[！-～]/g;\r\n    var value = text.replace(twoByteChar, function(str) {\r\n        return String.fromCharCode(str.charCodeAt(0) - 0xFEE0);\r\n    });\r\n    if (isNaN(value) || !value) return 0;\r\n    return Number(value);\r\n}\r\n\r\n\r\n// Unicode Combining Character Sequence\r\n// https://shinkufencer.hateblo.jp/entry/2021/12/04/233000\r\n// https://bn.dgcr.com/archives/20080707140200.html\r\nfunction convertJapanese(text) {\r\n    var dakuten = '%E3%82%99';\r\n    var handakuten = '%E3%82%9A';\r\n    text = convertJapaneseSub(File.encode(text), dakuten, 1);\r\n    text = convertJapaneseSub(text, handakuten, 2);\r\n    return File.decode(text);\r\n}\r\nfunction convertJapaneseSub(src, code, count) {\r\n    src = src.replace(/%E3%82%BF%E3%82%99/g, '%E3%83%80'); // ダだけ特殊処理\r\n    var texts = src.split(code);\r\n    for (var i = 0; i < texts.length - 1; i++) {\r\n        var str = texts[i];\r\n        if (!str) continue;\r\n        var body = str.substring(0, str.length - 2);\r\n        var foot = str.substring(str.length - 2, str.length);\r\n        var hex = eval('0x' + foot) + count;\r\n        hex = hex.toString(16).toUpperCase();\r\n        texts[i] = body + hex;\r\n    }\r\n    return texts.join('');\r\n}\r\n\r\n\r\nfunction isMac() {\r\n    return /mac/i.test($.os);\r\n}\r\n\r\n\r\nfunction isCC2015Higher() {\r\n    var cc2015 = 19;\r\n    var aiVersion = parseInt(app.version);\r\n    if (aiVersion < cc2015) return false;\r\n    return true;\r\n}\r\n\r\n\r\nfunction isValidVersion() {\r\n    var cs6 = 16;\r\n    var aiVersion = parseInt(app.version);\r\n    if (aiVersion < cs6) return false;\r\n    return true;\r\n}\r\n\r\n\r\nfunction getConfiguration(dialog) {\r\n    var tab = dialog.tab.selection;\r\n    var name = tab.properties.name;\r\n\r\n    var isReplace = (name == 'tab1') ? true : false;\r\n    var search = dialog.search.text;\r\n    var replace = dialog.replace.text;\r\n\r\n    var isAdd = (name == 'tab2') ? true : false;\r\n    var prefix = dialog.prefix.text;\r\n    var suffix = dialog.suffix.text;\r\n\r\n    var ext = dialog.extension.text;\r\n    if (ext && !/^\\./.test(ext)) {\r\n        ext = '.' + ext;\r\n    }\r\n\r\n    var page = getValue(dialog.page.text);\r\n    if (!page) page = 1;\r\n    var crop = getPDFBoxType(dialog.crop.selection);\r\n\r\n    var dir = dialog.dir.text;\r\n    if (isReplace && !search && !replace && !ext && !dir) return;\r\n    if (isAdd && !prefix && !suffix && !ext && !dir) return;\r\n\r\n    return {\r\n        isReplace: isReplace,\r\n        search: search,\r\n        replace: replace,\r\n        isAdd: isAdd,\r\n        prefix: prefix,\r\n        suffix: suffix,\r\n        extension: ext,\r\n        page: page,\r\n        crop: crop,\r\n        dir: dir\r\n    };\r\n}\r\n\r\n\r\nfunction getPDFBoxType(item) {\r\n    switch (item.index) {\r\n        case 0: return PDFBoxType.PDFBOUNDINGBOX;\r\n        case 1: return PDFBoxType.PDFARTBOX;\r\n        case 2: return PDFBoxType.PDFCROPBOX;\r\n        case 3: return PDFBoxType.PDFTRIMBOX;\r\n        case 4: return PDFBoxType.PDFBLEEDBOX;\r\n        case 5: return PDFBoxType.PDFMEDIABOX;\r\n    }\r\n}\r\n\r\n\r\nfunction showResult(items) {\r\n    $.localize = true;\r\n    var ui = localizeUI();\r\n\r\n    for (var i = 0; i < items.length; i++) {\r\n        items[i].selected = true;\r\n    }\r\n    var failures = app.activeDocument.selection;\r\n    var message = {\r\n        en: 'Failed to find ' + failures.length + ' links. These links have not been relinked, and will remain selected in the Links panel.',\r\n        ja: failures.length + ' 個のリンクが見つかりませんでした。これらのリンクは再リンクされず、リンクパネルで選択された状態のまま残ります。'\r\n    }\r\n\r\n    var dialog = new Window('dialog');\r\n    dialog.text = ui.title;\r\n    dialog.orientation = 'column';\r\n    dialog.alignChildren = ['fill', 'top'];\r\n    dialog.spacing = 10;\r\n    dialog.margins = 16;\r\n\r\n    var group1 = dialog.add('group', undefined, { name: 'group1' });\r\n    group1.orientation = 'row';\r\n    group1.alignChildren = ['left', 'center'];\r\n    group1.spacing = 10;\r\n    group1.margins = 0;\r\n\r\n    var statictext1 = group1.add('statictext', undefined, undefined, { name: 'statictext1', multiline: true });\r\n    statictext1.text = message;\r\n    statictext1.preferredSize.width = 410;\r\n    statictext1.preferredSize.height = 40;\r\n\r\n    var group2 = dialog.add('group', undefined, { name: 'group2' });\r\n    group2.orientation = 'row';\r\n    group2.alignChildren = ['right', 'center'];\r\n    group2.spacing = 10;\r\n    group2.margins = 0;\r\n\r\n    var button1 = group2.add('button', undefined, undefined, { name: 'button1' });\r\n    button1.text = ui.ok;\r\n    button1.preferredSize.width = 90;\r\n\r\n    dialog.show();\r\n}\r\n\r\n\r\nfunction showDialog() {\r\n    $.localize = true;\r\n    var ui = localizeUI();\r\n\r\n    var crop = [\r\n        ui.boundingBox,\r\n        ui.art,\r\n        ui.crop,\r\n        ui.trim,\r\n        ui.bleed,\r\n        ui.media\r\n    ];\r\n\r\n    var dialog = new Window('dialog');\r\n    dialog.text = ui.title;\r\n    dialog.orientation = 'column';\r\n    dialog.alignChildren = ['fill', 'top'];\r\n    dialog.spacing = 10;\r\n    dialog.margins = 16;\r\n\r\n    var group1 = dialog.add('group', undefined, { name: 'group1' });\r\n    group1.orientation = 'row';\r\n    group1.alignChildren = ['left', 'center'];\r\n    group1.spacing = 10;\r\n    group1.margins = 0;\r\n\r\n    var statictext1 = group1.add('statictext', undefined, undefined, { name: 'statictext1' });\r\n    statictext1.text = ui.filename;\r\n\r\n    var tpanel1 = dialog.add('tabbedpanel', undefined, undefined, { name: 'tpanel1' });\r\n    tpanel1.alignChildren = 'fill';\r\n    tpanel1.margins = 0;\r\n\r\n    var tab1 = tpanel1.add('tab', undefined, undefined, { name: 'tab1' });\r\n    tab1.text = ui.isReplace;\r\n    tab1.orientation = 'column';\r\n    tab1.alignChildren = ['fill', 'top'];\r\n    tab1.spacing = 10;\r\n    tab1.margins = 10;\r\n\r\n    var group2 = tab1.add('group', undefined, { name: 'group2' });\r\n    group2.orientation = 'row';\r\n    group2.alignChildren = ['fill', 'center'];\r\n    group2.spacing = 10;\r\n    group2.margins = 0;\r\n\r\n    var group3 = group2.add('group', undefined, { name: 'group3' });\r\n    group3.orientation = 'column';\r\n    group3.alignChildren = ['right', 'center'];\r\n    group3.spacing = 18;\r\n    group3.margins = 0;\r\n    group3.alignment = ['left', 'center'];\r\n\r\n    var statictext2 = group3.add('statictext', undefined, undefined, { name: 'statictext2' });\r\n    statictext2.text = ui.find;\r\n\r\n    var statictext3 = group3.add('statictext', undefined, undefined, { name: 'statictext3' });\r\n    statictext3.text = ui.replace;\r\n\r\n    var group4 = group2.add('group', undefined, { name: 'group4' });\r\n    group4.orientation = 'column';\r\n    group4.alignChildren = ['fill', 'center'];\r\n    group4.spacing = 10;\r\n    group4.margins = 0;\r\n    group4.alignment = ['fill', 'center'];\r\n\r\n    var edittext1 = group4.add('edittext', undefined, undefined, { name: 'edittext1' });\r\n    edittext1.text = '';\r\n    edittext1.active = true;\r\n\r\n    var edittext2 = group4.add('edittext', undefined, undefined, { name: 'edittext2' });\r\n    edittext2.text = '';\r\n\r\n    var tab2 = tpanel1.add('tab', undefined, undefined, { name: 'tab2' });\r\n    tab2.text = ui.isAdd;\r\n    tab2.orientation = 'column';\r\n    tab2.alignChildren = ['fill', 'top'];\r\n    tab2.spacing = 10;\r\n    tab2.margins = 10;\r\n\r\n    var group5 = tab2.add('group', undefined, { name: 'group5' });\r\n    group5.orientation = 'row';\r\n    group5.alignChildren = ['fill', 'center'];\r\n    group5.spacing = 10;\r\n    group5.margins = 0;\r\n\r\n    var group6 = group5.add('group', undefined, { name: 'group6' });\r\n    group6.orientation = 'column';\r\n    group6.alignChildren = ['right', 'center'];\r\n    group6.spacing = 18;\r\n    group6.margins = 0;\r\n    group6.alignment = ['left', 'center'];\r\n\r\n    var statictext4 = group6.add('statictext', undefined, undefined, { name: 'statictext4' });\r\n    statictext4.text = ui.prefix;\r\n\r\n    var statictext5 = group6.add('statictext', undefined, undefined, { name: 'statictext5' });\r\n    statictext5.text = ui.suffix;\r\n\r\n    var group7 = group5.add('group', undefined, { name: 'group7' });\r\n    group7.orientation = 'column';\r\n    group7.alignChildren = ['fill', 'center'];\r\n    group7.spacing = 10;\r\n    group7.margins = 0;\r\n    group7.alignment = ['fill', 'center'];\r\n\r\n    var edittext3 = group7.add('edittext', undefined, undefined, { name: 'edittext3' });\r\n    edittext3.text = '';\r\n\r\n    var edittext4 = group7.add('edittext', undefined, undefined, { name: 'edittext4' });\r\n    edittext4.text = '';\r\n\r\n    tpanel1.selection = tab1;\r\n\r\n    var panel1 = dialog.add('panel', undefined, undefined, { name: 'panel1' });\r\n    panel1.text = ui.extension;\r\n    panel1.orientation = 'column';\r\n    panel1.alignChildren = ['fill', 'top'];\r\n    panel1.spacing = 10;\r\n    panel1.margins = 10;\r\n\r\n    var group8 = panel1.add('group', undefined, { name: 'group8' });\r\n    group8.orientation = 'row';\r\n    group8.alignChildren = ['left', 'center'];\r\n    group8.spacing = 10;\r\n    group8.margins = [0, 4, 0, 0];\r\n\r\n    var statictext6 = group8.add('statictext', undefined, undefined, { name: 'statictext6' });\r\n    statictext6.text = ui.relink;\r\n\r\n    var edittext5 = group8.add('edittext', undefined, undefined, { name: 'edittext5' });\r\n    edittext5.text = '';\r\n    edittext5.preferredSize.width = 60;\r\n\r\n    var panel2 = dialog.add('panel', undefined, undefined, { name: 'panel2' });\r\n    panel2.text = ui.options;\r\n    panel2.orientation = 'column';\r\n    panel2.alignChildren = ['fill', 'top'];\r\n    panel2.spacing = 10;\r\n    panel2.margins = 10;\r\n\r\n    var group9 = panel2.add('group', undefined, { name: 'group9' });\r\n    group9.orientation = 'row';\r\n    group9.alignChildren = ['left', 'center'];\r\n    group9.spacing = 10;\r\n    group9.margins = [0, 4, 0, 0];\r\n    group9.enabled = false;\r\n\r\n    var statictext7 = group9.add('statictext', undefined, undefined, { name: 'statictext7' });\r\n    statictext7.text = ui.cropTo;\r\n\r\n    var dropdown1 = group9.add('dropdownlist', undefined, crop, { name: 'dropdown1' });\r\n    dropdown1.selection = 5;\r\n\r\n    var statictext8 = group9.add('statictext', undefined, undefined, { name: 'statictext8' });\r\n    statictext8.text = ui.page;\r\n\r\n    var edittext6 = group9.add('edittext', undefined, undefined, { name: 'edittext6' });\r\n    edittext6.text = '1';\r\n    edittext6.preferredSize.width = 60;\r\n\r\n    var panel3 = dialog.add('panel', undefined, undefined, { name: 'panel3' });\r\n    panel3.text = ui.folder;\r\n    panel3.orientation = 'column';\r\n    panel3.alignChildren = ['fill', 'top'];\r\n    panel3.spacing = 10;\r\n    panel3.margins = 10;\r\n\r\n    var group10 = panel3.add('group', undefined, { name: 'group10' });\r\n    group10.orientation = 'row';\r\n    group10.alignChildren = ['fill', 'center'];\r\n    group10.spacing = 10;\r\n    group10.margins = [0, 4, 0, 0];\r\n\r\n    var button1 = group10.add('button', undefined, undefined, { name: 'button1' });\r\n    button1.text = ui.select;\r\n    button1.preferredSize.width = 60;\r\n    button1.alignment = ['left', 'center'];\r\n\r\n    var statictext9 = group10.add('statictext', undefined, undefined, { name: 'statictext9', truncate: 'end' });\r\n    statictext9.text = '';\r\n    statictext9.alignment = ['fill', 'center'];\r\n\r\n    var group11 = dialog.add('group', undefined, { name: 'group11' });\r\n    group11.orientation = 'row';\r\n    group11.alignChildren = ['right', 'center'];\r\n    group11.spacing = 10;\r\n    group11.margins = 0;\r\n\r\n    var button2 = group11.add('button', undefined, undefined, { name: 'button2' });\r\n    button2.text = ui.cancel;\r\n    button2.preferredSize.width = 90;\r\n\r\n    var button3 = group11.add('button', undefined, undefined, { name: 'button3' });\r\n    button3.text = ui.ok;\r\n    button3.preferredSize.width = 90;\r\n\r\n    edittext5.onChanging = function() {\r\n        var extension = edittext5.text;\r\n        if (/pdf/i.test(extension)) {\r\n            group9.enabled = true;\r\n            dropdown1.active = true;\r\n        }\r\n        else {\r\n            group9.enabled = false;\r\n        }\r\n    }\r\n\r\n    edittext6.addEventListener('keydown', setIncreaseDecrease);\r\n\r\n    button1.onClick = function() {\r\n        if (button1.text == ui.select) {\r\n            var src = Folder.selectDialog();\r\n            var text = statictext9.text;\r\n            var dir = (src) ? src.fsName : text;\r\n            statictext9.text = dir;\r\n            statictext9.helpTip = dir;\r\n        }\r\n        else {\r\n            statictext9.text = '';\r\n            statictext9.helpTip = '';\r\n        }\r\n    }\r\n\r\n    button2.onClick = function() {\r\n        dialog.close();\r\n    }\r\n\r\n    statictext2.addEventListener('click', function() {\r\n        edittext1.active = false;\r\n        edittext1.active = true;\r\n    });\r\n\r\n    statictext3.addEventListener('click', function() {\r\n        edittext2.active = false;\r\n        edittext2.active = true;\r\n    });\r\n\r\n    statictext4.addEventListener('click', function() {\r\n        edittext3.active = false;\r\n        edittext3.active = true;\r\n    });\r\n\r\n    statictext5.addEventListener('click', function() {\r\n        edittext4.active = false;\r\n        edittext4.active = true;\r\n    });\r\n\r\n    statictext6.addEventListener('click', function() {\r\n        edittext5.active = false;\r\n        edittext5.active = true;\r\n    });\r\n\r\n    statictext7.addEventListener('click', function() {\r\n        dropdown1.active = false;\r\n        dropdown1.active = true;\r\n    });\r\n\r\n    statictext8.addEventListener('click', function() {\r\n        edittext6.active = false;\r\n        edittext6.active = true;\r\n    });\r\n\r\n    statictext9.addEventListener('click', function() {\r\n        button1.notify('onClick');\r\n    });\r\n\r\n    dialog.addEventListener('keydown', function(event) {\r\n        var keyboard = ScriptUI.environment.keyboardState;\r\n        if (keyboard.altKey) {\r\n            button1.text = ui.clear;\r\n            event.preventDefault();\r\n        }\r\n    });\r\n\r\n    dialog.addEventListener('keyup', function(event) {\r\n        button1.text = ui.select;\r\n        event.preventDefault();\r\n    });\r\n\r\n    dialog.tab = tpanel1;\r\n    dialog.search = edittext1;\r\n    dialog.replace = edittext2;\r\n    dialog.prefix = edittext3;\r\n    dialog.suffix = edittext4;\r\n    dialog.extension = edittext5;\r\n    dialog.crop = dropdown1;\r\n    dialog.page = edittext6;\r\n    dialog.dir = statictext9;\r\n    dialog.ok = button3;\r\n    return dialog;\r\n}\r\n\r\n\r\nfunction setIncreaseDecrease(event) {\r\n    var value = getValue(event.target.text);\r\n    var keyboard = ScriptUI.environment.keyboardState;\r\n    var step = keyboard.shiftKey ? 5 : 1;\r\n    if (event.keyName == 'Up') {\r\n        value += step;\r\n        event.target.text = value;\r\n        event.preventDefault();\r\n    }\r\n    if (event.keyName == 'Down') {\r\n        value -= step;\r\n        if (value < 1) value = 1;\r\n        event.target.text = value;\r\n        event.preventDefault();\r\n    }\r\n}\r\n\r\n\r\nfunction localizeUI() {\r\n    return {\r\n        title: {\r\n            en: '重新建立文件扩展名链接',\r\n            ja: 'ファイル拡張子にリンクを再設定'\r\n        },\r\n        filename: {\r\n            en: '文件名:',\r\n            ja: 'ファイル名:'\r\n        },\r\n        isReplace: {\r\n            en: '替换',\r\n            ja: '置換'\r\n        },\r\n        find: {\r\n            en: '查找:',\r\n            ja: '検索文字列:'\r\n        },\r\n        replace: {\r\n            en: '替换为:',\r\n            ja: '置換文字列:'\r\n        },\r\n        isAdd: {\r\n            en: '添加',\r\n            ja: '追加'\r\n        },\r\n        prefix: {\r\n            en: '前缀:',\r\n            ja: '先頭:'\r\n        },\r\n        suffix: {\r\n            en: '后缀:',\r\n            ja: '末尾:'\r\n        },\r\n        extension: {\r\n            en: '扩展名',\r\n            ja: '拡張子'\r\n        },\r\n        relink: {\r\n            en: '重新链接到文件名扩展名:',\r\n            ja: 'ファイル名拡張子にリンクを再設定:'\r\n        },\r\n        options: {\r\n            en: 'PDF 导入选项',\r\n            ja: 'PDF 読み込みオプション'\r\n        },\r\n        page: {\r\n            en: '页码:',\r\n            ja: 'ページ:'\r\n        },\r\n        cropTo: {\r\n            en: '裁剪至:',\r\n            ja: 'トリミング:'\r\n        },\r\n        boundingBox: {\r\n            en: '边框',\r\n            ja: 'バウンディングボックス'\r\n        },\r\n        art: {\r\n            en: '艺术',\r\n            ja: 'アート'\r\n        },\r\n        crop: {\r\n            en: '修剪',\r\n            ja: 'トリミング'\r\n        },\r\n        trim: {\r\n            en: '完毕',\r\n            ja: '仕上がり'\r\n        },\r\n        bleed: {\r\n            en: '出血',\r\n            ja: '裁ち落とし'\r\n        },\r\n        media: {\r\n            en: '媒体',\r\n            ja: 'メディア'\r\n        },\r\n        folder: {\r\n            en: '文件夹',\r\n            ja: '画像フォルダ'\r\n        },\r\n        select: {\r\n            en: '选择',\r\n            ja: '選択'\r\n        },\r\n        clear: {\r\n            en: '清除',\r\n            ja: '削除'\r\n        },\r\n        cancel: {\r\n            en: 'Cancel',\r\n            ja: 'キャンセル'\r\n        },\r\n        ok: {\r\n            en: 'OK',\r\n            ja: 'OK'\r\n        }\r\n    };\r\n}\r\n"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "链接替换",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 12"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Illustrator.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "// Merge the Overlapped Anchors\r\n\r\n// merges nearly overlapped anchor points.\r\n// also reports how many anchor points had been reduced.\r\n\r\n// USAGE: Select the path(es) and run this script.\r\n\r\n\r\n// JavaScript Script for Adobe Illustrator CS3\r\n// Tested with Adobe Illustrator CS3 13.0.3, Windows XP SP2 (Japanese version).\r\n// This script provided \"as is\" without warranty of any kind.\r\n// Free to use and distribute.\r\n\r\n// Copyright(c) 2005-2009 SATO Hiroyuki\r\n// http://park12.wakwak.com/~shp/lc/et/en_aics_script.html\r\n\r\n// 2005-09-16\r\n// 2009-05-23 some refinements\r\n\r\n\r\n// Setting ===========================\r\n\r\n// merge the anchors when the distance between 2 points is\r\n// within this value (in point)\r\nvar minDist = 0.05;\r\n\r\n// report how many anchors had been reduced for\r\n// this number of paths in the selection. (counting from foreground)\r\nvar repo_max = 10;\r\n\r\n// ===================================\r\nminDist *= minDist;\r\n\r\nvar result = {};\r\nresult.before = 0;\r\nresult.after  = 0;\r\n\r\nvar paths = [];\r\ngetPathItemsInSelection(2, paths);\r\n\r\nif(paths.length > 0){\r\n  var p, len;\r\n  var msgs = [];\r\n  \r\n  for(var j = paths.length - 1; j >= 0; j--){\r\n    p = paths[j].pathPoints;\r\n    \r\n    readjustAnchors(p, minDist, result);\r\n    \r\n    if(j < repo_max){\r\n      if(result.after == 0){\r\n        msgs.unshift( \"removed\\n\" );\r\n        \r\n      } else if(result.after < result.before){\r\n        msgs.unshift( result.before + \" => \" + result.after + \"\\n\" );\r\n        \r\n      } else {\r\n        msgs.unshift( \" -\\n\" );\r\n      }\r\n      msgs.unshift( \"PathItem # \" + (j + 1) + \" : \");\r\n    }\r\n  }\r\n\r\n  if(paths.length > repo_max){\r\n    msgs.push( \"\\n(a log for first \" + repo_max + \" paths)\" );\r\n  }\r\n  \r\n  alert(\"# the number of anchors\\n      before => after\\n------------------------\\n\" + msgs.join(\"\"));\r\n}\r\n\r\n// ------------------------------------------------\r\nfunction readjustAnchors(p, minDist, result){\r\n  result.before = p.length;\r\n  var i;\r\n  \r\n  if(p.parent.closed){\r\n    for(i = p.length - 1; i >= 1; i--){\r\n      if(dist2(p[0].anchor, p[i].anchor) < minDist){\r\n        p[0].leftDirection = p[i].leftDirection;\r\n        p[i].remove();\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  \r\n  for(i = p.length - 1; i >= 1; i--){\r\n    if(dist2(p[i].anchor, p[i - 1].anchor) < minDist){\r\n      p[i - 1].rightDirection = p[i].rightDirection;\r\n      p[i].remove();\r\n    }\r\n  }\r\n  \r\n  if(p.length < 2){\r\n    p.parent.remove();\r\n    result.after = 0;\r\n  } else {\r\n    result.after = p.length;\r\n  }\r\n}\r\n\r\n// ------------------------------------------------\r\n// return the squared distance between p1=[x,y] and p2=[x,y]\r\nfunction dist2(p1, p2) {\r\n  return Math.pow(p1[0] - p2[0], 2)\r\n       + Math.pow(p1[1] - p2[1], 2);\r\n}\r\n\r\n// ------------------------------------------------\r\n// extract PathItems from the selection which length of PathPoints\r\n// is greater than \"n\"\r\nfunction getPathItemsInSelection(n, paths){\r\n  if(documents.length < 1) return;\r\n  \r\n  var s = activeDocument.selection;\r\n  \r\n  if (!(s instanceof Array) || s.length < 1) return;\r\n\r\n  extractPaths(s, n, paths);\r\n}\r\n\r\n// --------------------------------------\r\n// extract PathItems from \"s\" (Array of PageItems -- ex. selection),\r\n// and put them into an Array \"paths\".  If \"pp_length_limit\" is specified,\r\n// this function extracts PathItems which PathPoints length is greater\r\n// than this number.\r\nfunction extractPaths(s, pp_length_limit, paths){\r\n  for(var i = 0; i < s.length; i++){\r\n    if(s[i].typename == \"PathItem\"){\r\n      if(pp_length_limit\r\n         && s[i].pathPoints.length <= pp_length_limit){\r\n        continue;\r\n      }\r\n      paths.push(s[i]);\r\n      \r\n    } else if(s[i].typename == \"GroupItem\"){\r\n      // search for PathItems in GroupItem, recursively\r\n      extractPaths(s[i].pageItems, pp_length_limit, paths);\r\n      \r\n    } else if(s[i].typename == \"CompoundPathItem\"){\r\n      // searches for pathitems in CompoundPathItem, recursively\r\n      // ( ### Grouped PathItems in CompoundPathItem are ignored ### )\r\n      extractPaths(s[i].pathItems, pp_length_limit , paths);\r\n    }\r\n  }\r\n}\r\n"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "合并重叠",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 13"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Illustrator.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "/* \r\n\r\n  Program version: Adobe Illustrator CS5+\r\n  Name: randomus.js;\r\n\r\n  Author: Alexander Ladygin, email: i@ladygin.pro\r\n\r\n  Copyright (c) 2018\r\n  www.ladygin.pro\r\n\r\n*/\r\n\r\nvar scriptName = '随机',\r\n    settingFile = {\r\n        name: scriptName + '__setting.json',\r\n        folder: Folder.myDocuments + '/LA_AI_Scripts/'\r\n    };\r\n\r\nvar __attr = {\r\n        width: 120,\r\n        height: 25,\r\n        panelMargins: [10, 20, 10, 20]\r\n    },\r\n    isCompound = false,\r\n    isUndo = true,\r\n    undoCount = 0,\r\n    swatchDisabled = false,\r\n    $selection = selection,\r\n    win = new Window('dialog', scriptName + ' 白泽宝宝汉化', undefined);\r\n    win.orientation = 'column';\r\n    win.alignChildren = 'fill',\r\n    undoOriginal = {\r\n        scale: 0,\r\n        rotate: 0,\r\n        opacity: 0,\r\n        position: 0,\r\n    };\r\n\r\nfunction compoundFixAction ($items) {\r\n    function __ungroup (__items) {\r\n        var l = __items.length;\r\n        for (var i = 0; i < l; i++) {\r\n            if (__items[i].typename === 'GroupItem') {\r\n                var j = __items[i].pageItems.length;\r\n                while (j--) { __items[i].pageItems[0].moveBefore(__items[i]); }\r\n                __items[i].remove();\r\n            }\r\n        }\r\n    }\r\n\r\n    function compoundFix (item) {\r\n        selection = [item];\r\n        app.executeMenuCommand('noCompoundPath');\r\n        __ungroup(selection);\r\n        app.executeMenuCommand('compoundPath');\r\n        selection = null;\r\n    }\r\n\r\n    function compoundPathItemsNormalize (items) {\r\n        var i = items.length;\r\n        while (i--) {\r\n            if (items[i].typename === 'GroupItem') {\r\n                compoundPathItemsNormalize(items[i].pageItems);\r\n            }\r\n                else if (items[i].typename === 'CompoundPathItem') {\r\n                    compoundFix(items[i]);\r\n                }\r\n        }\r\n    }\r\n    compoundPathItemsNormalize($items);\r\n    selection = $selection;\r\n}\r\n\r\nfunction rvbn (min, max) {\r\n    // random value between numbers \r\n    return min + Math.floor(Math.random() * (max - min));\r\n}\r\n\r\nfunction inputNumberEvents (ev, _input, min, max, callback){\r\n    var step,\r\n        _dir = ev.keyName.toLowerCase().slice(0,1),\r\n        _value = parseFloat(_input.text),\r\n        units = (',px,pt,mm,cm,in,'.indexOf(_input.text.length > 2 ? (',' + _input.text.replace(/ /g, '').slice(-2) + ',') : ',!,') > -1 ? _input.text.replace(/ /g, '').slice(-2) : '');\r\n\r\n    min = (min === undefined ? 0 : min);\r\n    max = (max === undefined ? Infinity : max);\r\n    step = (ev.shiftKey ? 10 : (ev.ctrlKey ? .1 : 1));\r\n\r\n    if (isNaN(_value)) {\r\n        _input.text = min;\r\n    }\r\n        else {\r\n            _value = ( ((_dir === 'u') || (_dir === 'r')) ? _value + step : (((_dir === 'd') || (_dir === 'l')) ? _value - step : false) );\r\n            if (_value !== false) {\r\n                _value = (_value <= min ? min : (_value >= max ? max : _value))\r\n                _input.text = _value;\r\n                if (callback instanceof Function) callback(_value, _input, min, max, units);\r\n            }\r\n        }\r\n}\r\n\r\nvar group1 = win.add('group'),\r\n    group2 = win.add('group'),\r\n    group3 = win.add('group');\r\n\r\n    group1.orientation = group2.orientation = 'row';\r\n\r\nvar __fillStrokeColorPanel = group1.add('panel', undefined, '随机颜色:'),\r\n    __fillStrokeColorAll = __fillStrokeColorPanel.add('checkbox', [0, 0, __attr.width, __attr.height / 1.5], '所有对象'),\r\n    __FillColor = __fillStrokeColorPanel.add('button', [0, 0, __attr.width, __attr.height], '填充颜色'),\r\n    __StrokeColor = __fillStrokeColorPanel.add('button', [0, 0, __attr.width, __attr.height], '描边颜色');\r\n    __fillStrokeColorPanel.margins = __attr.panelMargins;\r\n\r\nvar __fillStrokeSwatchesPanel = group1.add('panel', undefined, '所选画板颜色:'),\r\n    __fillStrokeSwatchesAll = __fillStrokeSwatchesPanel.add('checkbox', [0, 0, __attr.width, __attr.height / 1.5], '所有对象'),\r\n    __FillSwatches = __fillStrokeSwatchesPanel.add('button', [0, 0, __attr.width, __attr.height], '填充颜色'),\r\n    __StrokeSwatches = __fillStrokeSwatchesPanel.add('button', [0, 0, __attr.width, __attr.height], '描边颜色');\r\n    __fillStrokeSwatchesPanel.margins = __attr.panelMargins;\r\n\r\nvar __ScaleGroup = group2.add('panel', undefined, '缩放:'),\r\n    __RotateGroup = group2.add('panel', undefined, '旋转:');\r\n    __ScaleGroup.orientation = __RotateGroup.orientation = 'column';\r\n    __ScaleGroup.margins = __RotateGroup.margins = __attr.panelMargins;\r\n\r\nvar __ScaleMinMaxGroup = __ScaleGroup.add('group');\r\n    __ScaleMinMaxGroup.orientation = 'row';\r\n\r\nvar __ScaleMin = __ScaleMinMaxGroup.add('edittext', [0, 0, __attr.width / 2.03, __attr.height], '50'),\r\n    __ScaleMax = __ScaleMinMaxGroup.add('edittext', [0, 0, __attr.width / 2.03, __attr.height], '150'),\r\n    __ScaleEach = __ScaleGroup.add('checkbox', [0, 0, __attr.width / 1.2, __attr.height / 1.5], '每个项目'),\r\n    __ScaleOriginal = __ScaleGroup.add('checkbox', [0, 0, __attr.width / 1.2, __attr.height], '保持原本'),\r\n    __Scale = __ScaleGroup.add('button', [0, 0, __attr.width, __attr.height], '缩放');\r\n\r\n    __ScaleMin.addEventListener('keydown', function (e) { inputNumberEvents(e, this, 0); });\r\n    __ScaleMax.addEventListener('keydown', function (e) { inputNumberEvents(e, this, 0); });\r\n\r\nvar __RotateMinMaxGroup = __RotateGroup.add('group');\r\n    __RotateMinMaxGroup.orientation = 'row';\r\n\r\nvar __RotateMin = __RotateMinMaxGroup.add('edittext', [0, 0, __attr.width / 2.03, __attr.height], '0'),\r\n    __RotateMax = __RotateMinMaxGroup.add('edittext', [0, 0, __attr.width / 2.03, __attr.height], '360'),\r\n    __RotateEach = __RotateGroup.add('checkbox', [0, 0, __attr.width / 1.2, __attr.height / 1.5], '每个项目'),\r\n    __RotateOriginal = __RotateGroup.add('checkbox', [0, 0, __attr.width / 1.2, __attr.height], '保持原本'),\r\n    __Rotate = __RotateGroup.add('button', [0, 0, __attr.width, __attr.height], '旋转');\r\n\r\n    function checkRotateValues (val, item, min, max) {\r\n        if (item === __RotateMin) {\r\n            if (val >= parseFloat(__RotateMax.text)) { __RotateMax.text = ((val + 1) >= max ? max + 1 : val + 1); }\r\n        }\r\n            else if (item === __RotateMax) {\r\n                if (val <= parseFloat(__RotateMin.text)) { __RotateMin.text = ((val - 1) < min ? min - 1 : val - 1); }\r\n            }\r\n\r\n    }\r\n    __RotateMin.addEventListener('keydown', function (e) { inputNumberEvents(e, __RotateMin, 0, 359, checkRotateValues); });\r\n    __RotateMax.addEventListener('keydown', function (e) { inputNumberEvents(e, __RotateMax, 1, 360, checkRotateValues); });\r\n\r\n\r\nvar __OpacityGroup = group3.add('panel', undefined, '透明度:'),\r\n    __PositionGroup = group3.add('panel', undefined, '位置:');\r\n    __OpacityGroup.orientation = __PositionGroup.orientation = 'column';\r\n    __OpacityGroup.margins = __PositionGroup.margins = __attr.panelMargins;\r\n\r\nvar __OpacityMinMaxGroup = __OpacityGroup.add('group');\r\n    __OpacityMinMaxGroup.orientation = 'row';\r\n\r\nvar __OpacityMin = __OpacityMinMaxGroup.add('edittext', [0, 0, __attr.width / 2.03, __attr.height], '0'),\r\n    __OpacityMax = __OpacityMinMaxGroup.add('edittext', [0, 0, __attr.width / 2.03, __attr.height], '100'),\r\n    __OpacityEach = __OpacityGroup.add('checkbox', [0, 0, __attr.width / 1.2, __attr.height / 1.5], '每个项目'),\r\n    __OpacityOriginal = __OpacityGroup.add('checkbox', [0, 0, __attr.width / 1.2, __attr.height], '保持原本'),\r\n    __Opacity = __OpacityGroup.add('button', [0, 0, __attr.width, __attr.height], '透明度');\r\n\r\n    function checkOpacityValues (val, item, min, max) {\r\n        if (item === __OpacityMin) {\r\n            if (val >= parseFloat(__OpacityMax.text)) { __OpacityMax.text = ((val + 1) >= max ? max + 1 : val + 1); }\r\n        }\r\n            else if (item === __OpacityMax) {\r\n                if (val <= parseFloat(__OpacityMin.text)) { __OpacityMin.text = ((val - 1) < min ? min - 1 : val - 1); }\r\n            }\r\n\r\n    }\r\n    __OpacityMin.addEventListener('keydown', function (e) { inputNumberEvents(e, __OpacityMin, 0, 359, checkOpacityValues); });\r\n    __OpacityMax.addEventListener('keydown', function (e) { inputNumberEvents(e, __OpacityMax, 1, 360, checkOpacityValues); });\r\n\r\nvar __PositionMinMaxGroup = __PositionGroup.add('group');\r\n    __PositionMinMaxGroup.orientation = 'row';\r\n\r\nvar __PositionEach = __PositionGroup.add('checkbox', [0, 0, __attr.width / 1.2, __attr.height / 1.5], '每个项目'),\r\n    __PositionOriginal = __PositionGroup.add('checkbox', [0, 0, __attr.width / 1.2, __attr.height], '保持原本'),\r\n    __PositionXvalue = __PositionMinMaxGroup.add('edittext', [0, 0, __attr.width / 2.03, __attr.height], '10 px'),\r\n    __PositionYvalue = __PositionMinMaxGroup.add('edittext', [0, 0, __attr.width / 2.03, __attr.height], '10 px');\r\n\r\n    function addUnitsPos (val, item, min, max, units) {\r\n        item.text = item.text + ' ' + units;\r\n    }\r\n    __PositionXvalue.addEventListener('keydown', function (e) { inputNumberEvents(e, __PositionXvalue, 0, Infinity, addUnitsPos); });\r\n    __PositionYvalue.addEventListener('keydown', function (e) { inputNumberEvents(e, __PositionYvalue, 0, Infinity, addUnitsPos); });\r\n\r\nvar __PositionXYGroup = __PositionGroup.add('group');\r\n    __PositionXYGroup.orientation = 'row';\r\n\r\nvar __PositionX = __PositionXYGroup.add('button', [0, 0, __attr.width / 2.03, __attr.height], 'X');\r\n    __PositionY = __PositionXYGroup.add('button', [0, 0, __attr.width / 2.03, __attr.height], 'Y');\r\n\r\n\r\nvar __activeSwatches = activeDocument.swatches.getSelected();\r\n\r\nfunction __action (callback) {\r\n    undoCount += 1;\r\n    reset.enabled = true;\r\n    undoButton.enabled = true;\r\n    callback();\r\n    app.redraw();\r\n}\r\n\r\nfunction undoUseOriginal (value, prop) {\r\n    if (undoCount && value && undoOriginal[prop]) {\r\n        app.undo();\r\n        undoCount--;\r\n        undoOriginal[prop]--;\r\n        reset.enabled = !!undoCount;\r\n        undoButton.enabled = !!undoCount;\r\n    } else if (value && !undoOriginal[prop]) {\r\n        undoOriginal[prop]++;\r\n    }\r\n}\r\n\r\nfunction getChildren() {\r\n    var __arr = [], i = $selection.length;\r\n    while (i--) {\r\n        if ($selection[i].typename === 'GroupItem') __arr = __arr.concat($selection[i].children());\r\n            else __arr.push($selection[i]);\r\n    }\r\n    return __arr;\r\n}\r\n\r\n\r\n    __FillColor.onClick = function() {\r\n        __action(function() {\r\n            $selection.fill((!__fillStrokeColorAll.value ? 'random' : $.color($.getColorMode('shortname'), 'random')));\r\n            __FillSwatches.enabled = true;\r\n        });\r\n    };\r\n    __FillSwatches.onClick = function() {\r\n        __action(function() {\r\n            var activeSws = activeDocument.swatches.getSelected();\r\n            __activeSwatches = (activeSws.length ? activeSws : (__activeSwatches.length ? __activeSwatches : []));\r\n\r\n            if (!__fillStrokeSwatchesAll.value) {\r\n                $selection.fill('swatches', undefined, __activeSwatches);\r\n            }\r\n                else {\r\n                    var __swatchesLength = __activeSwatches.length;\r\n        \r\n                    if (__swatchesLength < 2) {\r\n                        __swatches = activeDocument.swatches;\r\n                        __swatchesLength = __swatches.length;\r\n                        __FillSwatches.enabled = false;\r\n                    }\r\n\r\n                    $selection.fill(__swatches[Math.floor(Math.random() * __swatchesLength)].color);\r\n                }\r\n        });\r\n    };\r\n    __StrokeColor.onClick = function() {\r\n        __action(function() {\r\n            $selection.strokecolor((!__fillStrokeColorAll.value ? 'random' : $.color($.getColorMode('shortname'), 'random')));\r\n            __StrokeSwatches.enabled = true;\r\n        });\r\n    };\r\n    __StrokeSwatches.onClick = function() {\r\n        __action(function() {\r\n            var activeSws = activeDocument.swatches.getSelected();\r\n            __activeSwatches = (activeSws.length ? activeSws : (__activeSwatches.length ? __activeSwatches : []));\r\n\r\n            if (!__fillStrokeSwatchesAll.value) $selection.strokecolor('swatches');\r\n                else {\r\n                    var __swatchesLength = __activeSwatches.length;\r\n        \r\n                    if (__swatchesLength < 2) {\r\n                        __swatches = activeDocument.swatches;\r\n                        __swatchesLength = __swatches.length;\r\n                        __StrokeSwatches.enabled = false;\r\n                    }\r\n\r\n                    $selection.strokecolor(__swatches[Math.floor(Math.random() * __swatchesLength)].color);\r\n                }\r\n        });\r\n    };\r\n    __Scale.onClick = function() {\r\n        undoUseOriginal(__ScaleOriginal.value, 'scale');\r\n        var __value = [parseFloat(__ScaleMin.text), parseFloat(__ScaleMax.text)];\r\n        __action(function() {\r\n            if (__ScaleEach.value) getChildren().scale('random', __value);\r\n                else $selection.scale('random', __value);\r\n        });\r\n    };\r\n    __Rotate.onClick = function() {\r\n        undoUseOriginal(__RotateOriginal.value, 'rotate');\r\n        var __value = [parseFloat(__RotateMin.text), parseFloat(__RotateMax.text)];\r\n        __action(function() {\r\n            if (__RotateEach.value) getChildren().rotation('random', __value);\r\n                else $selection.rotation('random', __value);\r\n        });\r\n    };\r\n    __Opacity.onClick = function() {\r\n        undoUseOriginal(__OpacityOriginal.value, 'opacity');\r\n        var __value = [parseFloat(__OpacityMin.text), parseFloat(__OpacityMax.text)];\r\n        __action(function() {\r\n            if (__OpacityEach.value) getChildren().Opacity('random', __value);\r\n                else $selection.Opacity('random', __value);\r\n        });\r\n    };\r\n    __PositionX.onClick = function() {\r\n        undoUseOriginal(__PositionOriginal.value, 'position');\r\n        __action(function() {\r\n            if (__PositionEach.value) getChildren().left(__PositionXvalue.text, 'random');\r\n                else $selection.left(__PositionXvalue.text, 'random');\r\n        });\r\n    };\r\n    __PositionY.onClick = function() {\r\n        undoUseOriginal(__PositionOriginal.value, 'position');\r\n        __action(function() {\r\n            if (__PositionEach.value) getChildren().top(__PositionYvalue.text, 'random');\r\n                else $selection.top(__PositionYvalue.text, 'random');\r\n        });\r\n    };\r\n\r\nfunction checkCompound (items) {\r\n    var i = item.length;\r\n    while (i-- > -1) {\r\n        if (item[i].typename === 'CompoundPathItem') {\r\n            isCompound = true;\r\n            return isCompound;\r\n        } else if (item[i].typename === 'GroupItem') {\r\n            checkCompound(item[i].pageItems);\r\n        }\r\n    }\r\n    return isCompound;\r\n}\r\n\r\nvar buttonSize = [0, 0, 150, 30],\r\n    winButtons = win.add('group');\r\n    winButtons.orientation = 'row';\r\n    winButtons.alignChildren = 'center';\r\n    winButtons.margins = 0;\r\n\r\nvar winButtons2 = win.add('group');\r\n    winButtons2.orientation = 'row';\r\n    winButtons2.alignChildren = 'center';\r\n    winButtons2.margins = 0;\r\n\r\nvar fixCompoundButton = winButtons.add('button', [0, 0, 150, 30], '修复复合路径');\r\n    fixCompoundButton.helpTip = '规范化复合路径项，删除仅限组的路径项';\r\n    fixCompoundButton.enabled = isCompound;\r\n    fixCompoundButton.onClick = function () {\r\n        compoundFixAction($selection);\r\n        fixCompoundButton.enabled = false;\r\n        app.redraw();\r\n    };\r\n\r\nvar undoButton = winButtons.add('button', [0, 0, 65, 30], '撤销');\r\n    undoButton.helpTip = 'Undo';\r\n    undoButton.enabled = false;\r\n    undoButton.onClick = function () { __undoAction(); }\r\n\r\nvar reset = winButtons.add('button', [0, 0, 75, 30], 'Reset');\r\n    reset.helpTip = '重置脚本结果';\r\n    reset.enabled = false;\r\n    reset.onClick = function () { __resetAction(); }\r\n\r\nvar cancel = winButtons2.add('button', buttonSize, '取消');\r\n    cancel.helpTip = '按Esc关闭';\r\n    cancel.onClick = function () { win.close(); }\r\n\r\nvar ok = winButtons2.add('button', buttonSize, 'OK');\r\n    ok.helpTip = '按Enter运行';\r\n    ok.onClick = function (e) {\r\n        isUndo = false;\r\n        win.close();\r\n    };\r\n    ok.active = true;\r\n\r\nfunction __resetAction() {\r\n    if (isUndo && undoCount) {\r\n        while (undoCount--) app.undo();\r\n        app.redraw();\r\n        undoCount = 0;\r\n        reset.enabled = !!undoCount;\r\n        undoButton.enabled = !!undoCount;\r\n    }\r\n}\r\n\r\nfunction __undoAction() {\r\n    if (isUndo && undoCount) {\r\n        app.undo();\r\n        undoCount--;\r\n        app.redraw();\r\n        reset.enabled = !!undoCount;\r\n        undoButton.enabled = !!undoCount;\r\n    }\r\n}\r\n\r\nwin.onClose = function() {\r\n    __resetAction();\r\n    saveSettings();\r\n    return true;\r\n}\r\n\r\nfunction LA(obj, callback, reverse) {if (!callback) {if (obj instanceof Array) {return obj;}else {var arr = $.getArr(obj);if (arr === obj) {if ($.isColor(obj)) {return obj;}else {return [obj];}}return arr;}}else if (callback instanceof Function) {var arr = $.getArr(obj);if (arr === obj) {arr = [obj];}if (reverse) {var i = arr.length;while (i--) callback(arr[i], i, arr);}else {for (var i = 0; i < arr.length; i++) callback(arr[i], i, arr);}return arr;}}$.errorMessage = function (err) {alert(err + '\\n' + err.line);};$.appName = {indesign: (BridgeTalk.appName.toLowerCase() === 'indesign'),photoshop: (BridgeTalk.appName.toLowerCase() === 'photoshop'),illustrator: (BridgeTalk.appName.toLowerCase() === 'illustrator')};$.color = function (a, v) {if (a) {if (typeof a === 'string') {a = a.toLocaleLowerCase();}}else {return undefined;}if ((a === 'hex') && $.appName.illustrator) {if (!v) {return new RGBColor();}else {if (v === 'random') return $.color('rgb', v);else return $.hexToColor(v, 'RGB');}}else if ((a === 'cmyk') || (a === 'cmykcolor')) {var c = new CMYKColor(), b = [];if (v) {b = b.concat(v);if (typeof v === 'string' && v.toLocaleLowerCase() === 'random') {b = [Math.floor(Math.random() * 100), Math.floor(Math.random() * 100), Math.floor(Math.random() * 100), Math.floor(Math.random() * 100)];}else {for (var i = 0; i < b.length; i++) {if (b[i] === 'random') {b[i] = Math.floor(Math.random() * 100);}}}c.cyan = parseInt(b[0]);c.magenta = parseInt(b[1]);c.yellow = parseInt(b[2]);c.black = parseInt(b[3]);}return c;}else if ((a === 'rgb') || (a === 'rgbcolor') || ((a === 'hex') && $.appName.photoshop)) {var c = new RGBColor(), b = [];if (v) {b = b.concat(v);if (typeof v === 'string' && v.toLocaleLowerCase() === 'random') {b = [Math.floor(Math.random() * 255), Math.floor(Math.random() * 255), Math.floor(Math.random() * 255)];}else {for (var i = 0; i < b.length; i++) {if (b[i] === 'random') {b[i] = Math.floor(Math.random() * 100);}}}if ($.appName.photoshop) {if (a !== 'hex' || (typeof v === 'string' && v.toLocaleLowerCase() === 'random')) {c.red = parseInt(b[0]);c.green = parseInt(b[1]);c.blue = parseInt(b[2]);}else {c.hexValue = b[0];}}else if ($.appName.illustrator) {c.red = parseInt(b[0]);c.green = parseInt(b[1]);c.blue = parseInt(b[2]);}}return c;}else if ((a === 'gray') || (a === 'grayscale') || (a === 'grayscale') || (a === 'graycolor')) {var c = new GrayColor(), b = [];if (v) {b = b.concat(v);if (typeof v === 'string' && v.toLocaleLowerCase() === 'random') {b = Math.floor(Math.random() * 100);}c.gray = parseInt(b[0] || b);}return c;}else if ((a === 'lab') || (a === 'labcolor')) {var c = new LabColor(), value, b = [];if (v) {b = b.concat(v);if (typeof v === 'string' && v.toLocaleLowerCase() === 'random') {b = [Math.floor(Math.random() * 100), Math.floor(-128 + Math.random() * 256), Math.floor(-128 + Math.random() * 256)];}else {for (var i = 0; i < b.length; i++) {if (i === 0) {if (b[i] === 'random') {b[i] = Math.floor(Math.random() * 100);}}else {if (b[i] === 'random') {b[i] = Math.floor(-128 + Math.random() * 256);}}}}c.l = parseInt(b[0]);c.a = parseInt(b[1]);c.b = parseInt(b[2]);}return c;}else if ((a === 'spot') || (a === 'spotcolor')) {var c = new SpotColor(), b = [];if (v) {b = b.concat(v);c.tint = parseInt(b[1]);}return c;}else if ((a === 'gradient') || (a === 'Gradient') || (a === 'GradientColor')) {var c = app.activeDocument.gradients.add(), g = new GradientColor(), b = [];if (v) {b = b.concat(v);for (var i = 0; i < b.length; i++) {c.gradientStops[i].color = $.color(b[i][0], b[i][1]);}g.gradient = c;}return g;}else if ((a === 'no') || (a === 'nocolor')) {return new NoColor();}};$.convertColor = function (color, type) {type = type.toLocaleLowerCase();if (color.typename === 'RGBColor') {if (type.slice(0, 3) === 'rgb') {return color;}else if (type.slice(0, 4) === 'cmyk') {return $.color('cmyk', app.convertSampleColor(ImageColorSpace.RGB, color.getColorValues(), ImageColorSpace.CMYK, ColorConvertPurpose.defaultpurpose));}else if (type.slice(0, 3) === 'lab') {return $.color('lab', app.convertSampleColor(ImageColorSpace.RGB, color.getColorValues(), ImageColorSpace.LAB, ColorConvertPurpose.defaultpurpose));}else if (type.slice(0, 4) === 'gray') {return $.color('gray', app.convertSampleColor(ImageColorSpace.RGB, color.getColorValues(), ImageColorSpace.GrayScale, ColorConvertPurpose.defaultpurpose));}else if (type.toLocaleLowerCase() === 'hex') {return $.toHex(color);}}else if (color.typename === 'CMYKColor') {if (type.slice(0, 3) === 'rgb') {return $.color('rgb', app.convertSampleColor(ImageColorSpace.CMYK, color.getColorValues(), ImageColorSpace.RGB, ColorConvertPurpose.defaultpurpose));}else if (type.slice(0, 4) === 'cmyk') {return color;}else if (type.slice(0, 3) === 'lab') {return $.color('lab', app.convertSampleColor(ImageColorSpace.CMYK, color.getColorValues(), ImageColorSpace.LAB, ColorConvertPurpose.defaultpurpose));}else if (type.slice(0, 4) === 'gray') {return $.color('gray', app.convertSampleColor(ImageColorSpace.CMYK, color.getColorValues(), ImageColorSpace.GrayScale, ColorConvertPurpose.defaultpurpose));}else if (type.toLocaleLowerCase() === 'hex') {return $.toHex(color);}}else if (color.typename === 'LabColor') {if (type.slice(0, 3) === 'rgb') {return $.color('rgb', app.convertSampleColor(ImageColorSpace.LAB, color.getColorValues(), ImageColorSpace.RGB, ColorConvertPurpose.defaultpurpose));}else if (type.slice(0, 4) === 'cmyk') {return $.color('cmyk', app.convertSampleColor(ImageColorSpace.LAB, color.getColorValues(), ImageColorSpace.CMYK, ColorConvertPurpose.defaultpurpose));}else if (type.slice(0, 3) === 'lab') {return color;}else if (type.slice(0, 4) === 'gray') {return $.color('gray', app.convertSampleColor(ImageColorSpace.LAB, color.getColorValues(), ImageColorSpace.GrayScale, ColorConvertPurpose.defaultpurpose));}else if (type.toLocaleLowerCase() === 'hex') {return $.toHex(color);}}else if (color.typename === 'GrayColor') {if (type.slice(0, 3) === 'rgb') {return $.color('rgb', app.convertSampleColor(ImageColorSpace.GrayScale, color.getColorValues(), ImageColorSpace.RGB, ColorConvertPurpose.defaultpurpose));}else if (type.slice(0, 4) === 'cmyk') {return $.color('cmyk', app.convertSampleColor(ImageColorSpace.GrayScale, color.getColorValues(), ImageColorSpace.CMYK, ColorConvertPurpose.defaultpurpose));}else if (type.slice(0, 3) === 'lab') {return $.color('lab', app.convertSampleColor(ImageColorSpace.GrayScale, color.getColorValues(), ImageColorSpace.LAB, ColorConvertPurpose.defaultpurpose));}else if (type.slice(0, 4) === 'gray') {return color;}else if (type.toLocaleLowerCase() === 'hex') {return $.toHex(color);}}else if (color.typename === 'SpotColor') {return $.convertColor(color.spot.color, type);}else if (type.toLocaleLowerCase() === 'hex') {return $.toHex(color);}else if (!color.typename && typeof color === 'string') {return $.hexToColor(color, type);}};$.toHex = function (color, hash) {if (color.typename !== 'RGBColor' && $.appName.illustrator) {color = $.convertColor(color, 'RGB');}return (hash ? '#' : '') + to(color.red) + to(color.green) + to(color.blue);function to(val) {var hex = val.toString(16);return hex.length === 1 ? '0' + hex : hex;}};$.hexToColor = function (color, type) {color = color.toLocaleLowerCase();color = correct(color);function correct(a) {var l, b = '000000';if (a[0] === '#') {a = a.slice(1);}l = a.length;a = a + b.slice(l);return a;}return $.convertColor($.color('rgb', [parseInt((gc(color)).slice(0, 2), 16), parseInt((gc(color)).slice(2, 4), 16), parseInt((gc(color)).slice(4, 6), 16)]), type || 'rgb');function gc(h) {return (h.slice(0, 1) === '#') ? h.slice(1, 7) : h;}};$.isColor = function (color) {if ((color.typename === 'GradientColor')|| (color.typename === 'PatternColor')|| (color.typename === 'CMYKColor')|| (color.typename === 'SpotColor')|| (color.typename === 'GrayColor')|| (color.typename === 'LabColor')|| (color.typename === 'RGBColor')|| (color.typename === 'NoColor')) {return true;}else {return false;}};$.getColorValues = function (color) {if (color === undefined) {return undefined;}else if (color.typename === 'CMYKColor') {return [color.cyan, color.magenta, color.yellow, color.black];}else if (color.typename === 'RGBColor') {return [color.red, color.green, color.blue];}else if (color.typename === 'LabColor') {return [color.l, color.a, color.b];}else if (color.typename === 'SpotColor') {return [color.spotl, color.tint];}else if (color.typename === 'GrayColor') {return [color.gray];}else if (color.typename === 'NoColor') {return undefined;}else if (color.typename === 'GradientColor') {var colors = [], gradients = color.gradient.gradientStops;for (var i = 0; i < gradients.length; i++) {colors = colors.concat(gradients[i].color.getColorValues());}return colors;}};CMYKColor.prototype.getColorValues = function () {return $.getColorValues(this);};RGBColor.prototype.getColorValues = function () {return $.getColorValues(this);};GrayColor.prototype.getColorValues = function () {return $.getColorValues(this);};LabColor.prototype.getColorValues = function () {return $.getColorValues(this);};NoColor.prototype.getColorValues = function () {return $.getColorValues(this);};$.isArr = function (a) {if ((!a)|| (typeof a === 'string')|| (a.typename === 'Document')|| (a.typename === 'Layer')|| (a.typename === 'PathItem')|| (a.typename === 'GroupItem')|| (a.typename === 'PageItem')|| (a.typename === 'CompoundPathItem')|| (a.typename === 'TextFrame')|| (a.typename === 'TextRange')|| (a.typename === 'GraphItem')|| (a.typename === 'Document')|| (a.typename === 'Artboard')|| (a.typename === 'LegacyTextItem')|| (a.typename === 'NoNNativeItem')|| (a.typename === 'Pattern')|| (a.typename === 'PlacedItem')|| (a.typename === 'PluginItem')|| (a.typename === 'RasterItem')|| (a.typename === 'MeshItem')|| (a.typename === 'SymbolItem')) {return false;}else if (!a.typename && !(a instanceof Array)) {return false;}else {return true;}};$.getArr = function (obj, attr, value, exclude) {var arr = [];function checkExclude (item) {if (exclude !== undefined) {var j = exclude.length;while (j--) if (exclude[j] === item) return true;}return false;}if ($.isArr(obj)) {for (var i = 0; i < obj.length; i++) {if (!checkExclude(obj[i])) {if (attr) {if (value !== undefined) {arr.push(obj[i][attr][value]);}else {arr.push(obj[i][attr]);}}else {arr.push(obj[i]);}}}return arr;}else if (attr) {return obj[attr];}else {return obj;}};$.getUnits = function (val, def) {try {return 'px,pt,mm,cm,in,pc'.indexOf(val.slice(-2)) > -1 ? val.slice(-2) : def;}catch (e) {$.errorMessage('check units: \" ' + e + ' \"');}};$.convertUnits = function (obj, b) {if (obj === undefined) {return obj;}if (b === undefined) {b = 'px';}if (typeof obj === 'number') {obj = obj + 'px';}if (typeof obj === 'string') {var unit = $.getUnits(obj),val = parseFloat(obj);if (unit && !isNaN(val)) {obj = val;}else if (!isNaN(val)) {obj = val; unit = 'px';}}if ($.appName.illustrator) {if (((unit === 'px') || (unit === 'pt')) && (b === 'mm')) {obj = parseFloat(obj) / 2.83464566929134;}else if (((unit === 'px') || (unit === 'pt')) && (b === 'cm')) {obj = parseFloat(obj) / (2.83464566929134 * 10);}else if (((unit === 'px') || (unit === 'pt')) && (b === 'in')) {obj = parseFloat(obj) / 72;}else if ((unit === 'mm') && ((b === 'px') || (b === 'pt'))) {obj = parseFloat(obj) * 2.83464566929134;}else if ((unit === 'mm') && (b === 'cm')) {obj = parseFloat(obj) * 10;}else if ((unit === 'mm') && (b === 'in')) {obj = parseFloat(obj) / 25.4;}else if ((unit === 'cm') && ((b === 'px') || (b === 'pt'))) {obj = parseFloat(obj) * 2.83464566929134 * 10;}else if ((unit === 'cm') && (b === 'mm')) {obj = parseFloat(obj) / 10;}else if ((unit === 'cm') && (b === 'in')) {obj = parseFloat(obj) * 2.54;}else if ((unit === 'in') && ((b === 'px') || (b === 'pt'))) {obj = parseFloat(obj) * 72;}else if ((unit === 'in') && (b === 'mm')) {obj = parseFloat(obj) * 25.4;}else if ((unit === 'in') && (b === 'cm')) {obj = parseFloat(obj) * 25.4;}return parseFloat(obj);}else if ($.appName.photoshop) {return parseFloat(obj);}};$.getColorMode = function (shortname) { return activeDocument.colorMode(shortname); };Object.prototype.colorMode = function (type) {var backup = {doc: app.activeDocument};function set(doc) {doc.activate();if (typeof type === 'string') {type = type.toLocaleLowerCase();if ((type === 'cmyk') || (type === 'rgb')) {try {$.command('doc-color-' + type);}catch (e) {$.errorMessage('Error \"Document color type\" message: ' + e);}}}}var obj = LA(this),names = [];for (var i = 0; i < obj.length; i++) {if (type === 'shortname') {var mode = obj[i].documentColorSpace.toString();if (type === 'shortname') mode = mode.replace('DocumentColorSpace.', '');names.push(mode);}else {set(obj[i]);}}if (type || type === 'shortname') {if (names.length === 1) return names[0];return names;}backup.doc.activate();return this;};String.prototype.getUnits = function () {try {var str = this.slice(-2),u = ['px', 'pt', 'mm', 'cm', 'in', 'pc'];for (var i = 0; i < u.length; i++) {if (str === u[i]) {return u[i];}}return false;}catch (e) {$.errorMessage('check units: \" ' + e + ' \"');}};Object.prototype.removeItemsWithArray = function (items) {var obj = [], items = LA(items);for (var i = 0; i < this.length; i++) {if (!check(this[i])) {obj.push(this[i]);}}function check(e) {for (var j = 0; j < items.length; j++) {if (e === items[j]) {return true;}}return false;}return obj;};Object.prototype.getAllParents = function () {function get(obj) {var arr = [];if (obj.parent.typename !== 'Application') {for (var i = 0; ; i++) {arr.push(obj.parent);if (obj.parent.parent.typename === 'Application') {return arr;}else {obj = obj.parent;}if (i === 1000) {break;}}}else {return obj;}}var obj = LA(this), _arr = [];for (var i = 0; i < obj.length; i++) {_arr = _arr.concat(get(obj[i]));}return _arr;};Object.prototype.subLayers = function (level) {var arr = [], count = 0;if (level !== undefined) {level = level - 1;}function subLayers(layer) {var obj = [], sub = layer.layers;for (var j = 0; j < sub.length; j++) {obj = obj.concat(sub[j]);if ((level === undefined) || (sub[j].layers.length > 0 && count < level)) {obj = obj.concat(subLayers(sub[j], count++));count--;}}return obj;}var obj = LA(this);for (var j = 0; j < obj.length; j++) {arr = arr.concat(subLayers(obj[j]));}return arr;};Object.prototype.emptySubLayers = function (level) {var arr = [], obj = LA(this);function process(sub) {var sub_arr = [];sub = sub.subLayers(level).reverse();for (var i = 0; i < sub.length; i++) {if (sub[i].pageItems.length > 0) {var parents = sub[i].pageItems[0].getAllParents();parents.pop();sub_arr = sub_arr.concat(parents);}}return sub.removeItemsWithArray(sub_arr).reverse();}for (var i = 0; i < obj.length; i++) {arr = arr.concat(process(obj[i]));}return arr;};Object.prototype.children = function (type, level) {var arr = [], obj = this, count = 0;function get(i, n) {var c;if (i.typename !== 'CompoundPathItem') {c = i.pageItems;}else {c = LA(i.pathItems);}if (!c || !c.length) {return undefined;}for (var j = 0; j < c.length; j++) {if (n === undefined) {arr = arr.concat(c[j]);}else if (c[j].typename === n) {arr = arr.concat(c[j]);}if ((level === undefined) || (count < level)) {if (c[j].typename === 'GroupItem') {get(c[j], n, count++);count--;}else if (n === 'PathItem' && c[j].typename === 'CompoundPathItem') {var items = LA(c[j].pathItems);if (items.length !== 0) {arr = arr.concat(items);}}}}}function process(e, t) {if (!$.isArr(t)) {for (var i = 0; i < e.length; i++) {get(e[i], t);}}else {for (var i = 0; i < e.length; i++) {for (var j = 0; j < t.length; j++) {get(e[i], t[j]);}}}return arr;}obj = LA(this);if (typeof type !== 'object' && !isNaN(parseInt(type))) {level = parseInt(type);type = undefined;}if ((this.typename === 'Layers') || (this.typename === 'Layer')) {obj = obj.concat(this.subLayers(level).removeItemsWithArray(this.emptySubLayers(level)));}return process(obj, type);};Object.prototype.scale = function (w, h, t_obj, t_fillpatt, t_fillgrad, t_strokepatt) {scale = [w || 100, h || w];t_obj = (typeof t_obj === 'boolean' ? t_obj : true);t_fillpatt = (typeof t_fillpatt === 'boolean' ? t_fillpatt : true);t_fillgrad = (typeof t_fillgrad === 'boolean' ? t_fillgrad : true);t_strokepatt = (typeof t_strokepatt === 'boolean' ? t_strokepatt : true);function toScale(item, size) {var random_value = 10 + Math.floor(Math.random() * 170);if ((size[0] === 'random') && (size[1] instanceof Array)) {var _value = size[1][0] + Math.floor(Math.random() * (size[1][1] - size[1][0]));size = [_value, _value];}else if ((size[0] === 'random') && (size[2] !== 'random')) {size = [random_value, random_value];}else if ((size[0] === 'random') && (size[2] === 'random')) {size = [10 + Math.floor(Math.random() * 170), 10 + Math.floor(Math.random() * 170)];}item.resize(size[0], size[1] || size[0], t_obj, t_fillpatt, t_fillgrad, t_strokepatt);}var obj = LA(this);for (var i = 0; i < obj.length; i++) {toScale(obj[i], scale);}return this;};Object.prototype.rotation = function (degMin, degMax, t_obj, t_fillpatt, t_fillgrad, t_strokepatt) {__value = degMin;if ((degMin !== 'random') && (degMax === undefined)) __value = [degMin];else if (((degMin === 'random') && (degMax instanceof Array)) || ((typeof degMin === 'number') && (typeof degMax === 'number'))) __value = [degMin, degMax];t_obj = (typeof t_obj === 'boolean' ? t_obj : true);t_fillpatt = (typeof t_fillpatt === 'boolean' ? t_fillpatt : true);t_fillgrad = (typeof t_fillgrad === 'boolean' ? t_fillgrad : true);t_strokepatt = (typeof t_strokepatt === 'boolean' ? t_strokepatt : true);function toRotate(item, _val) {var $value = [],random_value = Math.floor(Math.random() * 360);if (_val.length === 1 && typeof _val[0] === 'number') {$value = [_val[0]];}if ((_val[0] === 'random') && (_val[1] instanceof Array)) {var $value = _val[1][0] + Math.floor(Math.random() * (_val[1][1] - _val[1][0]));$value = [$value];}else if ((typeof _val[0] === 'number') && (typeof _val[1] === 'number')) {var $value = _val[0] + Math.floor(Math.random() * (_val[1] - _val[0]));$value = [$value];}else if (_val[0] === 'random') {$value = [random_value];}item.rotate($value[0], t_obj, t_fillpatt, t_fillgrad, t_strokepatt);}var obj = LA(this);for (var i = 0; i < obj.length; i++) {toRotate(obj[i], __value);}return this;};Object.prototype.fill = function (type, values, sws) {var obj = LA(this),swatches = sws || activeDocument.swatches.getSelected(),swatchesLength = swatches.length;if (!swatchesLength) {swatches = activeDocument.swatches;swatchesLength = swatches.length;}for (var i = 0; i < obj.length; i++) {if ((obj[i].typename === 'GroupItem') || (obj[i].typename === 'CompoundPathItem')) {obj[i].children().fill(type, values);}else {if (obj[i].fillColor && !obj[i].clipping && !obj[i].guides) {if (type === 'random') {obj[i].fillColor = $.color($.getColorMode('shortname'), 'random');}else if ((type === 'darken') || (type === 'lighten')) {obj[i].fillColor = $['color' + type.slice(0,1).toUpperCase() + type.slice(1)](obj[i].fillColor, values);}else if (type === 'swatches') {obj[i].fillColor = swatches[Math.floor(Math.random() * swatchesLength)].color;}else if ($.isColor(type)) {if (obj[i].fillColor) obj[i].fillColor = type;}else {type === false ? obj[i].filled = false : obj[i].fillColor = $.color(type, values);}}else if (obj[i].textRange) {if (type === 'random') {obj[i].textRange.characterAttributes.fillColor = $.color($.getColorMode('shortname'), 'random');}else if ((type === 'darken') || (type === 'lighten')) {obj[i].fillColor = $['color' + type.slice(0,1).toUpperCase() + type.slice(1)](obj[i].fillColor, values);}else if (type === 'swatches') {var __clr = swatches[Math.floor(Math.random() * swatchesLength)].color;if (__clr.typename !== 'GradientColor' && __clr.typename !== 'NoColor') obj[i].textRange.characterAttributes.fillColor = __clr;else obj[i].fill('random');}else if ($.isColor(type)) {obj[i].textRange.characterAttributes.fillColor = type;}else {type === false ? obj[i].textRange.characterAttributes.filled = false : obj[i].textRange.characterAttributes.fillColor = $.color(type, values);}}}}return this;};Object.prototype.strokecolor = function (type, values) {var obj = LA(this),swatches = activeDocument.swatches.getSelected(),swatchesLength = swatches.length;if (!swatchesLength) {swatches = activeDocument.swatches;swatchesLength = swatches.length;}for (var i = 0; i < obj.length; i++) {if ((obj[i].typename === 'GroupItem') || (obj[i].typename === 'CompoundPathItem')) {obj[i].children().strokecolor(type, values);}else {if (obj[i].strokeColor && !obj[i].clipping && !obj[i].guides) {if (type === 'random') {obj[i].strokeColor = $.color($.getColorMode('shortname'), 'random');}else if ((type === 'darken') || (type === 'lighten')) {obj[i].strokeColor = $['color' + type.slice(0,1).toUpperCase() + type.slice(1)](obj[i].strokeColor, values);}else if (type === 'swatches') {obj[i].strokeColor = swatches[Math.floor(Math.random() * swatchesLength)].color;}else if ($.isColor(type)) {if (obj[i].strokeColor) obj[i].strokeColor = type;}else {type === false ? obj[i].stroked = false : obj[i].strokeColor = $.color(type, values);}}else if (obj[i].textRange) {if (type === 'random') {obj[i].textRange.characterAttributes.strokeColor = $.color($.getColorMode('shortname'), 'random');}else if ((type === 'darken') || (type === 'lighten')) {obj[i].strokeColor = $['color' + type.slice(0,1).toUpperCase() + type.slice(1)](obj[i].strokeColor, values);}else if (type === 'swatches') {var __clr = swatches[Math.floor(Math.random() * swatchesLength)].color;if (__clr.typename !== 'GradientColor' && __clr.typename !== 'NoColor') obj[i].strokeColor = __clr;else obj[i].strokecolor('random');}else if ($.isColor(type)) {obj[i].textRange.characterAttributes.strokeColor = type;}else {type === false ? obj[i].textRange.characterAttributes.stroked = false : obj[i].textRange.characterAttributes.strokeColor = $.color(type, values);}}}}return this;};Object.prototype.Opacity = function (value, __randomValues) {__randomValues = (__randomValues instanceof Array && __randomValues.length > 1 ? __randomValues : [5, 95]);function set(item, val) {val === 'random' ? val = Math.floor(__randomValues[0] + Math.random() * (__randomValues[1] - __randomValues[0])) : val = parseFloat(val) || item.opacity;arr.push(val);item.opacity = val;}var obj = LA(this), arr = [];for (var i = 0; i < obj.length; i++) {set(obj[i], value);}if (value === undefined) {if (arr.length === 1) {return arr[0];}else {return arr;}}else {return this;}};Object.prototype.top = function (e, t) {return LA(LA_Position(this, e, 'top', t));};Object.prototype.right = function (e, t) {return LA(LA_Position(this, e, 'right', t));};Object.prototype.bottom = function (e, t) {return LA(LA_Position(this, e, 'bottom', t));};Object.prototype.left = function (e, t) {return LA(LA_Position(this, e, 'left', t));};function LA_Position(el, _value, position, to) {var arr = [], toSize = false, count = 1, str = ['+', '-'];if (el === undefined) {return el;}if (!$.isArr(el)) {if (_value === undefined) {return get(el, _value);}else {get(el, _value);return el;}}else {if (_value === undefined) {for (var i = 0; i < el.length; i++) {arr = arr.concat(get(el[i]), _value);}return arr;}else {for (var i = 0; i < el.length; i++) {if (to === 'random') {get(el[i], Math.floor(Math.random() * $.convertUnits(_value, 'px')) + _value.getUnits() + str[Math.floor(Math.random() * str.length)]);count++;}else {get(el[i], _value);if (to === true) {count++;}}}return el;}}function get(i, val) {if (val === undefined) {return set(i, undefined, '=');}else if (typeof val === 'string') {val = val.replace(/ /g, '');if (!isNaN(parseInt(val))) {var Char = val[val.length - 1];if ((Char === '+') || (Char === '-')) {val = Char + val.slice(0, -1);toSize = true;}switch (val.slice(0, 1)) {case '-':set(i, $.convertUnits(val, 'px'), '-');break;case '+':set(i, $.convertUnits(val, 'px'), '+');break;case val.slice(0, 1):set(i, $.convertUnits(val, 'px'), '=');break;}}}else if (typeof val === 'number') {set(i, val, '=');}else {$.errorMessage('SyntaxError: Unexpected token \"' + val + '\"');return false;}}function set(item, value, events) {toSize === false ? size = [0, 0] : size = [item.width, item.height];switch (position) {case 'top':t(size[1]);return item.top;break;case 'right':value = value * - 1;r(size[0] * -1);return item.left + item.width;break;case 'bottom':value = value * - 1;b(size[1] * -1);return item.top + item.height;break;case 'left':l(size[0]);return item.left;break;}function t(h) {if (events === '=') {item.top = parseFloat(value) || parseFloat(item.top);}else {item.top = parseFloat(item.top) + parseFloat(value);}}function r(w) {if (events === '=') {item.left = parseFloat(value) || parseFloat(item.left);}else {item.left = parseFloat(item.left) + (parseFloat(value) + parseFloat(w));}}function b(h) {if (events === '=') {item.top = parseFloat(value) || parseFloat(item.top);}else {item.top = parseFloat(item.top) + (parseFloat(value) - parseFloat(h));}}function l(w) {if (events === '=') {item.left = parseFloat(value) || parseFloat(item.left);}else {item.left = parseFloat(item.left) + parseFloat(value);}}}}\r\n\r\n\r\nfunction saveSettings() {\r\n    var $file = new File(settingFile.folder + settingFile.name),\r\n        data = [\r\n            __fillStrokeColorAll.value,\r\n            __fillStrokeSwatchesAll.value,\r\n            __ScaleEach.value,\r\n            __RotateEach.value,\r\n            __OpacityEach.value,\r\n            __PositionEach.value,\r\n            __ScaleMin.text,\r\n            __ScaleMax.text,\r\n            __RotateMin.text,\r\n            __RotateMax.text,\r\n            __OpacityMin.text,\r\n            __OpacityMax.text,\r\n            __PositionXvalue.text,\r\n            __PositionYvalue.text,\r\n            __ScaleOriginal.value,\r\n            __RotateOriginal.value,\r\n            __OpacityOriginal.value,\r\n            __PositionOriginal.value\r\n        ].toString();\r\n\r\n    $file.open('w');\r\n    $file.write(data);\r\n    $file.close();\r\n}\r\n\r\nfunction loadSettings() {\r\n    var $file = File(settingFile.folder + settingFile.name);\r\n    if ($file.exists) {\r\n        try {\r\n            $file.open('r');\r\n            var data = $file.read().split('\\n'),\r\n                $main = data[0].split(',');\r\n            __fillStrokeColorAll.value = ($main[0] === 'true');\r\n            __fillStrokeSwatchesAll.value = ($main[1] === 'true');\r\n            __ScaleEach.value = ($main[2] === 'true');\r\n            __RotateEach.value = ($main[3] === 'true');\r\n            __OpacityEach.value = ($main[4] === 'true');\r\n            __PositionEach.value = ($main[5] === 'true');\r\n            __ScaleMin.text = $main[6];\r\n            __ScaleMax.text = $main[7];\r\n            __RotateMin.text = $main[8];\r\n            __RotateMax.text = $main[9];\r\n            __OpacityMin.text = $main[10];\r\n            __OpacityMax.text = $main[11];\r\n            __PositionXvalue.text = $main[12];\r\n            __PositionYvalue.text = $main[13];\r\n            __ScaleOriginal.value = $main[14];\r\n            __RotateOriginal.value = $main[15];\r\n            __OpacityOriginal.value = $main[16];\r\n            __PositionOriginal.value = $main[17];\r\n        } catch (e) {}\r\n        $file.close();\r\n    }\r\n}\r\n\r\nif (selection.length) {\r\n    function checkSettingFolder() {\r\n        var $folder = new Folder(settingFile.folder);\r\n        if (!$folder.exists) $folder.create();\r\n    }\r\n    checkSettingFolder();\r\n    loadSettings();\r\n    win.center();\r\n    win.show();\r\n}\r\n    else {\r\n        alert('请选择对象!');\r\n    }"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "随机变化",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 14"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Illustrator.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "/*\r\n  FitSelectionToArtboards.jsx for Adobe Illustrator\r\n  Description: Proportional resizing of objects to fit one in each artboard\r\n  Date: December, 2022\r\n  Modification date: April, 2024\r\n  Author: Sergey Osokin, email: hi@sergosokin.ru\r\n\r\n  Installation: https://github.com/creold/illustrator-scripts#how-to-run-scripts\r\n\r\n  Release notes:\r\n  0.3.4 Fixed objects alignment with modified artboard rulers\r\n  0.3.3 Fixed text object fitting\r\n  0.3.2 Added new units API for CC 2023 v27.1.1\r\n  0.3.1 Added size correction in large canvas mode\r\n  0.3 Added silent mode when holding the Alt key\r\n  0.2 Added more options\r\n  0.1 Initial version\r\n\r\n  Donate (optional):\r\n  If you find this script helpful, you can buy me a coffee\r\n  - via Buymeacoffee: https://www.buymeacoffee.com/aiscripts\r\n  - via Donatty https://donatty.com/sergosokin\r\n  - via DonatePay https://new.donatepay.ru/en/@osokin\r\n  - via YooMoney https://yoomoney.ru/to/410011149615582\r\n\r\n  NOTICE:\r\n  Tested with Adobe Illustrator CC 2019-2024 (Mac/Win).\r\n  This script is provided \"as is\" without warranty of any kind.\r\n  Free to use, not for sale\r\n\r\n  Released under the MIT license\r\n  http://opensource.org/licenses/mit-license.php\r\n\r\n  Check my other scripts: https://github.com/creold\r\n*/\r\n\r\n//@target illustrator\r\npreferences.setBooleanPreference('ShowExternalJSXWarning', false); // Fix drag and drop a .jsx file\r\n\r\nfunction main() {\r\n  var SCRIPT = {\r\n        name: '使选择适合画板',\r\n        version: 'v.0.3.4'\r\n      },\r\n      CFG = {\r\n        pads: 0,\r\n        isAll: true, // Fit to all empty artboards\r\n        isVisBnds: preferences.getBooleanPreference('includeStrokeInBounds'), // Visual bounds\r\n        isFit: true, // Resize selection\r\n        isRename: false, // Rename artboards as items\r\n        aiVers: parseInt(app.version),\r\n        isScaleStroke: preferences.getBooleanPreference('scaleLineWeight'),\r\n        units: getUnits(), // Active document units\r\n        showUI: true,    // Silent mode or dialog\r\n        dlgMargins: [10, 15, 10, 8],\r\n        dlgOpacity: .97 // UI window opacity. Range 0-1\r\n      };\r\n\r\n  if (CFG.aiVers < 16) {\r\n    alert('Error\\nSorry, script only works in Illustrator CS6 and later', 'Script error');\r\n    return;\r\n  }\r\n\r\n  if (!documents.length) {\r\n    alert('Error\\nOpen a document and try again', 'Script error');\r\n    return;\r\n  }\r\n\r\n  if (!selection.length || selection.typename == 'TextRange') {\r\n    alert('Error\\nPlease, select one or more items', 'Script error');\r\n    return;\r\n  }\r\n\r\n  // Scale factor for Large Canvas mode\r\n  CFG.sf = activeDocument.scaleFactor ? activeDocument.scaleFactor : 1;\r\n\r\n  var isAltPressed = false;\r\n  if (ScriptUI.environment.keyboardState.altKey) isAltPressed = true;\r\n\r\n  if ((CFG.showUI && !isAltPressed) || (!CFG.showUI && isAltPressed)) { // Show dialog\r\n    invokeUI(SCRIPT, CFG);\r\n  } else { // Silent mode with the default settings\r\n    process(CFG);\r\n  }\r\n}\r\n\r\n// Show UI\r\nfunction invokeUI(title, cfg) {\r\n  var dlg = new Window('dialog', title.name + ' ' + title.version);\r\n      dlg.alignChildren = ['fill', 'top'];\r\n      dlg.opacity = cfg.dlgOpacity;\r\n\r\n  // Artboards\r\n  var absPnl = dlg.add('panel', undefined, '移动和调整项目到画板');\r\n      absPnl.orientation = 'row';\r\n      absPnl.margins = cfg.dlgMargins;\r\n\r\n  var allRb = absPnl.add('radiobutton', undefined, '全部空画板');\r\n  var activeRb = absPnl.add('radiobutton', undefined, '活动画板');\r\n  cfg.isAll ? allRb.value = true : activeRb.value = true;\r\n\r\n  var wrapper = dlg.add('group');\r\n      wrapper.alignChildren = ['fill', 'top'];\r\n\r\n  // Resize\r\n  var fitPnl = wrapper.add('panel', undefined, '调整项目大小');\r\n      fitPnl.alignChildren = ['fill', 'top'];\r\n      fitPnl.margins = cfg.dlgMargins;\r\n\r\n  var fitRb = fitPnl.add('radiobutton', undefined, 'Yes');\r\n  var noFitRb = fitPnl.add('radiobutton', undefined, 'No');\r\n  cfg.isFit ? fitRb.value = true : noFitRb.value = true;\r\n\r\n  // Bounds\r\n  var bndsPnl = wrapper.add('panel', undefined, '参数范围');\r\n      bndsPnl.alignChildren = ['fill', 'top'];\r\n      bndsPnl.margins = cfg.dlgMargins;\r\n\r\n  var visRb = bndsPnl.add('radiobutton', undefined, '可见边界');\r\n      visRb.helpTip = '可见边界(包括描边和效果)';\r\n  var geomRb = bndsPnl.add('radiobutton', undefined, '对象边界');\r\n      geomRb.helpTip = '对象边界(不包括描边和效果)';\r\n  cfg.isVisBnds ? visRb.value = true : geomRb.value = true;\r\n\r\n  // Paddings\r\n  var padGrp = dlg.add('group');\r\n      padGrp.alignChildren = ['fill', 'center'];\r\n\r\n  padGrp.add('statictext', undefined, 'Paddings, ' + cfg.units);\r\n  var padInp = padGrp.add('edittext', undefined, cfg.pads);\r\n      padInp.preferredSize.width = 80;\r\n\r\n  var isRename = dlg.add('checkbox', undefined, '将图板重命名为项目');\r\n      isRename.value = cfg.isRename;\r\n\r\n  var btns = dlg.add('group');\r\n      btns.alignChildren = ['fill', 'center'];\r\n  var cancel = btns.add('button', undefined, 'Cancel', {name: 'cancel'});\r\n  var ok = btns.add('button', undefined, 'Ok', {name: 'ok'});\r\n\r\n  var copyright = dlg.add('statictext', undefined, 'Visit Github');\r\n      copyright.justify = 'center';\r\n\r\n  copyright.addEventListener('mousedown', function () {\r\n    openURL('https://github.com/creold/');\r\n  });\r\n\r\n  cancel.onClick = dlg.close;\r\n  ok.onClick = okClick;\r\n\r\n  function okClick() {\r\n    cfg.pads = convertUnits( strToAbsNum(padInp.text, cfg.pads), cfg.units, 'px') / cfg.sf;\r\n    cfg.isAll = allRb.value;\r\n    cfg.isFit = fitRb.value;\r\n    cfg.isVisBnds = visRb.value;\r\n    cfg.isRename = isRename.value;\r\n    process(cfg);\r\n    dlg.close();\r\n  }\r\n\r\n  dlg.center();\r\n  dlg.show();\r\n}\r\n\r\n// Run processing\r\nfunction process(cfg) {\r\n  var doc = app.activeDocument,\r\n      docAbs = doc.artboards,\r\n      abIdx = docAbs.getActiveArtboardIndex(),\r\n      abBnds = docAbs[abIdx].artboardRect,\r\n      docSel = selection,\r\n      item = docSel[0],\r\n      coord = app.coordinateSystem,\r\n      ruler = docAbs[abIdx].rulerOrigin;\r\n\r\n  app.coordinateSystem = CoordinateSystem.ARTBOARDCOORDINATESYSTEM;\r\n\r\n  if (!cfg.isAll) {\r\n    if (cfg.isFit) {\r\n      fitToArtboard(item, abBnds, cfg.isVisBnds, cfg.isScaleStroke, cfg.pads);\r\n    }\r\n    docAbs[abIdx].rulerOrigin = [0, 0];\r\n    centerToArtboard(item, abBnds);\r\n    docAbs[abIdx].rulerOrigin = ruler;\r\n    if (cfg.isRename) {\r\n      renameArtboard(item, docAbs[abIdx]);\r\n    }\r\n  } else {\r\n    var emptyAbs = getEmptyArtboards(doc),\r\n        len = Math.min(emptyAbs.length, docSel.length);\r\n\r\n    for (var i = len - 1; i >= 0; i--) {\r\n      item = docSel[i];\r\n      abIdx = emptyAbs[i];\r\n      abBnds = docAbs[abIdx].artboardRect;\r\n      docAbs.setActiveArtboardIndex(abIdx);\r\n      if (cfg.isFit) {\r\n        fitToArtboard(item, abBnds, cfg.isVisBnds, cfg.isScaleStroke, cfg.pads);\r\n      }\r\n      ruler = docAbs[abIdx].rulerOrigin;\r\n      docAbs[abIdx].rulerOrigin = [0, 0];\r\n      centerToArtboard(item, abBnds);\r\n      docAbs[abIdx].rulerOrigin = ruler;\r\n      if (cfg.isRename) {\r\n        renameArtboard(item, docAbs[abIdx]);\r\n      }\r\n    }\r\n  }\r\n\r\n  app.coordinateSystem = coord;\r\n  selection = docSel;\r\n}\r\n\r\n// Get the ruler units of the active document\r\nfunction getUnits() {\r\n  if (!documents.length) return '';\r\n  var key = activeDocument.rulerUnits.toString().replace('RulerUnits.', '');\r\n  switch (key) {\r\n    case 'Pixels': return 'px';\r\n    case 'Points': return 'pt';\r\n    case 'Picas': return 'pc';\r\n    case 'Inches': return 'in';\r\n    case 'Millimeters': return 'mm';\r\n    case 'Centimeters': return 'cm';\r\n    // Added in CC 2023 v27.1.1\r\n    case 'Meters': return 'm';\r\n    case 'Feet': return 'ft';\r\n    case 'FeetInches': return 'ft';\r\n    case 'Yards': return 'yd';\r\n    // Parse new units in CC 2020-2023 if a document is saved\r\n    case 'Unknown':\r\n      var xmp = activeDocument.XMPString;\r\n      if (/stDim:unit/i.test(xmp)) {\r\n        var units = /<stDim:unit>(.*?)<\\/stDim:unit>/g.exec(xmp)[1];\r\n        if (units == 'Meters') return 'm';\r\n        if (units == 'Feet') return 'ft';\r\n        if (units == 'FeetInches') return 'ft';\r\n        if (units == 'Yards') return 'yd';\r\n        return 'px';\r\n      }\r\n      break;\r\n    default: return 'px';\r\n  }\r\n}\r\n\r\n// Units conversion\r\nfunction convertUnits(value, currUnits, newUnits) {\r\n  return UnitValue(value, currUnits).as(newUnits);\r\n}\r\n\r\n// Convert string to absolute number\r\nfunction strToAbsNum(str, def) {\r\n  if (arguments.length == 1 || def == undefined) def = 1;\r\n  str = str.replace(/,/g, '.').replace(/[^\\d.]/g, '');\r\n  str = str.split('.');\r\n  str = str[0] ? str[0] + '.' + str.slice(1).join('') : '';\r\n  if (isNaN(str) || !str.length) return parseFloat(def);\r\n  else return parseFloat(str);\r\n}\r\n\r\n// Fit the item to the size of the artboard\r\nfunction fitToArtboard(item, abBnds, isVisBnds, isStroke, pads) {\r\n  var type = isVisBnds ? 'visibleBounds' : 'geometricBounds';\r\n  var bnds = [];\r\n\r\n  if (isType(item, 'group|text')) {\r\n    var dup = item.duplicate();\r\n    app.executeMenuCommand('deselectall');\r\n    selection = dup;\r\n    outlineText(dup.pageItems ? dup.pageItems : [dup]);\r\n    dup = selection[0];\r\n    bnds = getVisibleBounds(dup, type);\r\n    app.executeMenuCommand('deselectall');\r\n    dup.remove();\r\n  } else {\r\n    bnds = getVisibleBounds(item, type);\r\n  }\r\n\r\n  var itemW = Math.abs(bnds[2] - bnds[0]),\r\n      itemH = Math.abs(bnds[1] - bnds[3]),\r\n      abWidth = Math.abs(abBnds[2] - abBnds[0]),\r\n      abHeight = Math.abs(abBnds[1] - abBnds[3]);\r\n  \r\n  var ratioW = 100 * (abWidth - 2 * pads) / itemW,\r\n      ratioH = 100 * (abHeight - 2 * pads) / itemH,\r\n      ratio = Math.min(ratioW, ratioH);\r\n\r\n  // X, Y, Positions, FillPatterns, FillGradients, StrokePattern, LineWidths\r\n  item.resize(ratio, ratio, true, true, true, true, (isVisBnds || isStroke) ? ratio : 100);\r\n}\r\n\r\n// Create outlines\r\nfunction outlineText(coll) {\r\n  for (var i = coll.length - 1; i >= 0; i--) {\r\n    var item = coll[i];\r\n    if (isType(item, 'text')) {\r\n      item.createOutline();\r\n    } else if (isType(item, 'group')) {\r\n      outlineText(item.pageItems);\r\n    }\r\n  }\r\n}\r\n\r\n// Get the actual \"visible\" bounds\r\n// https://github.com/joshbduncan/adobe-scripts/blob/main/DrawVisibleBounds.jsx\r\nfunction getVisibleBounds(obj, type) {\r\n  if (arguments.length == 1 || type == undefined) type = 'geometricBounds';\r\n  var doc = app.activeDocument;\r\n  var bnds, clippedItem, tmpItem, tmpLayer;\r\n  var curItem;\r\n  if (obj.typename === 'GroupItem') {\r\n    if (obj.clipped) {\r\n      // Check all sub objects to find the clipping path\r\n      for (var i = 0; i < obj.pageItems.length; i++) {\r\n        curItem = obj.pageItems[i];\r\n        if (curItem.clipping) {\r\n          clippedItem = curItem;\r\n          break;\r\n        } else if (curItem.typename === 'CompoundPathItem') {\r\n          if (!curItem.pathItems.length) {\r\n            // Catch compound path items with no pathItems\r\n            // via William Dowling @ github.com/wdjsdev\r\n            tmpLayer = doc.layers.add();\r\n            tmpItem = curItem.duplicate(tmpLayer);\r\n            app.executeMenuCommand('deselectall');\r\n            tmpItem.selected = true;\r\n            app.executeMenuCommand('noCompoundPath');\r\n            tmpLayer.hasSelectedArtwork = true;\r\n            app.executeMenuCommand('group');\r\n            clippedItem = selection[0];\r\n            break;\r\n          } else if (curItem.pathItems[0].clipping) {\r\n            clippedItem = curItem;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if (!clippedItem) clippedItem = obj.pageItems[0];\r\n      bnds = clippedItem[type];\r\n      if (tmpLayer) {\r\n        tmpLayer.remove();\r\n        tmpLayer = undefined;\r\n      }\r\n    } else {\r\n      // If the object is not clipped\r\n      var subObjBnds;\r\n      var allBoundPoints = [[], [], [], []];\r\n      // Get the bounds of every object in the group\r\n      for (var i = 0; i < obj.pageItems.length; i++) {\r\n        curItem = obj.pageItems[i];\r\n        subObjBnds = getVisibleBounds(curItem, type);\r\n        allBoundPoints[0].push(subObjBnds[0]);\r\n        allBoundPoints[1].push(subObjBnds[1]);\r\n        allBoundPoints[2].push(subObjBnds[2]);\r\n        allBoundPoints[3].push(subObjBnds[3]);\r\n      }\r\n      // Determine the groups bounds from it sub object bound points\r\n      bnds = [\r\n        Math.min.apply(Math, allBoundPoints[0]),\r\n        Math.max.apply(Math, allBoundPoints[1]),\r\n        Math.max.apply(Math, allBoundPoints[2]),\r\n        Math.min.apply(Math, allBoundPoints[3]),\r\n      ];\r\n    }\r\n  } else {\r\n    bnds = obj[type];\r\n  }\r\n  return bnds;\r\n}\r\n\r\n// Place the item in the center of the artboard\r\nfunction centerToArtboard(item, abBnds) {\r\n  var bnds = item.geometricBounds,\r\n      itemSize = {\r\n        left: bnds[0],\r\n        top: bnds[1],\r\n        inLeft: bnds[0],\r\n        inTop: bnds[1],\r\n        inRight: bnds[2],\r\n        inBottom: bnds[3],\r\n        h: 0,\r\n        w: 0\r\n      };\r\n\r\n  if (isType(item, 'group') && item.clipped) {\r\n    bnds = getVisibleBounds(item, 'geometricBounds');\r\n    itemSize.inLeft = bnds[0];\r\n    itemSize.inTop = bnds[1];\r\n    itemSize.inRight = bnds[2];\r\n    itemSize.inBottom = bnds[3];\r\n  } else if (isType(item, 'group|text')) {\r\n    var dup = item.duplicate();\r\n    app.executeMenuCommand('deselectall');\r\n    selection = dup;\r\n    outlineText(dup.pageItems ? dup.pageItems : [dup]);\r\n    dup = selection[0];\r\n    bnds = getVisibleBounds(dup, 'geometricBounds');\r\n    app.executeMenuCommand('deselectall');\r\n    itemSize.inLeft = bnds[0];\r\n    itemSize.inTop = bnds[1];\r\n    itemSize.inRight = bnds[2];\r\n    itemSize.inBottom = bnds[3];\r\n    dup.remove();\r\n  }\r\n\r\n  abWidth = Math.abs(abBnds[2] - abBnds[0]);\r\n  abHeight = Math.abs(abBnds[1] - abBnds[3]);\r\n  itemSize.h = Math.abs(itemSize.inTop - itemSize.inBottom);\r\n  itemSize.w = Math.abs(itemSize.inRight - itemSize.inLeft);\r\n\r\n  var left = itemSize.left - itemSize.inLeft,\r\n      top = itemSize.top - itemSize.inTop,\r\n      centerX = left + (abWidth - itemSize.w) / 2,\r\n      centerY = top + (itemSize.h - abHeight) / 2;\r\n\r\n  item.position = [centerX, centerY];\r\n}\r\n\r\n// Rename the artboard as an item\r\nfunction renameArtboard(item, ab) {\r\n  var name = '';\r\n\r\n  if (isType(item, 'text') && isEmpty(item.name) && !isEmpty(item.contents)) {\r\n    name = item.contents.slice(0, 100);\r\n  } else if (isType(item, 'symbol') && isEmpty(item.name)) {\r\n    name = item.symbol.name;\r\n  } else {\r\n    name = item.name;\r\n  }\r\n\r\n  if (!isEmpty(name) && ab.name !== name) ab.name = name;\r\n}\r\n\r\n// Get empty artboards of the document\r\nfunction getEmptyArtboards(doc) {\r\n  var out = [];\r\n  for (var i = 0, len = doc.artboards.length; i < len; i++) {\r\n    selection = null;\r\n    doc.artboards.setActiveArtboardIndex(i);\r\n    doc.selectObjectsOnActiveArtboard();\r\n    if (!selection.length) out.push(i);\r\n  }\r\n  return out;\r\n}\r\n\r\n// Check an empty string\r\nfunction isEmpty(str) {\r\n  return str.replace(/\\s/g, '').length == 0;\r\n}\r\n\r\n// Check the item typename by short name\r\nfunction isType(item, type) {\r\n  var regexp = new RegExp(type, 'i');\r\n  return regexp.test(item.typename);\r\n}\r\n\r\n// Open link in browser\r\nfunction openURL(url) {\r\n  var html = new File(Folder.temp.absoluteURI + '/aisLink.html');\r\n  html.open('w');\r\n  var htmlBody = '<html><head><META HTTP-EQUIV=Refresh CONTENT=\"0; URL=' + url + '\"></head><body> <p></body></html>';\r\n  html.write(htmlBody);\r\n  html.close();\r\n  html.execute();\r\n}\r\n\r\ntry {\r\n  main();\r\n} catch (e) {}"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "所选到画板",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 15"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Illustrator.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "/*\r\n  FitArtboardsToArtwork.jsx for Adobe Illustrator\r\n  Description: Resize each artboard by editable artwork size with paddings\r\n  Date: December, 2022\r\n  Modification date: September, 2023\r\n  Author: Sergey Osokin, email: hi@sergosokin.ru\r\n\r\n  Installation: https://github.com/creold/illustrator-scripts#how-to-run-scripts\r\n\r\n  Release notes:\r\n  0.1 Initial version\r\n  0.1.1 Added size correction in large canvas mode\r\n  0.1.2 Added new units API for CC 2023 v27.1.1\r\n  0.1.3 Fixed fitting by text object bounds\r\n\r\n  Donate (optional):\r\n  If you find this script helpful, you can buy me a coffee\r\n  - via Buymeacoffee: https://www.buymeacoffee.com/osokin\r\n  - via Donatty https://donatty.com/sergosokin\r\n  - via DonatePay https://new.donatepay.ru/en/@osokin\r\n  - via YooMoney https://yoomoney.ru/to/410011149615582\r\n\r\n  NOTICE:\r\n  Tested with Adobe Illustrator CC 2018-2023 (Mac), 2023 (Win).\r\n  This script is provided \"as is\" without warranty of any kind.\r\n  Free to use, not for sale\r\n\r\n  Released under the MIT license\r\n  http://opensource.org/licenses/mit-license.php\r\n\r\n  Check my other scripts: https://github.com/creold\r\n*/\r\n\r\n//@target illustrator\r\napp.preferences.setBooleanPreference('ShowExternalJSXWarning', false); // Fix drag and drop a .jsx file\r\n\r\nfunction main() {\r\nvar SCRIPT = {\r\n      name: '画板适合对象',\r\n      version: 'v.0.1.3'\r\n    },\r\n    CFG = {\r\n      aiVers: parseFloat(app.version),\r\n      units: getUnits(), // Active document units\r\n      pads: 10,\r\n      isEqual: true,\r\n      dlgOpacity: 1 // UI window opacity. Range 0-1\r\n    };\r\n\r\n  if (!documents.length) {\r\n    alert('Error\\nOpen a document and try again');\r\n    return;\r\n  }\r\n\r\n  if (CFG.aiVers < 16) {\r\n    alert('Error\\nSorry, script only works in Illustrator CS6 and later');\r\n    return;\r\n  }\r\n\r\n  // Scale factor for Large Canvas mode\r\n  CFG.sf = activeDocument.scaleFactor ? activeDocument.scaleFactor : 1;\r\n\r\n  // Dialog\r\n  var win = new Window('dialog', SCRIPT.name + ' ' + SCRIPT.version);\r\n      win.alignChildren = ['fill', 'fill'];\r\n      win.opacity = CFG.dlgOpacity;\r\n\r\n  // Paddings\r\n  var padPnl = win.add('panel', undefined, '单位, ' + CFG.units);\r\n      padPnl.alignChildren = ['left', 'bottom'];\r\n      padPnl.margins = 10;\r\n\r\n  // Wrapper\r\n  var wrapper = padPnl.add('group');\r\n      wrapper.alignChildren = ['left', 'bottom'];\r\n      wrapper.spacing = 10;\r\n\r\n  // Top\r\n  var top = wrapper.add('group');\r\n      top.preferredSize.width = 50;\r\n      top.orientation = 'column';\r\n      top.alignChildren = ['fill', 'center'];\r\n      top.spacing = 5;\r\n\r\n  top.add('statictext', undefined, '顶部');\r\n  var topInp = top.add('edittext', undefined, CFG.pads);\r\n\r\n  // Bottom\r\n  var bottom = wrapper.add('group');\r\n      bottom.preferredSize.width = 50;\r\n      bottom.orientation = 'column';\r\n      bottom.alignChildren = ['fill', 'center'];\r\n      bottom.spacing = 5;\r\n\r\n  bottom.add('statictext', undefined, '底部');\r\n  var bottomInp = bottom.add('edittext', undefined, CFG.pads);\r\n\r\n  // Left\r\n  var left = wrapper.add('group');\r\n      left.preferredSize.width = 50;\r\n      left.orientation = 'column';\r\n      left.alignChildren = ['fill', 'center'];\r\n      left.spacing = 5;\r\n\r\n  left.add('statictext', undefined, '左');\r\n  var leftInp = left.add('edittext', undefined, CFG.pads);\r\n\r\n  // Right\r\n  var right = wrapper.add('group');\r\n      right.preferredSize.width = 50;\r\n      right.orientation = 'column';\r\n      right.alignChildren = ['fill', 'center'];\r\n      right.spacing = 5;\r\n\r\n  right.add('statictext', undefined, '右');\r\n  var rightInp = right.add('edittext', undefined, CFG.pads);\r\n\r\n  var isEqual = wrapper.add('checkbox');\r\n      isEqual.value = CFG.isEqual;\r\n\r\n  bottomInp.enabled = !isEqual.value;\r\n  leftInp.enabled = !isEqual.value;\r\n  rightInp.enabled = !isEqual.value;\r\n\r\n  // Artboards\r\n  var absPnl = win.add('panel', undefined, 'Source');\r\n      absPnl.orientation = 'row';\r\n      absPnl.alignChildren = ['fill', 'top'];\r\n      absPnl.margins = [10, 15, 10, 10];\r\n\r\n  var activeRb = absPnl.add('radiobutton', undefined, '活动画板');\r\n      activeRb.value = true;\r\n  var allRb = absPnl.add('radiobutton', undefined, '全部画板');\r\n\r\n  var btns = win.add('group');\r\n      btns.alignChildren = ['center', 'top'];\r\n  var cancel = btns.add('button', undefined, 'Cancel', {name: 'cancel'});\r\n  var ok = btns.add('button', undefined, 'Ok', {name: 'ok'});\r\n\r\n  var copyright = win.add('statictext', undefined, '\\u00A9 Sergey Osokin. Visit Github');\r\n      copyright.justify = 'center';\r\n\r\n  copyright.addEventListener('mousedown', function () {\r\n    openURL('https://github.com/creold/');\r\n  });\r\n\r\n  isEqual.onClick = function () {\r\n    bottomInp.enabled = !this.value;\r\n    leftInp.enabled = !this.value;\r\n    rightInp.enabled = !this.value;\r\n  }\r\n\r\n  cancel.onClick = win.close;\r\n  ok.onClick = okClick;\r\n\r\n  function okClick() {\r\n    var doc = app.activeDocument,\r\n        pads = {};\r\n\r\n    pads.top = convertUnits( strToAbsNum(topInp.text, CFG.pads), CFG.units, 'px' ) / CFG.sf;\r\n    pads.bottom = isEqual.value ? pads.top : convertUnits( strToAbsNum(bottomInp.text, CFG.pads), CFG.units, 'px' ) / CFG.sf;\r\n    pads.left = isEqual.value ? pads.top : convertUnits( strToAbsNum(leftInp.text, CFG.pads), CFG.units, 'px' ) / CFG.sf;\r\n    pads.right = isEqual.value ? pads.top : convertUnits( strToAbsNum(rightInp.text, CFG.pads), CFG.units, 'px' ) / CFG.sf;\r\n\r\n    selection = null;\r\n    redraw();\r\n\r\n    if (allRb.value) {\r\n      for (var i = 0, len = doc.artboards.length; i < len; i++) {\r\n        doc.artboards.setActiveArtboardIndex(i);\r\n        resizeArtboard(doc.artboards[i], i, pads);\r\n      }\r\n    } else {\r\n      var idx = doc.artboards.getActiveArtboardIndex();\r\n      resizeArtboard(doc.artboards[idx], idx, pads);\r\n    }\r\n\r\n    win.close();\r\n  }\r\n\r\n  win.center();\r\n  win.show();\r\n}\r\n\r\n// Add paddings to artboard\r\nfunction resizeArtboard(ab, idx, pads) {\r\n  activeDocument.selectObjectsOnActiveArtboard();\r\n  if (!selection.length) return;\r\n\r\n  if (hasTextFrame(selection)) {\r\n    var abSel = selection;\r\n    var dupArr = getDuplicates(selection);\r\n    selection = dupArr;\r\n    app.executeMenuCommand('Live Outline Object');\r\n    app.executeMenuCommand('expandStyle');\r\n    dupArr = selection;\r\n    activeDocument.fitArtboardToSelectedArt(idx);\r\n    selection = abSel;\r\n    rmvItems(dupArr);\r\n  } else {\r\n    activeDocument.fitArtboardToSelectedArt(idx);\r\n  }\r\n\r\n  selection = null;\r\n\r\n  var rect = ab.artboardRect,\r\n      left = rect[0],\r\n      top = rect[1],\r\n      right = rect[2],\r\n      bottom = rect[3];\r\n\r\n  ab.artboardRect = [left - pads.left, top + pads.top, right + pads.right, bottom - pads.bottom];\r\n}\r\n\r\n// Check editable text frame in array\r\nfunction hasTextFrame(coll) {\r\n  for (var i = 0; i < coll.length; i++) {\r\n    var item = coll[i];\r\n    if (item.typename === 'TextFrame') {\r\n      return true;\r\n    } else if (item.pageItems && item.pageItems.length) {\r\n      if (hasTextFrame(item.pageItems)) return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n// Duplicate items\r\nfunction getDuplicates(coll) {\r\n  var arr = [];\r\n  for (var i = 0, len = coll.length; i < len; i++) {\r\n    arr.push(coll[i].duplicate());\r\n  }\r\n  return arr;\r\n}\r\n\r\n// Remove items\r\nfunction rmvItems(coll) {\r\n  for (var i = 0, len = coll.length; i < len; i++) {\r\n    coll[i].remove();\r\n  }\r\n}\r\n\r\n// Get active document ruler units\r\nfunction getUnits() {\r\n  if (!documents.length) return '';\r\n  var key = activeDocument.rulerUnits.toString().replace('RulerUnits.', '');\r\n  switch (key) {\r\n    case 'Pixels': return 'px';\r\n    case 'Points': return 'pt';\r\n    case 'Picas': return 'pc';\r\n    case 'Inches': return 'in';\r\n    case 'Millimeters': return 'mm';\r\n    case 'Centimeters': return 'cm';\r\n    // Added in CC 2023 v27.1.1\r\n    case 'Meters': return 'm';\r\n    case 'Feet': return 'ft';\r\n    case 'FeetInches': return 'ft';\r\n    case 'Yards': return 'yd';\r\n    // Parse new units in CC 2020-2023 if a document is saved\r\n    case 'Unknown':\r\n      var xmp = activeDocument.XMPString;\r\n      if (/stDim:unit/i.test(xmp)) {\r\n        var units = /<stDim:unit>(.*?)<\\/stDim:unit>/g.exec(xmp)[1];\r\n        if (units == 'Meters') return 'm';\r\n        if (units == 'Feet') return 'ft';\r\n        if (units == 'FeetInches') return 'ft';\r\n        if (units == 'Yards') return 'yd';\r\n        return 'px';\r\n      }\r\n      break;\r\n    default: return 'px';\r\n  }\r\n}\r\n\r\n// Convert units of measurement\r\nfunction convertUnits(value, currUnits, newUnits) {\r\n  return UnitValue(value, currUnits).as(newUnits);\r\n}\r\n\r\n// Convert string to absolute number\r\nfunction strToAbsNum(str, def) {\r\n  if (arguments.length == 1 || def == undefined) def = 1;\r\n  str = str.replace(/,/g, '.').replace(/[^\\d.]/g, '');\r\n  str = str.split('.');\r\n  str = str[0] ? str[0] + '.' + str.slice(1).join('') : '';\r\n  if (isNaN(str) || !str.length) return parseFloat(def);\r\n  else return parseFloat(str);\r\n}\r\n\r\n// Open link in browser\r\nfunction openURL(url) {\r\n  var html = new File(Folder.temp.absoluteURI + '/aisLink.html');\r\n  html.open('w');\r\n  var htmlBody = '<html><head><META HTTP-EQUIV=Refresh CONTENT=\"0; URL=' + url + '\"></head><body> <p></body></html>';\r\n  html.write(htmlBody);\r\n  html.close();\r\n  html.execute();\r\n}\r\n\r\ntry {\r\n  main();\r\n} catch (e) {}"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "画板到对象",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 16"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Illustrator.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "if (selection.length) selection.setMaker({\r\n    size: 200,\r\n    rows: 4,\r\n    columns: 4,\r\n    gutter: 100,\r\n    randomOrder: false,\r\n    ungroupSets: true,\r\n    setOnArtboard: {\r\n        bleed: 100,\r\n        enabled: true,\r\n        onlyAlign: false\r\n    }\r\n});"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "对象到画板",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 17"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Illustrator.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "/*\r\n  ShowObjectNames.jsx for Adobe Illustrator\r\n  Description: Shows names of vector objects, linked or embedded raster images\r\n  Date: June, 2023\r\n  Modicitaion Date: February, 2025\r\n  Author: Sergey Osokin, email: hi@sergosokin.ru\r\n\r\n  Installation: https://github.com/creold/illustrator-scripts#how-to-run-scripts\r\n\r\n  Release notes:\r\n  0.3 Added more positions, text justification, options to rotate text\r\n  0.2 Added UI with options, support any objects\r\n  0.1 Initial version\r\n\r\n  Donate (optional):\r\n  If you find this script helpful, you can buy me a coffee\r\n  - via Buymeacoffee: https://www.buymeacoffee.com/aiscripts\r\n  - via Donatty https://donatty.com/sergosokin\r\n  - via DonatePay https://new.donatepay.ru/en/@osokin\r\n  - via YooMoney https://yoomoney.ru/to/410011149615582\r\n\r\n  NOTICE:\r\n  Tested with Adobe Illustrator CC 2019-2025 (Mac/Win).\r\n  This script is provided \"as is\" without warranty of any kind.\r\n  Free to use, not for sale\r\n\r\n  Released under the MIT license\r\n  http://opensource.org/licenses/mit-license.php\r\n\r\n  Check my other scripts: https://github.com/creold\r\n*/\r\n\r\n//@target illustrator\r\napp.preferences.setBooleanPreference('ShowExternalJSXWarning', false);// Fix drag and drop a .jsx file\r\n\r\nfunction main() {\r\n  var SCRIPT = {\r\n    name: '显示对象名称',\r\n    version: 'v0.3'\r\n  };\r\n  \r\n  var CFG = {\r\n    fontSize: 14, // Default font size, pt\r\n    name: 'Object_Names',\r\n    units: getUnits(),\r\n    isMac: /mac/i.test($.os),\r\n    aiVers: parseFloat(app.version),\r\n    is2020: parseInt(app.version) == 24, // Current AI is CC 2020\r\n    uiMargins: [10, 15, 10, 7],\r\n    uiOpacity: .97 // UI window opacity\r\n  };\r\n\r\n  var SETTINGS = {\r\n    name: SCRIPT.name.replace(/\\s/g, '_') + '_data.json',\r\n    folder: Folder.myDocuments + '/Adobe Scripts/'\r\n  };\r\n\r\n  if (!isCorrectEnv('selection:1')) return;\r\n\r\n  var doc = app.activeDocument;\r\n  // Scale factor for Large Canvas mode\r\n  CFG.sf = doc.scaleFactor ? doc.scaleFactor : 1;\r\n\r\n  var items = get(app.selection);\r\n  var itemsData = getItemsData(items);\r\n  var isUndo = false;\r\n\r\n  // DIALOG\r\n  var win = new Window('dialog', SCRIPT.name + ' ' + SCRIPT.version);\r\n      win.orientation = 'column';\r\n      win.alignChildren = ['fill', 'top'];\r\n      win.opacity = CFG.uiOpacity;\r\n\r\n  // OFFSET\r\n  var offsetPnl = win.add('panel', undefined, '偏移距离');\r\n      offsetPnl.orientation = 'row';\r\n      offsetPnl.alignChildren = ['fill', 'center'];\r\n      offsetPnl.spacing = 15;\r\n      offsetPnl.margins = CFG.uiMargins;\r\n\r\n  // OFFSET X\r\n  var xGrp = offsetPnl.add('group');\r\n\r\n  xGrp.add('statictext', undefined, 'X:');\r\n  var xInp = xGrp.add('edittext', undefined, 0);\r\n      xInp.preferredSize.width = 55;\r\n\r\n  xGrp.add('statictext', undefined, CFG.units);\r\n\r\n  // OFFSET Y\r\n  var yGrp = offsetPnl.add('group');\r\n\r\n  yGrp.add('statictext', undefined, 'Y:');\r\n  var yInp = yGrp.add('edittext', undefined, 0);\r\n      yInp.preferredSize.width = 55;\r\n\r\n  yGrp.add('statictext', undefined, CFG.units);\r\n\r\n  // POSITION\r\n  var posPnl = win.add('panel', undefined, '位置');\r\n      posPnl.alignChildren = ['fill', 'top'];\r\n      posPnl.spacing = 7;\r\n      posPnl.margins = CFG.uiMargins;\r\n\r\n  var posGrp = posPnl.add('group');\r\n  var isOutPos = posGrp.add('radiobutton', undefined, '对象外部');\r\n      isOutPos.value = true;\r\n  var isInPos = posGrp.add('radiobutton', undefined, '对象内部');\r\n\r\n  // List of reference points around the object\r\n  var outPosList = [\r\n    'Left Top',\r\n    'Left Center',\r\n    'Left Bottom',\r\n    '-',\r\n    'Top Left',\r\n    'Top Center',\r\n    'Top Right',\r\n    '-',\r\n    'Right Top',\r\n    'Right Center',\r\n    'Right Bottom',\r\n    '-',\r\n    'Bottom Left',\r\n    'Bottom Center',\r\n    'Bottom Right'\r\n  ];\r\n\r\n  // List of reference points inside the object\r\n  var inPosList = [\r\n    'Left Top',\r\n    'Left Center',\r\n    'Left Bottom',\r\n    '-',\r\n    'Center Top',\r\n    'Center Center',\r\n    'Center Bottom',\r\n    '-',\r\n    'Right Top',\r\n    'Right Center',\r\n    'Right Bottom',\r\n  ];\r\n\r\n  var posDdl = posPnl.add('dropdownlist', undefined, outPosList);\r\n      posDdl.selection = 0;\r\n      posDdl.active = true;\r\n\r\n  // ANGLE\r\n  var angPnl = win.add('panel', undefined, '旋转');\r\n      angPnl.orientation = 'row';\r\n      angPnl.alignChildren = ['fill', 'center'];\r\n      angPnl.spacing = 7;\r\n      angPnl.margins = CFG.uiMargins;\r\n\r\n  angPnl.add('statictext', undefined, '角度:');\r\n  var angleDdl = angPnl.add('dropdownlist', undefined, ['0°', '顺时针90°', '逆时针90°', '180°']);\r\n      angleDdl.selection = 0;\r\n\r\n  // WRAPPER\r\n  var wrapper = win.add('group');\r\n      wrapper.orientation = 'row';\r\n      wrapper.alignChildren = ['fill', 'top'];\r\n\r\n  // JUSTIFICATION\r\n  var alignPnl = wrapper.add('panel', undefined, '对齐方式');\r\n      alignPnl.alignChildren = ['fill', 'top'];\r\n      alignPnl.spacing = 7;\r\n      alignPnl.margins = CFG.uiMargins;\r\n\r\n  var isAlignL = alignPnl.add('radiobutton', undefined, '左对齐');\r\n  var isAlignC = alignPnl.add('radiobutton', undefined, '居中');\r\n      isAlignC.value = true;\r\n  var isAlignR = alignPnl.add('radiobutton', undefined, '右对齐');\r\n\r\n  // LAYER\r\n  var layPnl = wrapper.add('panel', undefined, '名称移至');\r\n      layPnl.alignChildren = ['fill', 'top'];\r\n      layPnl.spacing = 7;\r\n      layPnl.margins = CFG.uiMargins;\r\n\r\n  var isCurrLay = layPnl.add('radiobutton', undefined, '不移动');\r\n      isCurrLay.value = true;\r\n  var isNewGrp = layPnl.add('radiobutton', undefined, '对象组');\r\n  var isNewLay = layPnl.add('radiobutton', undefined, '新图层');\r\n\r\n  // IMAGE OPTIONS\r\n  var imgPnl = win.add('panel', undefined, '栅格图像选项');\r\n      imgPnl.orientation = 'row';\r\n      imgPnl.alignChildren = ['fill', 'top'];\r\n      imgPnl.margins = CFG.uiMargins;\r\n\r\n  var isAddExtension = imgPnl.add(\"checkbox\", undefined, '添加扩展名');\r\n  var isRenameImage = imgPnl.add(\"checkbox\", undefined, '在图层中重命名');\r\n\r\n  var btns = win.add('group');\r\n      btns.alignChildren = ['left', 'center'];\r\n\r\n  var isPreview = btns.add('checkbox', undefined, '预览');\r\n      isPreview.value = false;\r\n\r\n  // CC 2020 v24.3 crashes when undoing text frame changes\r\n  if (CFG.is2020) {\r\n    isPreview.enabled = false;\r\n    isPreview.helpTip = \"CC 2020版本因关键性错误\\n预览功能已禁用\";\r\n  }\r\n\r\n  var cancel, ok;\r\n  if (CFG.isMac) {\r\n    cancel = btns.add('button', undefined, '取消', { name: 'cancel' });\r\n    ok = btns.add('button', undefined, '确定', { name: 'ok' });\r\n  } else {\r\n    ok = btns.add('button', undefined, '确定', { name: 'ok' });\r\n    cancel = btns.add('button', undefined, '取消', { name: 'cancel' });\r\n  }\r\n\r\n  cancel.helpTip = '按Esc关闭';\r\n  ok.helpTip = '按Enter运行';\r\n\r\n  var copyright = win.add('statictext', undefined, '© Sergey Osokin. 访问Github');\r\n      copyright.justify  = 'center';\r\n\r\n  // EVENTS\r\n  loadSettings(SETTINGS);\r\n\r\n  xInp.onChange = yInp.onChange = preview;\r\n\r\n  shiftInputNumValue(xInp);\r\n  shiftInputNumValue(yInp);\r\n\r\n  if (isPreview.value) preview();\r\n\r\n  isOutPos.onClick = function () {\r\n    updateDropdown(posDdl, outPosList);\r\n  };\r\n\r\n  isInPos.onClick = function () {\r\n    updateDropdown(posDdl, inPosList);\r\n  };\r\n\r\n  posDdl.onChange = angleDdl.onChange = function () {\r\n    this.active = true;\r\n\r\n    // Adobe Illustrator crash protection\r\n    if (this.children.length > 1) {\r\n      // Protect mouse selection of empty separator in dropdown\r\n      if (this.selection === null) {\r\n        this.selection = 0;\r\n      }\r\n      preview();\r\n    }\r\n  }\r\n\r\n  isAlignL.onClick = isAlignC.onClick = isAlignR.onClick = preview;\r\n  isAddExtension.onClick = preview;\r\n  isPreview.onClick = preview;\r\n\r\n  cancel.onClick = win.close;\r\n  ok.onClick = okClick;\r\n\r\n  copyright.addEventListener('mousedown', function () {\r\n    openURL('https://github.com/creold/');\r\n  });\r\n\r\n  win.onClose = function () {\r\n    try {\r\n      if (isUndo) app.undo();\r\n    } catch (err) {}\r\n  }\r\n\r\n  /**\r\n   * Update the dropdown list with given items\r\n   * @param {Object} dropdown - The dropdown UI element to update\r\n   * @param {Array} list - The list of items to populate the dropdown with\r\n   */\r\n  function updateDropdown(dropdown, list) {\r\n    dropdown.removeAll();\r\n    for (var i = 0, len = list.length; i < len; i++) {\r\n      if (list[i] === '-') {\r\n        dropdown.add('separator', undefined, i);\r\n      } else {\r\n        dropdown.add('item', list[i].toString());\r\n      }\r\n    }\r\n    dropdown.selection = 0;\r\n  }\r\n\r\n  /**\r\n   * Handle the preview functionality with undo support\r\n   */\r\n  function preview() {\r\n    try {\r\n      if (isPreview.value) {\r\n        if (isUndo) app.undo();\r\n        else isUndo = true;\r\n        process();\r\n        app.redraw();\r\n      } else if (isUndo) {\r\n        app.undo();\r\n        app.redraw();\r\n        isUndo = false;\r\n      }\r\n    } catch (err) {}\r\n  }\r\n\r\n  /**\r\n   * Process selected items to create name labels based on specified parameters\r\n   */\r\n  function process() {\r\n    var angleMap = { 0: 0, 1: -90, 2: 90, 3: 180 };\r\n\r\n    var labelParams = {\r\n      position: (posDdl.selection === null || posDdl.selection.text === '-') ? 'TOP LEFT' : posDdl.selection.text.toUpperCase(),\r\n      isOutside: isOutPos.value,\r\n      offsetX: convertUnits( strToNum(xInp.text, 0), CFG.units, 'px' ) / CFG.sf,\r\n      offsetY: convertUnits( strToNum(yInp.text, 0), CFG.units, 'px' ) / CFG.sf,\r\n      angle: angleMap[angleDdl.selection.index] || 0,\r\n      justification: isAlignL.value ? 'LEFT' : (isAlignR.value ? 'RIGHT' : 'CENTER'),\r\n      isExtension: isAddExtension.value,\r\n      isRename: isRenameImage.value,\r\n      fontSize: CFG.fontSize\r\n    };\r\n\r\n    var labels = []; // Array to store created text frames\r\n\r\n    // Process each selected item\r\n    for (var i = 0, len = items.length; i < len; i++) {\r\n      var itemLabel = addNameLabel(items[i], itemsData[i], labelParams);\r\n      labels.push(itemLabel);\r\n    }\r\n\r\n    return labels;\r\n  }\r\n\r\n  function okClick() {\r\n    if (isPreview.value && isUndo) {\r\n      app.undo();\r\n    }\r\n    isUndo = false;\r\n\r\n    saveSettings(SETTINGS);\r\n\r\n    var labels = process();\r\n\r\n    if (isNewLay.value) { // Move text frames into the layer\r\n      var lay; // Get or create the layer\r\n      try {\r\n        lay = doc.layers.getByName(CFG.name);\r\n        lay.visible = true;\r\n        lay.locked = false;\r\n      } catch (err) {\r\n        lay = doc.layers.add();\r\n        lay.name = CFG.name;\r\n      }\r\n\r\n      for (var i = 0, len = labels.length; i < len; i++) {\r\n        labels[i].move(lay, ElementPlacement.PLACEATEND);\r\n      }\r\n    } else if (isNewGrp.value) { // Group text frames with objects\r\n      for (var j = 0, len = labels.length; j < len; j++) {\r\n        var group = labels[j].layer.groupItems.add();\r\n        group.name = labels[j].contents;\r\n        group.move(items[j], ElementPlacement.PLACEBEFORE);\r\n        labels[j].move(group, ElementPlacement.PLACEATEND);\r\n        items[j].move(group, ElementPlacement.PLACEATEND);\r\n      }\r\n    }\r\n\r\n    // Update the selection with created text frames\r\n    app.selection = labels;\r\n    win.close();\r\n  }\r\n\r\n  /**\r\n  * Handle keyboard input to shift numerical values\r\n  * @param {Object} item - The input element to which the event listener will be attached\r\n  * @returns {void}\r\n  */\r\n  function shiftInputNumValue(item) {\r\n    item.addEventListener('keydown', function (kd) {\r\n      var step = ScriptUI.environment.keyboardState['shiftKey'] ? 10 : 1;\r\n      var num = Number(this.text);\r\n      if (kd.keyName == 'Down' || kd.keyName == 'LeftBracket') {\r\n        this.text = num - step;\r\n        kd.preventDefault();\r\n        preview();\r\n      }\r\n      if (kd.keyName == 'Up' || kd.keyName == 'RightBracket') {\r\n        this.text = num + step;\r\n        kd.preventDefault();\r\n        preview();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Save UI options to a file\r\n   * @param {object} prefs - Object containing preferences\r\n   */\r\n  function saveSettings(prefs) {\r\n    if (!Folder(prefs.folder).exists) {\r\n      Folder(prefs.folder).create();\r\n    }\r\n\r\n    var f = new File(prefs.folder + prefs.name);\r\n    f.encoding = 'UTF-8';\r\n    f.open('w');\r\n\r\n    var pref = {};\r\n    pref.offsetX = xInp.text;\r\n    pref.offsetY = yInp.text;\r\n    pref.direction = isOutPos.value ? 0 : 1;\r\n    pref.pos = posDdl.selection.index;\r\n    pref.angle = angleDdl.selection.index;\r\n    pref.justification = isAlignL.value ? 0 : (isAlignC.value ? 1 : 2);\r\n    pref.container = isCurrLay.value ? 0 : (isNewGrp.value ? 1 : 2);\r\n    pref.extension = isAddExtension.value;\r\n    pref.rename = isRenameImage.value;\r\n\r\n    f.write( stringify(pref) );\r\n    f.close();\r\n  }\r\n\r\n  /**\r\n   * Load options from a file\r\n   * @param {object} prefs - Object containing preferences\r\n   */\r\n  function loadSettings(prefs) {\r\n    var f = File(prefs.folder + prefs.name);\r\n    if (!f.exists) return;\r\n\r\n    try {\r\n      f.encoding = 'UTF-8';\r\n      f.open('r');\r\n      var json = f.readln();\r\n      try { var pref = new Function('return (' + json + ')')(); }\r\n      catch (err) { return; }\r\n      f.close();\r\n\r\n      if (typeof pref != 'undefined') {\r\n        xInp.text = pref.offsetX;\r\n        yInp.text = pref.offsetY;\r\n        posGrp.children[pref.direction].value = true;\r\n        if (pref.direction === 1) updateDropdown(posDdl, inPosList);\r\n        posDdl.selection = pref.pos;\r\n        angleDdl.selection = pref.angle;\r\n        alignPnl.children[pref.justification].value = true;\r\n        layPnl.children[pref.container].value = true;\r\n        isAddExtension.value = pref.extension === 'true';\r\n        isRenameImage.value = pref.rename === 'true';\r\n      }\r\n    } catch (err) {\r\n      return;\r\n    }\r\n  }\r\n\r\n  win.center();\r\n  win.show();\r\n}\r\n\r\n/**\r\n * Get active document ruler units\r\n * @returns {string} - Shortened units\r\n */\r\nfunction getUnits() {\r\n  if (!documents.length) return '';\r\n  var key = activeDocument.rulerUnits.toString().replace('RulerUnits.', '');\r\n  switch (key) {\r\n    case 'Pixels': return 'px';\r\n    case 'Points': return 'pt';\r\n    case 'Picas': return 'pc';\r\n    case 'Inches': return 'in';\r\n    case 'Millimeters': return 'mm';\r\n    case 'Centimeters': return 'cm';\r\n    // Added in CC 2023 v27.1.1\r\n    case 'Meters': return 'm';\r\n    case 'Feet': return 'ft';\r\n    case 'FeetInches': return 'ft';\r\n    case 'Yards': return 'yd';\r\n    // Parse new units in CC 2020-2023 if a document is saved\r\n    case 'Unknown':\r\n      var xmp = activeDocument.XMPString;\r\n      if (/stDim:unit/i.test(xmp)) {\r\n        var units = /<stDim:unit>(.*?)<\\/stDim:unit>/g.exec(xmp)[1];\r\n        if (units == 'Meters') return 'm';\r\n        if (units == 'Feet') return 'ft';\r\n        if (units == 'FeetInches') return 'ft';\r\n        if (units == 'Yards') return 'yd';\r\n        return 'px';\r\n      }\r\n      break;\r\n    default: return 'px';\r\n  }\r\n}\r\n\r\n/**\r\n * Convert a value from one set of units to another\r\n * @param {string} value - The numeric value to be converted\r\n * @param {string} currUnits - The current units of the value (e.g., 'in', 'mm', 'pt')\r\n * @param {string} newUnits - The desired units for the converted value (e.g., 'in', 'mm', 'pt')\r\n * @returns {number} - The converted value in the specified units\r\n */\r\nfunction convertUnits(value, currUnits, newUnits) {\r\n  return UnitValue(value, currUnits).as(newUnits);\r\n}\r\n\r\n/**\r\n * Check the script environment\r\n * @param {string} List of initial data for verification\r\n * @returns {boolean} - Continue or abort script\r\n */\r\nfunction isCorrectEnv() {\r\n  var args = ['app', 'document'];\r\n  args.push.apply(args, arguments);\r\n\r\n  for (var i = 0;i < args.length;i++) {\r\n    var arg = args[i].toString().toLowerCase();\r\n    switch (true) {\r\n      case /app/g.test(arg):\r\n        if (!/illustrator/i.test(app.name)) {\r\n          alert('Wrong application\\nRun script from Adobe Illustrator', 'Script error');\r\n          return false;\r\n        }\r\n        break;\r\n      case /version/g.test(arg):\r\n        var rqdVers = parseFloat(arg.split(':')[1]);\r\n        if (parseFloat(app.version) < rqdVers) {\r\n          alert('Wrong app version\\nSorry, script only works in Illustrator v.' + rqdVers + ' and later', 'Script error');\r\n          return false;\r\n        }\r\n        break;\r\n      case /document/g.test(arg):\r\n        if (!app.documents.length) {\r\n          alert('No documents\\nOpen a document and try again', 'Script error');\r\n          return false;\r\n        }\r\n        break;\r\n      case /selection/g.test(arg):\r\n        var rqdLen = parseFloat(arg.split(':')[1]);\r\n        if (app.selection.length < rqdLen || selection.typename === 'TextRange') {\r\n          alert('Few objects are selected\\nPlease select atleast ' + rqdLen + ' object and try again', 'Script error');\r\n          return false;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * Convert a collection into a standard Array\r\n * @param {Object} coll - The collection to be converted\r\n * @returns {Array} - A new array containing the elements\r\n */\r\nfunction get(coll) {\r\n  var arr = [];\r\n\r\n  for (var i = 0, len = coll.length; i < len; i++) {\r\n    arr.push(coll[i]);\r\n  }\r\n\r\n  return arr;\r\n}\r\n\r\n/**\r\n * Get data for a collection of items, including their bounds, dimensions, and names\r\n * @param {(Object|Array)} coll - The collection of items to process\r\n * @returns {Array} - An array of objects\r\n */\r\nfunction getItemsData(coll) {\r\n  var data = [];\r\n\r\n  for (var i = 0, len = coll.length; i < len; i++) {\r\n    var bnds = getVisibleBounds(coll[i], 'geometricBounds');\r\n    var name = getName(coll[i]);\r\n    if (!name.length) name = 'Unnamed Object';\r\n\r\n    data.push({\r\n      bounds: bnds,\r\n      width: Math.abs(bnds[2] - bnds[0]),\r\n      height: Math.abs(bnds[1] - bnds[3]),\r\n      name: name\r\n    });\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\n/**\r\n * Get the actual \"visible\" bounds\r\n * https://github.com/joshbduncan/illustrator-scripts/blob/main/jsx/DrawVisibleBounds.jsx\r\n * @param {Object} obj - The target object\r\n * @param {string} type - The object bounds type\r\n * @returns {Array} - An array representing the actual bounds\r\n */\r\nfunction getVisibleBounds(obj, type) {\r\n  if (arguments.length == 1 || type == undefined) type = 'geometricBounds';\r\n  var doc = app.activeDocument;\r\n  var bnds, clippedItem, tmpItem, tmpLayer;\r\n  var curItem;\r\n  if (obj.typename === 'GroupItem') {\r\n    if (obj.clipped) {\r\n      // Check all sub objects to find the clipping path\r\n      for (var i = 0; i < obj.pageItems.length; i++) {\r\n        curItem = obj.pageItems[i];\r\n        if (curItem.clipping) {\r\n          clippedItem = curItem;\r\n          break;\r\n        } else if (curItem.typename === 'CompoundPathItem') {\r\n          if (!curItem.pathItems.length) {\r\n            // Catch compound path items with no pathItems\r\n            // via William Dowling @ github.com/wdjsdev\r\n            tmpLayer = doc.layers.add();\r\n            tmpItem = curItem.duplicate(tmpLayer);\r\n            app.executeMenuCommand('deselectall');\r\n            tmpItem.selected = true;\r\n            app.executeMenuCommand('noCompoundPath');\r\n            tmpLayer.hasSelectedArtwork = true;\r\n            app.executeMenuCommand('group');\r\n            clippedItem = item[0];\r\n            break;\r\n          } else if (curItem.pathItems[0].clipping) {\r\n            clippedItem = curItem;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if (!clippedItem) clippedItem = obj.pageItems[0];\r\n      bnds = clippedItem[type];\r\n      if (tmpLayer) {\r\n        tmpLayer.remove();\r\n        tmpLayer = undefined;\r\n      }\r\n    } else {\r\n      // If the object is not clipped\r\n      var subObjBnds;\r\n      var allBoundPoints = [[], [], [], []];\r\n      // Get the bounds of every object in the group\r\n      for (var i = 0; i < obj.pageItems.length; i++) {\r\n        curItem = obj.pageItems[i];\r\n        subObjBnds = getVisibleBounds(curItem, type);\r\n        allBoundPoints[0].push(subObjBnds[0]);\r\n        allBoundPoints[1].push(subObjBnds[1]);\r\n        allBoundPoints[2].push(subObjBnds[2]);\r\n        allBoundPoints[3].push(subObjBnds[3]);\r\n      }\r\n      // Determine the groups bounds from it sub object bound points\r\n      bnds = [\r\n        Math.min.apply(Math, allBoundPoints[0]),\r\n        Math.max.apply(Math, allBoundPoints[1]),\r\n        Math.max.apply(Math, allBoundPoints[2]),\r\n        Math.min.apply(Math, allBoundPoints[3]),\r\n      ];\r\n    }\r\n  } else {\r\n    bnds = obj[type];\r\n  }\r\n  return bnds;\r\n}\r\n\r\n/**\r\n * Get the name of an item, considering its type\r\n * @param {Object} item - The item for which to get the name\r\n * @returns {string} - The name of the item\r\n */\r\nfunction getName(item) {\r\n  var str = '';\r\n  if (item.typename === 'TextFrame' && isEmpty(item.name) && !isEmpty(item.contents)) {\r\n    str = item.contents;\r\n  } else if (item.typename === 'SymbolItem' && isEmpty(item.name)) {\r\n    str = item.symbol.name;\r\n  } else {\r\n    str = item.name;\r\n  }\r\n  return str;\r\n}\r\n\r\n/**\r\n * Check if a string is empty or contains only whitespace characters\r\n * @param {string} str - The string to check for emptiness\r\n * @returns {boolean} - True if the string is empty, false otherwise\r\n */\r\nfunction isEmpty(str) {\r\n  return str.replace(/\\s/g, '').length == 0;\r\n}\r\n\r\n/**\r\n * Add a name label to the specified item based on the provided parameters\r\n * @param {Object} item - The Illustrator item to label. Can be a placed, raster, or other object type\r\n * @param {Object} itemData - Contains item properties like name, width, height, and bounds\r\n * @param {Object} params - Labeling parameters including font size, justification, position, and offsets\r\n * @param {number} params.fontSize - The font size for the label text\r\n * @param {string} params.justification - Text justification\r\n * @param {number} params.angle - The rotation angle for the label\r\n * @param {boolean} params.isExtension - Whether to include the file extension in the label\r\n * @param {boolean} params.isRename - Whether to rename the item to match the label\r\n * @param {boolean} params.isOutside - Whether to place the label outside the item's bounds\r\n * @param {number} params.offsetX - Horizontal offset for label positioning\r\n * @param {number} params.offsetY - Vertical offset for label positioning\r\n * @param {string} params.position - The label's position relative to the item\r\n * \r\n * @returns {Object} - The created text frame containing the label\r\n */\r\nfunction addNameLabel(item, itemData, params) {\r\n  var f;\r\n  try {\r\n    f = item.file;\r\n  } catch (err) {\r\n    f = item;\r\n  }\r\n\r\n  var nameStr = '';\r\n  if (/placed|raster/i.test(item.typename)) {\r\n    nameStr = params.isExtension ? f.name : f.name.replace(/\\.[^\\.]+$/, '');\r\n    if (nameStr.length && params.isRename) item.name = decodeURI(nameStr);\r\n    if (!nameStr.length) nameStr = 'Missing Image';\r\n  } else {\r\n    nameStr = itemData.name;\r\n  }\r\n\r\n  var tf = item.layer.textFrames.add();\r\n  tf.contents = decodeURI(nameStr);\r\n  tf.textRange.characterAttributes.size = params.fontSize;\r\n  tf.textRange.paragraphAttributes.justification = Justification[params.justification];\r\n  tf.rotate(params.angle);\r\n\r\n  var diffW = itemData.width - tf.width + params.offsetX;\r\n  var diffH = itemData.height - tf.height + params.offsetY;\r\n  var halfDiffW = diffW / 2 + params.offsetX;\r\n  var halfDiffH = diffH / 2;\r\n\r\n  var topBase = itemData.bounds[1] + (params.isOutside ? tf.height : -params.offsetY);\r\n  var bottomBase = itemData.bounds[3] + tf.height + params.offsetY;\r\n  var leftBase = itemData.bounds[0] + (params.isOutside ? -tf.width - params.offsetX : params.offsetX);\r\n  var rightBase = itemData.bounds[2] + (params.isOutside ? params.offsetX : -tf.width - params.offsetX);\r\n  var centerX = itemData.bounds[0] + halfDiffW;\r\n  var centerY = itemData.bounds[1] - halfDiffH + params.offsetY;\r\n\r\n  switch (params.position) {\r\n    case 'LEFT TOP':\r\n      tf.top = itemData.bounds[1] + params.offsetY;\r\n      tf.left = leftBase;\r\n      break;\r\n    case 'LEFT CENTER':\r\n      tf.top = centerY;\r\n      tf.left = leftBase;\r\n      break;\r\n    case 'LEFT BOTTOM':\r\n      tf.top = bottomBase;\r\n      tf.left = leftBase;\r\n      break;\r\n    case 'TOP LEFT':\r\n      tf.top = topBase;\r\n      tf.left = itemData.bounds[0] + params.offsetX;\r\n      break;\r\n    case 'TOP CENTER':\r\n      tf.top = topBase;\r\n      tf.left = centerX;\r\n      break;\r\n    case 'TOP RIGHT':\r\n      tf.top = topBase;\r\n      tf.left = itemData.bounds[2] - tf.width - params.offsetX;\r\n      break;\r\n    case 'RIGHT TOP':\r\n      tf.top = itemData.bounds[1] + params.offsetY;\r\n      tf.left = rightBase;\r\n      break;\r\n    case 'RIGHT CENTER':\r\n      tf.top = centerY;\r\n      tf.left = rightBase;\r\n      break;\r\n    case 'RIGHT BOTTOM':\r\n      tf.top = bottomBase;\r\n      tf.left = rightBase;\r\n      break;\r\n    case 'BOTTOM LEFT':\r\n      tf.top = itemData.bounds[1] - itemData.height - params.offsetY;\r\n      tf.left = itemData.bounds[0] + params.offsetX;\r\n      break;\r\n    case 'BOTTOM CENTER':\r\n      tf.top = itemData.bounds[1] - itemData.height - params.offsetY;\r\n      tf.left = centerX;\r\n      break;\r\n    case 'BOTTOM RIGHT':\r\n      tf.top = itemData.bounds[1] - itemData.height - params.offsetY;\r\n      tf.left = itemData.bounds[2] - tf.width - params.offsetX;\r\n      break;\r\n    case 'CENTER TOP':\r\n      tf.top = itemData.bounds[1] - params.offsetY;\r\n      tf.left = centerX;\r\n      break;\r\n    case 'CENTER CENTER':\r\n      tf.top = centerY;\r\n      tf.left = centerX;\r\n      break;\r\n    case 'CENTER BOTTOM':\r\n      tf.top = bottomBase;\r\n      tf.left = centerX;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  tf.move(item, ElementPlacement.PLACEBEFORE);\r\n\r\n  return tf;\r\n}\r\n\r\n/**\r\n * Convert string to number\r\n * @param {string} str - The string to convert to a number\r\n * @param {number} def - The default value to return if the conversion fails\r\n * @returns {number} - The converted number\r\n */\r\nfunction strToNum(str, def) {\r\n  if (arguments.length == 1 || def == undefined) def = 1;\r\n  str = str.replace(/,/g, '.').replace(/[^\\d.-]/g, '');\r\n  str = str.split('.');\r\n  str = str[0] ? str[0] + '.' + str.slice(1).join('') : '';\r\n  str = str.substr(0, 1) + str.substr(1).replace(/-/g, '');\r\n  if (isNaN(str) || !str.length) return parseFloat(def);\r\n  else return parseFloat(str);\r\n}\r\n\r\n/**\r\n * Open a URL in the default web browser\r\n * @param {string} url - The URL to open in the web browser\r\n * @returns {void}\r\n*/\r\nfunction openURL(url) {\r\n  var html = new File(Folder.temp.absoluteURI + '/aisLink.html');\r\n  html.open('w');\r\n  var htmlBody = '<html><head><META HTTP-EQUIV=Refresh CONTENT=\"0; URL=' + url + '\"></head><body> <p></body></html>';\r\n  html.write(htmlBody);\r\n  html.close();\r\n  html.execute();\r\n}\r\n\r\n/**\r\n * Serialize a JavaScript plain object into a JSON-like string\r\n * @param {Object} obj - The object to serialize\r\n * @returns {string} - A JSON-like string representation of the object\r\n */\r\nfunction stringify(obj) {\r\n  var json = [];\r\n  for (var key in obj) {\r\n    if (obj.hasOwnProperty(key)) {\r\n      var value = obj[key].toString();\r\n      value = value\r\n        .replace(/\\t/g, \"\\\\t\")\r\n        .replace(/\\r/g, \"\\\\r\")\r\n        .replace(/\\n/g, \"\\\\n\")\r\n        .replace(/\"/g, '\\\\\"');\r\n      json.push('\"' + key + '\":\"' + value + '\"');\r\n    }\r\n  }\r\n  return \"{\" + json.join(\",\") + \"}\";\r\n}\r\n\r\n// Run script\r\ntry {\r\n  main();\r\n} catch (err) {}"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "显示链接名",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 18"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Illustrator.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "\r\n\r\n//@target illustrator\r\napp.preferences.setBooleanPreference('ShowExternalJSXWarning', false); // Fix drag and drop a .jsx file\r\n\r\n// Main function\r\nfunction main() {\r\n  var SCRIPT = {\r\n        name: '批量编辑文本',\r\n        version: 'v0.3'\r\n      };\r\n\r\n  var CFG = {\r\n        width: 300, // Text area width, px\r\n        height: 280, // Text area height, px\r\n        ph: '<text>', // Content display placeholder\r\n        divider: '\\n@@@\\n', // Symbol for separating multiple text frames\r\n        softBreak: '@#', // Soft line break char\r\n        coordTolerance: 10, // Object alignment tolerance for sorting\r\n        aiVers: parseFloat(app.version),\r\n        is2020: parseInt(app.version) == 24, // Current AI is CC 2020\r\n        isMac: /mac/i.test($.os)\r\n      };\r\n\r\n  var SETTINGS = {\r\n    name: SCRIPT.name.replace(/\\s/g, '_') + '_data.json',\r\n    folder: Folder.myDocuments + '/Adobe Scripts/'\r\n  };\r\n\r\n  if (!isCorrectEnv('selection:1')) return;\r\n\r\n  // INIT DATA\r\n  var tfs = getTextFrames(app.selection);\r\n  if (!tfs.length) {\r\n    alert('未找到文本对象\\n请至少选择1个文本对象后重试', '脚本错误');\r\n    return;\r\n  }\r\n\r\n  var isUndo = false;\r\n\r\n  var sortedTfs = [].concat(tfs);\r\n  sortByPosition(sortedTfs, CFG.coordTolerance);\r\n\r\n  var tfContents = extractContents(tfs, CFG.softBreak);\r\n  var sortedTfContents = extractContents(sortedTfs, CFG.softBreak);\r\n\r\n  var placeholder = isEqualContents(tfs, CFG.softBreak) ? tfs[0].contents.replace(/\\x03/g, CFG.softBreak) : CFG.ph;\r\n  var tmpText = {\r\n    union: '',\r\n    separate: ''\r\n  };\r\n\r\n  // DIALOG\r\n  var win = new Window('dialog', SCRIPT.name + ' ' + SCRIPT.version);\r\n      win.orientation = 'row';\r\n      win.alignChildren = ['fill', 'top'];\r\n\r\n  // INPUT\r\n  var input = win.add('edittext', [0, 0, CFG.width, CFG.height], placeholder, {multiline: true, scrolling: true });\r\n      input.helpTip = '在新行插入 @@@ \\n可分隔多个文本对象\\n\\n';\r\n      input.helpTip += '使用 Shift+Enter \\n插入软换行特殊字符';\r\n  if (CFG.isMac || CFG.aiVers >= 26.4 || CFG.aiVers <= 17) {\r\n    input.active = true;\r\n  }\r\n\r\n  // OPTIONS AND BUTTONS\r\n  var opt = win.add('group');\r\n      opt.orientation = 'column';\r\n      opt.alignChildren = ['fill', 'center'];\r\n\r\n  var isFormat = opt.add('checkbox', undefined, '保留段落格式');\r\n      isFormat.helpTip = '保留段落格式。\\n文本长度会影响脚本\\n性能';\r\n  var isSeparate = opt.add('checkbox', undefined, '分别编辑');\r\n      isSeparate.helpTip = '单独编辑每个\\n文本框';\r\n  var isSort = opt.add('checkbox', undefined, '按位置排序');\r\n      isSort.helpTip = '按位置对文本框\\n进行排序';\r\n  var isReverse = opt.add('checkbox', undefined, '反向应用');\r\n      isReverse.helpTip = '以相反顺序替换\\n文本框内容';\r\n      isReverse.enabled = isSeparate.value;\r\n\r\n  var cancel, ok;\r\n  if (CFG.isMac) {\r\n    cancel = opt.add('button', undefined, '取消', { name: 'cancel' });\r\n    reset = opt.add('button', undefined, '重置', { name: 'reset' });\r\n    ok = opt.add('button', undefined, '确定', { name: 'ok' });\r\n  } else {\r\n    ok = opt.add('button', undefined, '确定', { name: 'ok' });\r\n    reset = opt.add('button', undefined, '重置', { name: 'reset' });\r\n    cancel = opt.add('button', undefined, '取消', { name: 'cancel' });\r\n  }\r\n\r\n  cancel.helpTip = '按 Esc 关闭';\r\n  reset.helpTip = '重置为原始文本';\r\n  ok.helpTip = '按 Enter 运行';\r\n\r\n  var isPreview = opt.add('checkbox', undefined, '预览');\r\n\r\n  var copyright = opt.add('statictext', undefined, '访问 Github');\r\n  copyright.justify = 'center';\r\n\r\n  // EVENTS\r\n  loadSettings(SETTINGS);\r\n\r\n  // CC 2020 v24.3 crashes when undoing text frame changes\r\n  if (CFG.is2020) {\r\n    isPreview.enabled = false;\r\n    isPreview.helpTip = \"CC 2020版本预览功能已禁用\\n由于存在严重bug\";\r\n  }\r\n\r\n  isFormat.onClick = function () {\r\n    isPreview.enabled = !this.value;\r\n    preview();\r\n  };\r\n\r\n  isSeparate.onClick = function () {\r\n    isSort.enabled = this.value;\r\n    isReverse.enabled = this.value;\r\n    input.text = getInputText(placeholder);\r\n    win.update();\r\n    preview();\r\n  };\r\n\r\n  isSort.onClick = function () {\r\n    preview();\r\n  }\r\n\r\n  isReverse.onClick = function () {\r\n    input.text = reverseText(input.text, CFG.divider);\r\n    win.update();\r\n    preview();\r\n  }\r\n\r\n  input.onChange = input.onChanging = function () {\r\n    if (isSeparate.value) tmpText.separate = this.text;\r\n    else tmpText.union = this.text;\r\n    preview();\r\n  }\r\n\r\n  isPreview.onClick = preview;\r\n\r\n  // Insert soft line break char\r\n  input.addEventListener('keydown', function (kd) {\r\n    var isShift = ScriptUI.environment.keyboardState['shiftKey'];\r\n    if (isShift && kd.keyName === 'Enter') {\r\n      this.textselection = CFG.softBreak;\r\n      kd.preventDefault();\r\n      preview();\r\n    }\r\n  });\r\n\r\n  reset.onClick = function () {\r\n    cancel.text = 'Cancel';\r\n\r\n    tmpText.separate = '';\r\n    tmpText.union = '';\r\n    input.text = getInputText(placeholder);\r\n\r\n    preview();\r\n\r\n    this.active = true;\r\n    this.active = false;\r\n\r\n    input.active = true;\r\n    win.update();\r\n  }\r\n\r\n  cancel.onClick = win.close;\r\n\r\n  ok.onClick = function () {\r\n    if (isPreview.value && isUndo) app.undo();\r\n    ok.text = '请稍候...';\r\n    win.update();\r\n    changeTexts();\r\n    isUndo = false;\r\n    saveSettings(SETTINGS);\r\n    win.close();\r\n  }\r\n\r\n  /**\r\n   * Retrieve the text based on the configuration settings and temporary text storage\r\n   *\r\n   * @param {string} def - The default text to return if no valid text is found\r\n   * @returns {string} - The processed text\r\n   */\r\n  function getInputText(def) {\r\n    var str = (isSort.value ? sortedTfContents : tfContents).join(CFG.divider);\r\n    if (isSeparate.value) {\r\n      return !isEmpty(tmpText.separate) ? tmpText.separate : (isReverse.value ? reverseText(str, CFG.divider) : str);\r\n    } else {\r\n      return !isEmpty(tmpText.union) ? tmpText.union : def;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles the preview mode for text changes\r\n   */\r\n  function preview() {\r\n    if (CFG.is2020) return;\r\n    try {\r\n      if (isPreview.enabled && isPreview.value) {\r\n        if (isUndo) app.undo();\r\n        else isUndo = true;\r\n        changeTexts();\r\n        app.redraw();\r\n      } else if (isUndo) {\r\n        app.undo();\r\n        app.redraw();\r\n        isUndo = false;\r\n      }\r\n    } catch (err) {}\r\n  }\r\n\r\n  /**\r\n   * Change the text content of selected text frames based on the provided input text\r\n   */\r\n  function changeTexts() {\r\n    var tmpPath = app.selection[0].layer.pathItems.add();\r\n    tmpPath.name = 'Remove_Path';\r\n\r\n    if (isEmpty(input.text)) return;\r\n\r\n    // Create a regular expression for soft breaks\r\n    var regex = new RegExp(CFG.softBreak, 'gmi');\r\n\r\n    // Handle separate text replacement mode\r\n    if (isSeparate.value) {\r\n      var srcTfs = [].concat(isSort.value ? sortedTfs : tfs);\r\n      // Split the input text using the configured divider\r\n      var texts = input.text.replace(regex, '\\x03').split(CFG.divider);\r\n      // Determine the minimum length to avoid out-of-bounds errors\r\n      var min = Math.min(srcTfs.length, texts.length);\r\n\r\n      for (var i = 0; i < min; i++) {\r\n        var tf = srcTfs[i];\r\n        if (tf.contents !== texts[i]) {\r\n          replaceContent(tf, texts[i], isFormat.value);\r\n        }\r\n      }\r\n    } else {\r\n      // Handle combined text replacement mode\r\n      for (var i = 0, len = tfs.length; i < len; i++) {\r\n        var tf = tfs[i];\r\n        // Replace placeholders in the input text with the original content of the text frame\r\n        var str = input.text.replace(/<text>/gi, tfContents[i]).replace(regex, '\\x03');\r\n        if (tf.contents !== str) {\r\n          replaceContent(tf, str, isFormat.value);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  win.onClose = function () {\r\n    try {\r\n      if (isUndo) app.undo();\r\n    } catch (err) {}\r\n    try {\r\n      var tmpPath = app.activeDocument.pathItems.getByName('Remove_Path');\r\n      tmpPath.remove();\r\n    } catch (err) {}\r\n  }\r\n\r\n  copyright.addEventListener('mousedown', function () {\r\n    openURL('https://github.com/creold');\r\n  });\r\n\r\n  /**\r\n   * Save UI options to a file\r\n   *\r\n   * @param {object} prefs - Object containing preferences\r\n   */\r\n  function saveSettings(prefs) {\r\n    if (!Folder(prefs.folder).exists) {\r\n      Folder(prefs.folder).create();\r\n    }\r\n\r\n    var f = new File(prefs.folder + prefs.name);\r\n    f.encoding = 'UTF-8';\r\n    f.open('w');\r\n\r\n    var data = {};\r\n    data.formatting = isFormat.value;\r\n    data.separated = isSeparate.value;\r\n    data.sorted = isSort.value;\r\n    data.reversed = isReverse.value;\r\n\r\n    f.write( stringify(data) );\r\n    f.close();\r\n  }\r\n\r\n  /**\r\n   * Load options from a file\r\n   *\r\n   * @param {object} prefs - Object containing preferences\r\n   */\r\n  function loadSettings(prefs) {\r\n    var f = File(prefs.folder + prefs.name);\r\n    if (!f.exists) return;\r\n\r\n    try {\r\n      f.encoding = 'UTF-8';\r\n      f.open('r');\r\n      var json = f.readln();\r\n      try { var data = new Function('return (' + json + ')')(); }\r\n      catch (err) { return; }\r\n      f.close();\r\n\r\n      if (typeof data != 'undefined') {\r\n        isFormat.value = data.formatting === 'true';\r\n        isSeparate.value = data.separated  === 'true';\r\n        isSort.value = data.sorted  === 'true';\r\n        isSort.enabled = isSeparate.value;\r\n        isReverse.value = data.reversed === 'true';;\r\n        isReverse.enabled = isSeparate.value;\r\n        isPreview.enabled = !isFormat.value;\r\n        input.text = getInputText(placeholder);\r\n      }\r\n    } catch (err) {\r\n      return;\r\n    }\r\n  }\r\n\r\n  win.center();\r\n  win.show();\r\n}\r\n\r\n/**\r\n * Check the script environment\r\n * \r\n * @param {string} List of initial data for verification\r\n * @returns {boolean} Continue or abort script\r\n */\r\nfunction isCorrectEnv() {\r\n  var args = ['app', 'document'];\r\n  args.push.apply(args, arguments);\r\n\r\n  for (var i = 0; i < args.length; i++) {\r\n    var arg = args[i].toString().toLowerCase();\r\n    switch (true) {\r\n      case /app/g.test(arg):\r\n        if (!/illustrator/i.test(app.name)) {\r\n          alert('错误的应用程序\\n请从Adobe Illustrator中运行此脚本', '脚本错误');\r\n          return false;\r\n        }\r\n        break;\r\n      case /version/g.test(arg):\r\n        var rqdVers = parseFloat(arg.split(':')[1]);\r\n        if (parseFloat(app.version) < rqdVers) {\r\n          alert('版本不兼容\\n抱歉，此脚本仅支持Illustrator v.' + rqdVers + '及更高版本', '脚本错误');\r\n          return false;\r\n        }\r\n        break;\r\n      case /document/g.test(arg):\r\n        if (!app.documents.length) {\r\n          alert('未打开文档\\n请打开一个文档后重试', '脚本错误');\r\n          return false;\r\n        }\r\n        break;\r\n      case /selection/g.test(arg):\r\n        var rqdLen = parseFloat(arg.split(':')[1]);\r\n        if (app.selection.length < rqdLen || selection.typename === 'TextRange') {\r\n          alert('选择对象不足\\n请至少选择' + rqdLen + '个对象后重试', '脚本错误');\r\n          return false;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * Get an array of TextFrames from a given collection\r\n * \r\n * @param {Array} coll - The collection to search for TextFrames\r\n * @returns {Array} tfs - An array containing TextFrames found in the collection\r\n */\r\nfunction getTextFrames(coll) {\r\n  var tfs = [];\r\n\r\n  for (var i = 0, len = coll.length; i < len; i++) {\r\n    if (/text/i.test(coll[i].typename)) {\r\n      tfs.push(coll[i]);\r\n    } else if (/group/i.test(coll[i].typename)) {\r\n      tfs = tfs.concat(getTextFrames(coll[i].pageItems));\r\n    }\r\n  }\r\n\r\n  return tfs;\r\n}\r\n\r\n/**\r\n * Sort items based on their position\r\n * \r\n * @param {(Object|Array)} coll - Collection to be sorted\r\n * @param {number} tolerance - The tolerance within which objects are considered to have the same top position\r\n */\r\nfunction sortByPosition(coll, tolerance) {\r\n  if (arguments.length == 1 || tolerance == undefined) {\r\n    tolerance = 10;\r\n  }\r\n\r\n  coll.sort(function(a, b) {\r\n    if (Math.abs(b.top - a.top) <= tolerance) {\r\n      return a.left - b.left;\r\n    }\r\n    return b.top - a.top;\r\n  });\r\n}\r\n\r\n/**\r\n * Extract the contents of TextFrames from a given collection\r\n * \r\n * @param {Array} coll - The collection of TextFrames\r\n * @param {string} softBreak - The soft line break special char\r\n * @returns {Array} result - An array containing the contents of TextFrames\r\n */\r\nfunction extractContents(coll, softBreak) {\r\n  var result = [];\r\n\r\n  for (var i = 0, len = coll.length; i < len; i++) {\r\n    // Replace End of Text (ETX) to line break\r\n    result.push(coll[i].contents.replace(/\\x03/g, softBreak));\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Check if the contents of all TextFrames in the collection are equal\r\n * \r\n * @param {Array} coll - The collection of TextFrames to compare\r\n * @param {string} softBreak - The soft line break special char\r\n * @returns {boolean} - Return true if all TextFrames have equal contents, otherwise false\r\n */\r\nfunction isEqualContents(coll, softBreak) {\r\n  var str = coll[0].contents.replace(/\\x03/g, softBreak);\r\n\r\n  for (var i = 1, len = coll.length; i < len; i++) {\r\n    if (coll[i].contents.replace(/\\x03/g, softBreak) !== str) return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * Reverse the order of texts within a string separated by a specified divider\r\n * @param {string} str - The delimited string to reverse\r\n * @param {string} divider - The divider used to split\r\n * @returns {string} str - A reversed string\r\n */\r\nfunction reverseText(str, divider) {\r\n  var tmp = str.split(divider);\r\n\r\n  tmp.reverse();\r\n  var str = tmp.join(divider);\r\n\r\n  return str;\r\n}\r\n\r\n/**\r\n * Check if a string is empty or contains only whitespace characters\r\n *\r\n * @param {string} str - The string to check for emptiness\r\n * @returns {boolean} - True if the string is empty, false otherwise\r\n */\r\nfunction isEmpty(str) {\r\n  return str.replace(/\\s/g, '').length == 0;\r\n}\r\n\r\n/**\r\n * Replace the content of a text frame and optionally retains the original paragrah appearance\r\n *\r\n * @param {Object} tf - The text frame to replace the content\r\n * @param {string} str - The new content to replace the original text with\r\n * @param {boolean} isKeepStyle - Determines whether to keep the original paragrah appearance\r\n */\r\nfunction replaceContent(tf, str, isKeepStyle) {\r\n  if (!/text/i.test(tf.typename)) return;\r\n\r\n  if (!isKeepStyle) {\r\n    tf.contents = str;\r\n    return;\r\n  }\r\n\r\n  var paras = getParagraphs(tf);\r\n  var styles = [];\r\n  // Whitelist of paragraph attributes (short keys)\r\n  var paraKeys = [\r\n    'attributes', 'font', 'color', 'size', 'scale', 'leading', 'tracking', 'baseline', 'rotation', \r\n    'kerning', 'capitalization', 'italics', 'language', 'alignment', 'overprint', 'stroke', 'underline',\r\n    'strikeThrough', 'justification', 'indent', 'space', 'tab', 'romanHanging', 'direction', 'composer'\r\n    ];\r\n\r\n  try {\r\n    for (var i = 0; i < paras.length; i++) {\r\n      if (!trim(paras[i].contents).length) continue;\r\n      styles.push( getProps(paras[i], paraKeys) );\r\n    }\r\n  } catch (err) {}\r\n\r\n\r\n  // Replace original text\r\n  tf.contents = str;\r\n  paras = getParagraphs(tf);\r\n\r\n  var style = null;\r\n  var idx = 0;\r\n\r\n  for (var j = 0; j < paras.length; j++) {\r\n    if (!trim(paras[j].contents).length) continue;\r\n    style = styles[idx] ? styles[idx] : styles[styles.length - 1];\r\n    pasteProps(style, paras[j]);\r\n    idx++;\r\n  }\r\n}\r\n\r\n/**\r\n * Remove leading and trailing whitespace from a string\r\n *\r\n * @param {string} str - The string to trim\r\n * @returns {string} str - The trimmed string\r\n */\r\nfunction trim(str) {\r\n  return str.replace(/^\\s+|\\s+$/g, '');\r\n}\r\n\r\n/**\r\n * Collect specified properties from an object\r\n *\r\n * @param {Object} obj - The object to get properties from\r\n * @param {Array} whiteList - An array of property names to collect\r\n * @returns {Object} props - An object containing the copied properties\r\n */\r\nfunction getProps(obj, whiteList) {\r\n  var props = {};\r\n  var regex = new RegExp(whiteList.join('|'), 'i');\r\n\r\n  for (var key in obj) {\r\n    if (!obj.hasOwnProperty(key)) continue;\r\n    if (!regex.test(key)) continue;\r\n    try {\r\n      props[key] = obj[key];\r\n    } catch (err) {\r\n      // Skip undefined properties\r\n    }\r\n  }\r\n\r\n  return props;\r\n}\r\n\r\n/**\r\n * Paste properties from one object to another\r\n *\r\n * @param {Object} props - The object containing properties to paste\r\n * @param {Object} obj - The object to paste properties into\r\n */\r\nfunction pasteProps(props, obj) {\r\n  for (var key in props) {\r\n    // Fix Illustrator bug with empty text color\r\n    if (/weight/i.test(key) && /nocolor/i.test(props.strokeColor)) {\r\n      obj.strokeWeight = 0;\r\n    } else {\r\n      obj[key] = props[key];\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Get valid paragraphs from a text frame without soft line breaks\r\n * Based on https://community.adobe.com/t5/illustrator-discussions/issue-while-using-force-line-break/td-p/12990331 by m1b\r\n *\r\n * @param {Object} obj - The object containing the story\r\n * @returns {Array} paras - An array of objects representing paragraphs\r\n */\r\nfunction getParagraphs(obj) {\r\n  if (!obj.hasOwnProperty('story')) return;\r\n  // Return native paragraphs\r\n  // because AI older than CC 2018 does not have 'start', 'end' keys in textRanges\r\n  if (parseInt(app.version) < 22) return obj.paragraphs;\r\n\r\n  var story = obj.story;\r\n  var txt = story.textRange.contents;\r\n  var regex = /\\u000D/g; // Carriage returns\r\n  var lastStart = 0;\r\n  var paras = [];\r\n  var para;\r\n\r\n  // Add paragraphs between carriage returns\r\n  regex.lastIndex = 0;\r\n  while ((regex.exec(txt)) !== null) {\r\n    para = story.textRange.textRanges[lastStart];\r\n    para.start = lastStart;\r\n    para.end = regex.lastIndex - 1;\r\n    paras.push(para);\r\n    lastStart = regex.lastIndex;\r\n  }\r\n\r\n  // Add last paragraph\r\n  if (regex.lastIndex > 0 && regex.lastIndex <= txt.length - 1) {\r\n    para = story.textRange.textRanges[lastStart];\r\n    para.start = regex.lastIndex;\r\n    para.end = txt.length;\r\n    paras.push(para);\r\n  }\r\n\r\n  return paras;\r\n}\r\n\r\n/**\r\n * Open a URL in the default web browser\r\n * \r\n * @param {string} url - The URL to open in the web browser\r\n * @returns {void}\r\n */\r\nfunction openURL(url) {\r\n  var html = new File(Folder.temp.absoluteURI + '/aisLink.html');\r\n  html.open('w');\r\n  var htmlBody = '<html><head><META HTTP-EQUIV=Refresh CONTENT=\"0; URL=' + url + '\"></head><body> <p></body></html>';\r\n  html.write(htmlBody);\r\n  html.close();\r\n  html.execute();\r\n}\r\n\r\n/**\r\n * Serialize a JavaScript plain object into a JSON-like string\r\n *\r\n * @param {Object} obj - The object to serialize\r\n * @returns {string} - A JSON-like string representation of the object\r\n */\r\nfunction stringify(obj) {\r\n  var json = [];\r\n  for (var key in obj) {\r\n    if (obj.hasOwnProperty(key)) {\r\n      var value = obj[key].toString();\r\n      value = value\r\n        .replace(/\\t/g, \"\\\\t\")\r\n        .replace(/\\r/g, \"\\\\r\")\r\n        .replace(/\\n/g, \"\\\\n\")\r\n        .replace(/\"/g, '\\\\\"');\r\n      json.push('\"' + key + '\":\"' + value + '\"');\r\n    }\r\n  }\r\n  return \"{\" + json.join(\",\") + \"}\";\r\n}\r\n\r\n// Run script\r\ntry {\r\n  main();\r\n} catch (err) {}"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "文本编辑",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 19"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Illustrator.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "/*\r\n* Decompiled with Jsxer\r\n* Version: 1.6.0\r\n* JSXBIN 2.0\r\n*/\r\n\r\nfunction saveItemsState() {\r\nfor (var i = 0; i < doc.pageItems.length; i++) {\r\nvar currItem = doc.pageItems[i];\r\nif (currItem.locked == true) { \r\nlockedItems.push(i);\r\ncurrItem.locked = false;\r\n}\r\nif (currItem.hidden == true) { \r\nhiddenItems.push(i);\r\ncurrItem.hidden = false;\r\n}\r\n}\r\n}\r\nfunction restoreItemsState() {\r\nfor (var i = 0; i < lockedItems.length; i++) {\r\nvar index = lockedItems[i];\r\ndoc.pageItems[index].locked = true;\r\n}\r\nfor (var j = 0; j < hiddenItems.length; j++) {\r\nvar index = hiddenItems[j];\r\ndoc.pageItems[index].hidden = true;\r\n}\r\n}\r\nfunction rotateArt(board) {\r\napp.coordinateSystem = CoordinateSystem.ARTBOARDCOORDINATESYSTEM;\r\nvar artRect = [].concat(board.artboardRect);\r\nvar artWidth = artRect[2] - artRect[0];\r\nvar artHeight = -(artRect[3] - artRect[1]);\r\ndeselect();\r\ndoc.selectObjectsOnActiveArtboard();\r\nvar newArtRect = [(artRect[0] + (artWidth / 2)) - (artHeight / 2), (artRect[1] - (artHeight / 2)) + (artWidth / 2), (artRect[2] - (artWidth / 2)) + (artHeight / 2), (artRect[3] + (artHeight / 2)) - (artWidth / 2)];\r\nfor (var k = 0; k < selection.length; k++) {\r\nvar bnds = selection[k].position;\r\nvar __width = selection[k].width;\r\nvar __height = selection[k].height;\r\nvar top = bnds[1] - artRect[1];\r\nvar left = bnds[0] - artRect[0];\r\nif (cwAngle.value == true) { \r\nselection[k].rotate(-90, true, true, true, true, Transformation.CENTER);\r\nselection[k].position = [(newArtRect[2] - __height) + top, newArtRect[1] - left];\r\n}\r\nelse {\r\nselection[k].rotate(90, true, true, true, true, Transformation.CENTER);\r\nselection[k].position = [newArtRect[0] - top, newArtRect[3] + left + __width];\r\n}\r\n}\r\ndeselect();\r\nboard.artboardRect = newArtRect;\r\n}\r\nfunction deselect() {\r\nactiveDocument.selection = null;\r\n}\r\nfunction showError(err) {\r\nif (confirm(scriptName + \": an unknown error has occurred.\\n\" + \"Would you like to see more information?\", true, \"Unknown Error\")) { \r\nalert(err + \": on line \" + err.line, \"Script Error\", true);\r\n}\r\n}\r\napp.userInteractionLevel = UserInteractionLevel.DONTDISPLAYALERTS;\r\nvar scriptName = \"\\u65cb\\u8f6c\\u753b\\u677f\\u53ca\\u5bf9\\u8c61\";\r\nvar scriptVersion = \"1.2\";\r\nvar scriptAuthor = \"\\xa9 Alex Ladygin, Serg Osokin\";\r\nvar scriptDonate = \"\\u8d5e\\u52a9\\u4f5c\\u8005\";\r\ntry {\r\nif (documents.length > 0) { \r\nfunction okClick() {\r\nsaveItemsState();\r\nif (currArtRadio.value == true) { \r\nrotateArt(currArt);\r\n}\r\nelse {\r\nfor (var i = 0; i < doc.artboards.length; i++) {\r\ndoc.artboards.setActiveArtboardIndex(i);\r\nrotateArt(doc.artboards[i]);\r\n}\r\n}\r\nrestoreItemsState();\r\ndlg.close();\r\n}\r\nvar doc = app.activeDocument;\r\nvar currArt = doc.artboards[doc.artboards.getActiveArtboardIndex()];\r\nvar currArtNum = doc.artboards.getActiveArtboardIndex() + 1;\r\nvar lockedItems = new Array();\r\nvar hiddenItems = new Array();\r\nvar dlg = new Window(\"dialog\", scriptName + \" ver.\" + scriptVersion, undefined);\r\ndlg.orientation = \"column\";\r\ndlg.alignChildren = [\"fill\", \"fill\"];\r\nvar slctTarget = dlg.add(\"panel\", undefined, \"\\u65cb\\u8f6c\\u8303\\u56f4\");\r\nslctTarget.orientation = \"column\";\r\nslctTarget.alignChildren = \"left\";\r\nslctTarget.margins = 20;\r\nvar currArtRadio = slctTarget.add(\"radiobutton\", undefined, \"\\u5f53\\u524d\\u753b\\u677f\");\r\nvar allArtRadio = slctTarget.add(\"radiobutton\", undefined, \"\\u5168\\u90e8\\u753b\\u677f \");\r\ncurrArtRadio.value = true;\r\nvar slctAngle = dlg.add(\"panel\", undefined, \"\\u65cb\\u8f6c\\u89d2\\u5ea6\");\r\nslctAngle.orientation = \"row\";\r\nslctAngle.alignChildren = [\"fill\", \"fill\"];\r\nslctAngle.margins = 20;\r\nvar cwAngle = slctAngle.add(\"radiobutton\", undefined, \"\\u987a\\u65f6\\u9488 90 \\u5ea6\");\r\nvar ccwAngle = slctAngle.add(\"radiobutton\", undefined, \"\\u9006\\u65f6\\u9488 90 \\u5ea6\");\r\ncwAngle.value = true;\r\nvar btns = dlg.add(\"group\");\r\nbtns.alignChildren = [\"fill\", \"fill\"];\r\nbtns.margins = [0, 5, 0, 0];\r\nvar cancel = btns.add(\"button\", undefined, \"\\u53d6\\u6d88\", {name: \"cancel\"});\r\ncancel.helpTip = \"\\u6309 Esc \\u952e\\u53d6\\u6d88\";\r\nvar ok = btns.add(\"button\", undefined, \"\\u786e\\u5b9a\", {name: \"ok\"});\r\nok.helpTip = \"\\u6309 Enter \\u952e\\u8fd0\\u884c\";\r\nok.active = true;\r\ncancel.onClick = function () {\r\ndlg.close();\r\n};\r\nok.onClick = okClick;\r\nvar copyright = dlg.add(\"panel\");\r\ncopyright.orientation = \"column\";\r\ncopyright.alignChild = [\"center\", \"center\"];\r\ncopyright.alignment = \"fill\";\r\ncopyright.margins = 5;\r\nvar lblCopyright = copyright.add(\"statictext\");\r\nlblCopyright.text = scriptAuthor;\r\nvar donate = copyright.add(\"button\", undefined, scriptDonate);\r\ndonate.onClick = function () {\r\nfname = \"_aiscript_donate.url\";\r\nshortcut = new File(\"\" + Folder.temp + \"/\" + fname);\r\nshortcut.open(\"w\");\r\nshortcut.writeln(\"[InternetShortcut]\");\r\nshortcut.writeln(\"URL=https://www.paypal.me/osokin/usd\");\r\nshortcut.writeln();\r\nshortcut.close();\r\nshortcut.execute();\r\n$.sleep(4000);\r\nreturn shortcut.remove();\r\n};\r\ndeselect();\r\napp.redraw();\r\ndlg.center();\r\ndlg.show();\r\n}\r\nelse {\r\nthrow new Error(scriptName + \"\\n\\u8fd0\\u884c\\u811a\\u672c\\u524d\\u8bf7\\u6253\\u5f00\\u6587\\u4ef6\");\r\n}\r\n} catch (e) {showError(e);\r\n}"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "画板旋转",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 20"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Illustrator.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "//@target illustrator\r\napp.preferences.setBooleanPreference('ShowExternalJSXWarning', false); // Fix drag and drop a .jsx file\r\napp.userInteractionLevel = UserInteractionLevel.DONTDISPLAYALERTS;\r\n\r\nfunction main() {\r\n  var SCRIPT = {\r\n        name: 'Duplicate Atboards Light',\r\n        version: 'v0.4.4'\r\n      },\r\n      CFG = {\r\n        aiVers: parseFloat(app.version),\r\n        isMac: /mac/i.test($.os),\r\n        units: getUnits(), // Active document units\r\n        copies: 0, // Default amount of copies\r\n        spacing: 20, // Default spacing between copies (doc units)\r\n        minSpacing: 0, // The spacing can't be < 0\r\n        tmpLyr: 'FOR_AB_COORD',\r\n        suffix: ' ', // Default suffix for copies names\r\n        limit: 2500, // The amount of objects, when the script can run slowly\r\n        abs: 10, // When the number of copies >, full-screen mode is enabled\r\n        cnvs: 16383, // Illustrator canvas max size, px\r\n        lKey: '%isLocked',\r\n        hKey: '%isHidden',\r\n        uiField: [0, 0, 60, 30],\r\n        uiTitle: [0, 0, 120, 30],\r\n        uiOpacity: 1 // UI window opacity. Range 0-1\r\n      },\r\n      SETTINGS = {\r\n        name: SCRIPT.name.replace(/\\s/g, '_') + '_data.json',\r\n        folder: Folder.myDocuments + '/Adobe Scripts/'\r\n      };\r\n\r\n  if (CFG.aiVers < 16) {\r\n    alert('Error\\nSorry, script only works in Illustrator CS6 and later');\r\n    return;\r\n  }\r\n\r\n  if (!documents.length) {\r\n    alert('Error\\nOpen a document and try again');\r\n    return;\r\n  }\r\n\r\n  var doc = activeDocument,\r\n      maxCopies = ((CFG.aiVers >= 22) ? 1000 : 100) - doc.artboards.length, // Artboards limit\r\n      curAbIdx = doc.artboards.getActiveArtboardIndex(),\r\n      absArr = [],\r\n      copies = spacing = 0;\r\n\r\n  // Scale factor for Large Canvas mode\r\n  CFG.sf = doc.scaleFactor ? doc.scaleFactor : 1;\r\n\r\n  // Collect artboards names for dropdown menu\r\n  for (var i = 0, aLen = doc.artboards.length; i < aLen; i++) {\r\n    absArr.push((i + 1) + ': ' + doc.artboards[i].name);\r\n  }\r\n\r\n  // Main Window\r\n  var dialog = new Window('dialog', SCRIPT.name + ' ' + SCRIPT.version);\r\n      dialog.orientation = 'column';\r\n      dialog.alignChildren = ['fill', 'center'];\r\n      dialog.opacity = CFG.uiOpacity;\r\n\r\n  // Input fields\r\n  var abGroup = dialog.add('group');\r\n      abGroup.orientation = 'column';\r\n      abGroup.alignChildren = ['fill', 'top'];\r\n      abGroup.add('statictext', undefined, '选择画板');\r\n  var abIdx = abGroup.add('dropdownlist', CFG.uiTitle, absArr);\r\n      abIdx.selection = curAbIdx;\r\n\r\n  var fieldGroup = dialog.add('group');\r\n      fieldGroup.orientation = 'row';\r\n      fieldGroup.alignChildren = ['fill', 'center'];\r\n\r\n  var titlesGroup = fieldGroup.add('group');\r\n      titlesGroup.orientation = 'column';\r\n  var copiesTitle = titlesGroup.add('statictext', CFG.uiTitle, '副本 (max ');\r\n      titlesGroup.add('statictext', CFG.uiTitle, '间距, ' + CFG.units);\r\n\r\n  var inputsGroup = fieldGroup.add('group');\r\n      inputsGroup.orientation = 'column';\r\n  var copiesVal = inputsGroup.add('edittext', CFG.uiField, CFG.copies);\r\n  var spacingVal = inputsGroup.add('edittext', CFG.uiField, CFG.spacing);\r\n\r\n  if (CFG.isMac || CFG.aiVers >= 26.4 || CFG.aiVers <= 17) {\r\n    copiesVal.active = true;\r\n  }\r\n\r\n  if (doc.pageItems.length > CFG.limit) {\r\n    var warning = dialog.add('statictext', undefined, '该文件有超过 ' + CFG.limit + ' 对象. 脚本运行更慢', { multiline: true });\r\n  }\r\n\r\n  // Buttons\r\n  var btnsGroup = dialog.add('group');\r\n      btnsGroup.orientation = 'row';\r\n      btnsGroup.alignChildren = ['fill', 'center'];\r\n  var cancel = btnsGroup.add('button', undefined, 'Cancel', { name: 'cancel' });\r\n  var ok = btnsGroup.add('button', undefined, 'Ok', { name: 'ok' });\r\n\r\n  var copyright = dialog.add('statictext', undefined, '\\u00A9 Sergey Osokin. Visit Github');\r\n      copyright.justify = 'center';\r\n\r\n  loadSettings();\r\n\r\n  spacing = convertUnits( strToAbsNum(spacingVal.text, CFG.minSpacing), CFG.units, 'px' );\r\n  curAbIdx = doc.artboards.getActiveArtboardIndex();\r\n\r\n  var abCoord = getArtboardCoordinates(curAbIdx, CFG.tmpLyr);\r\n  var overCnvsSize = isOverCnvsBounds(abCoord, maxCopies, spacing, CFG.cnvs);\r\n\r\n  copiesTitle.text = '副本 (max ' + overCnvsSize.copies + ')';\r\n  if (strToAbsNum(copiesVal.text, CFG.copies) > overCnvsSize.copies) {\r\n    copiesVal.text = overCnvsSize.copies;\r\n  }\r\n\r\n  shiftInputNumValue(copiesVal, CFG.copies);\r\n  shiftInputNumValue(spacingVal, CFG.minSpacing);\r\n\r\n  // Change listeners\r\n  spacingVal.onChange = function () {\r\n    recalcCopies();\r\n    this.text = strToAbsNum(this.text, CFG.spacing);\r\n  }\r\n\r\n  copiesVal.onChange = function () {\r\n    recalcCopies();\r\n    this.text = strToAbsNum(this.text, CFG.copies);\r\n  }\r\n\r\n  copiesVal.onChanging = spacingVal.onChanging = recalcCopies;\r\n\r\n  abIdx.onChange = function() {\r\n    doc.artboards.setActiveArtboardIndex(abIdx.selection.index);\r\n    redraw();\r\n    recalcCopies();\r\n  }\r\n\r\n  copyright.addEventListener('mousedown', function () {\r\n    openURL('https://github.com/creold');\r\n  });\r\n\r\n  cancel.onClick = dialog.close;\r\n\r\n  // Remove temp layer\r\n  dialog.onClose = function() {\r\n    try {\r\n      doc.layers.getByName(CFG.tmpLyr).remove();\r\n    } catch (e) {}\r\n  }\r\n\r\n  ok.onClick = okClick;\r\n\r\n  function okClick() {\r\n    copies = copiesVal.text = Math.round( strToAbsNum(copiesVal.text, CFG.copies) );\r\n    spacing = spacingVal.text = strToAbsNum(spacingVal.text, CFG.spacing);\r\n    spacing = convertUnits(spacing, CFG.units, 'px') / CFG.sf;\r\n\r\n    var userView = doc.views[0].screenMode;\r\n    if (copies == 0) {\r\n      dialog.close();\r\n    } else if (copies > CFG.abs) {\r\n      doc.views[0].screenMode = ScreenMode.FULLSCREEN;\r\n    }\r\n\r\n    selection = null;\r\n    redraw();\r\n    unlockLayers(doc.layers);\r\n    removeNote(doc.layers, CFG.lKey, CFG.hKey); // Сlear Note after previous run\r\n    saveItemsState(doc.layers, CFG.lKey, CFG.hKey);\r\n\r\n    // Copy Artwork\r\n    doc.selectObjectsOnActiveArtboard();\r\n    var abItems = selection;\r\n    try {\r\n      for (var i = 0; i < copies; i++) {\r\n        suffix = CFG.suffix + fillZero((i + 1), copies.toString().length);\r\n        duplicateArtboard(curAbIdx, abItems, spacing, suffix, i);\r\n      }\r\n    } catch (e) {}\r\n\r\n    // Restore locked & hidden pageItems\r\n    restoreItemsState(doc.layers, CFG.lKey, CFG.hKey);\r\n    selection = null;\r\n    doc.views[0].screenMode = userView;\r\n    saveSettings();\r\n    app.userInteractionLevel = UserInteractionLevel.DISPLAYALERTS;\r\n\r\n    dialog.close();\r\n  }\r\n\r\n  dialog.center();\r\n  dialog.show();\r\n\r\n  /**\r\n   * Recalculate the maximum amount of copies at a given spacing\r\n   */\r\n  function recalcCopies() {\r\n    spacing = convertUnits( strToAbsNum(spacingVal.text, CFG.minSpacing), CFG.units, 'px' ) / CFG.sf;\r\n    curAbIdx = doc.artboards.getActiveArtboardIndex();\r\n    abCoord = getArtboardCoordinates(curAbIdx, CFG.tmpLyr);\r\n    overCnvsSize = isOverCnvsBounds(abCoord, maxCopies, spacing, CFG.cnvs);\r\n    copiesTitle.text = 'Copies (max ' + overCnvsSize.copies + ')';\r\n    if (strToAbsNum(copiesVal.text, CFG.copies) > overCnvsSize.copies) {\r\n      copiesVal.text = overCnvsSize.copies;\r\n    }\r\n    if (strToAbsNum(copiesVal.text, CFG.copies) < 0) {\r\n      copiesVal.text = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Use Up / Down arrow keys (+ Shift) for change value\r\n   * @param {object} item - input text field\r\n   * @param {number} min - minimal input value\r\n   */\r\n  function shiftInputNumValue(item, min) {\r\n    item.addEventListener('keydown', function (kd) {\r\n      var step;\r\n      ScriptUI.environment.keyboardState['shiftKey'] ? step = 10 : step = 1;\r\n      if (kd.keyName == 'Down') {\r\n        this.text = strToAbsNum(this.text, min) - step;\r\n        if (this.text * 1 < min) this.text = min;\r\n        recalcCopies();\r\n        kd.preventDefault();\r\n      }\r\n      if (kd.keyName == 'Up') {\r\n        this.text = strToAbsNum(this.text, min) + step;\r\n        recalcCopies();\r\n        kd.preventDefault();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Save input data to file\r\n   */\r\n  function saveSettings() {\r\n    if(!Folder(SETTINGS.folder).exists) Folder(SETTINGS.folder).create();\r\n    var $file = new File(SETTINGS.folder + SETTINGS.name);\r\n    $file.encoding = 'UTF-8';\r\n    $file.open('w');\r\n    var pref = {};\r\n    pref.copies = copiesVal.text;\r\n    pref.spacing = spacingVal.text;\r\n    var data = pref.toSource();\r\n    $file.write(data);\r\n    $file.close();\r\n  }\r\n\r\n  /**\r\n   * Load input data from file\r\n   */\r\n  function loadSettings() {\r\n    var $file = File(SETTINGS.folder + SETTINGS.name);\r\n    if ($file.exists) {\r\n      try {\r\n        $file.encoding = 'UTF-8';\r\n        $file.open('r');\r\n        var json = $file.readln();\r\n        var pref = new Function('return ' + json)();\r\n        $file.close();\r\n        if (typeof pref != 'undefined') {\r\n          copiesVal.text = pref.copies;\r\n          spacingVal.text = pref.spacing;\r\n        }\r\n      } catch (e) {}\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Unlock all Layers & Sublayers\r\n * @param {Object} _layers - Layers collection\r\n */\r\nfunction unlockLayers(_layers) {\r\n  for (var i = 0, len = _layers.length; i < len; i++) {\r\n    if (_layers[i].locked) _layers[i].locked = false;\r\n    if (_layers[i].layers.length) unlockLayers(_layers[i].layers);\r\n  }\r\n}\r\n\r\n/**\r\n * Remove keyword from Note in Attributes panel\r\n * @param {Object} _layers - Layers collection\r\n * @param {string} lKey - Keyword for locked items\r\n * @param {string} hKey - Keyword for hidden items\r\n */\r\nfunction removeNote(_layers, lKey, hKey) {\r\n  var regexp = new RegExp(lKey + '|' + hKey, 'gi');\r\n  for (var i = 0, len = _layers.length; i < len; i++) {\r\n    var curLayer = _layers[i],\r\n        allItems = [];\r\n    if (curLayer.layers.length > 0) {\r\n      removeNote(curLayer.layers, lKey, hKey);\r\n    }\r\n    try {\r\n      getItems(curLayer.pageItems, allItems);\r\n      for (var j = 0, iLen = allItems.length; j < iLen; j++) {\r\n        var curItem = allItems[j];\r\n        curItem.note = curItem.note.replace(regexp, '');\r\n      }\r\n    } catch (e) {}\r\n  }\r\n}\r\n\r\n/**\r\n * Save information about locked & hidden pageItems & layers\r\n * @param {Object} _layers - Layers collection\r\n * @param {string} lKey - Keyword for locked items\r\n * @param {string} hKey - Keyword for hidden items\r\n */\r\nfunction saveItemsState(_layers, lKey, hKey) {\r\n  var allItems = [];\r\n  for (var i = 0, len = _layers.length; i < len; i++) {\r\n    var curLayer = _layers[i];\r\n    if (curLayer.layers.length > 0) {\r\n      saveItemsState(curLayer.layers, lKey, hKey);\r\n    }\r\n    getItems(curLayer.pageItems, allItems);\r\n    for (var j = 0, iLen = allItems.length; j < iLen; j++) {\r\n      var curItem = allItems[j];\r\n      if (curItem.locked) {\r\n        curItem.locked = false;\r\n        curItem.note += lKey;\r\n      }\r\n      if (curItem.hidden) {\r\n        curItem.hidden = false;\r\n        curItem.note += hKey;\r\n      }\r\n    }\r\n  }\r\n  redraw();\r\n}\r\n\r\n/**\r\n * Restoring locked & hidden pageItems & layers\r\n * @param {Object} _layers - Layers collection\r\n * @param {string} lKey - Keyword for locked items\r\n * @param {string} hKey - Keyword for hidden items\r\n */\r\nfunction restoreItemsState(_layers, lKey, hKey) {\r\n  var allItems = [],\r\n      regexp = new RegExp(lKey + '|' + hKey, 'gi');\r\n  for (var i = 0, len = _layers.length; i < len; i++) {\r\n    var curLayer = _layers[i];\r\n    if (curLayer.layers.length > 0) {\r\n      restoreItemsState(curLayer.layers, lKey, hKey);\r\n    }\r\n    getItems(curLayer.pageItems, allItems);\r\n    for (var j = 0, iLen = allItems.length; j < iLen; j++) {\r\n      var curItem = allItems[j];\r\n      if (curItem.note.match(lKey) != null) {\r\n        curItem.note = curItem.note.replace(regexp, '');\r\n        curItem.locked = true;\r\n      }\r\n      if (curItem.note.match(hKey) != null) {\r\n        curItem.note = curItem.note.replace(regexp, '');\r\n        curItem.hidden = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Collect items\r\n * @param {(Object|Array)} obj - Items collection\r\n * @param {Array} arr - Output array with childrens\r\n */\r\nfunction getItems(obj, arr) {\r\n  for (var i = 0, len = obj.length; i < len; i++) {\r\n    var curItem = obj[i];\r\n    try {\r\n      switch (curItem.typename) {\r\n        case 'GroupItem':\r\n          arr.push(curItem);\r\n          getItems(curItem.pageItems, arr);\r\n          break;\r\n        default:\r\n          arr.push(curItem);\r\n          break;\r\n      }\r\n    } catch (e) {}\r\n  }\r\n}\r\n\r\n/**\r\n * Add zero to the file name before the indexes are less then size\r\n * @param {number} number - Copy number\r\n * @param {number} size - Length of the amount of copies\r\n * @return {string} Copy number with pre-filled zeros\r\n */\r\nfunction fillZero(number, size) {\r\n  var str = '000000000' + number;\r\n  return str.slice(str.length - size);\r\n}\r\n\r\n/**\r\n * Trick with temp pathItem to get the absolute coordinate of the artboard. Thanks to @moodyallen\r\n * @param {number} abIdx - Current artboard index\r\n * @return {Object} Absolute coordinates of the artboard\r\n */\r\nfunction getArtboardCoordinates(abIdx, lyrName) {\r\n  var doc = activeDocument,\r\n      thisAbRect = doc.artboards[abIdx].artboardRect, // The selected artboard size\r\n      tmpLayer;\r\n\r\n  try {\r\n    tmpLayer = doc.layers.getByName(lyrName);\r\n  } catch (e) {\r\n    tmpLayer = doc.layers.add();\r\n    tmpLayer.name = lyrName;\r\n  }\r\n\r\n  var fakePath = tmpLayer.pathItems.add();\r\n  var cnvsDelta = 1 + ((fakePath.position[0] * 2 - 16384) - (fakePath.position[1] * 2 + 16384)) / 2;\r\n  var cnvsTempPath = tmpLayer.pathItems.rectangle(fakePath.position[0] - cnvsDelta, fakePath.position[1] + cnvsDelta, 300, 300);\r\n  cnvsTempPath.filled = false;\r\n  cnvsTempPath.stroked  = false;\r\n\r\n  // Create a rectangle with the same size as the artboard\r\n  var top = thisAbRect[1],\r\n      left = thisAbRect[0],\r\n      width = thisAbRect[2] - thisAbRect[0],\r\n      height = thisAbRect[1] - thisAbRect[3];\r\n\r\n  var abTempPath = tmpLayer.pathItems.rectangle(top, left, width, height);\r\n  abTempPath.stroked  = false;\r\n  abTempPath.filled = false;\r\n\r\n  // Use the X, Y coordinates of cnvsTempPath and abTempPath to get the absolute coordinate\r\n  var absLeft = Math.floor(abTempPath.position[0] - cnvsTempPath.position[0]),\r\n      absTop = Math.floor(cnvsTempPath.position[1] - abTempPath.position[1]),\r\n      absBottom = absTop + height,\r\n      absRight = absLeft + width;\r\n\r\n  fakePath.remove();\r\n  abTempPath.remove();\r\n  cnvsTempPath.remove();\r\n  redraw();\r\n\r\n  return { 'left': absLeft, 'right': absRight, 'top': absTop, 'bottom': absBottom };\r\n}\r\n\r\n/**\r\n * Find out if the amount of copies over the canvas width\r\n * @param {Object} coord - Coordinates of the selected artboard\r\n * @param {number} copies - Amount of copies\r\n * @param {number} spacing - Distance between copies\r\n * @return {Object} Information about the extreme possible artboard\r\n */\r\nfunction isOverCnvsBounds(coord, copies, spacing, max) {\r\n  var lastAbRight = coord.right + (spacing + coord.right - coord.left) * copies,\r\n      tempEdge = lastAbRight;\r\n\r\n  // Get a safe amount of copies\r\n  for (var i = copies; i >= 0; i--) {\r\n    if (tempEdge <= max) break;\r\n    tempEdge = tempEdge - (spacing + coord.right - coord.left);\r\n  }\r\n\r\n  return { 'answer': lastAbRight > max, 'copies': i };\r\n}\r\n\r\n/**\r\n * Duplicate the selected artboard. Based on the idea of @Silly-V\r\n * @param {number} thisAbIdx - Current artboard index\r\n * @param {Object} items - Collection of items on the artboard\r\n * @param {number} spacing - Distance between copies\r\n * @param {string} suffix - Copy name suffix\r\n * @param {number} counter - Current copy number\r\n */\r\nfunction duplicateArtboard(thisAbIdx, items, spacing, suffix, counter) {\r\n  var doc = activeDocument,\r\n      thisAb = doc.artboards[thisAbIdx],\r\n      thisAbRect = thisAb.artboardRect,\r\n      idx = doc.artboards.length - 1,\r\n      lastAb = doc.artboards[idx],\r\n      lastAbRect = lastAb.artboardRect,\r\n      abWidth = thisAbRect[2] - thisAbRect[0];\r\n\r\n\tvar newAb = doc.artboards.add(thisAbRect);\r\n  if (counter === 0) {\r\n    newAb.artboardRect = [\r\n      thisAbRect[2] + spacing,\r\n      thisAbRect[1],\r\n      thisAbRect[2] + spacing + abWidth,\r\n      thisAbRect[3]\r\n    ];\r\n  } else {\r\n    newAb.artboardRect = [\r\n      lastAbRect[2] + spacing,\r\n      lastAbRect[1],\r\n      lastAbRect[2] + spacing + abWidth,\r\n      lastAbRect[3]\r\n    ];\r\n  }\r\n\tnewAb.name = thisAb.name + suffix;\r\n\r\n  var docCoordSystem = CoordinateSystem.DOCUMENTCOORDINATESYSTEM,\r\n      abCoordSystem = CoordinateSystem.ARTBOARDCOORDINATESYSTEM,\r\n      isDocCoords = app.coordinateSystem == docCoordSystem,\r\n      dupArr = getDuplicates(items);\r\n\r\n  // Move copied items to the new artboard\r\n  for (var i = 0, dLen = dupArr.length; i < dLen; i++) {\r\n    var pos = isDocCoords ? dupArr[i].position : doc.convertCoordinate(dupArr[i].position, docCoordSystem, abCoordSystem);\r\n    dupArr[i].position = [pos[0] + (abWidth + spacing) * (counter + 1), pos[1]];\r\n  }\r\n}\r\n\r\n/**\r\n * Duplicate all items\r\n * @param {Object} collection - Selected items on active artboard\r\n * @return {Array} arr - Duplicated items\r\n */\r\nfunction getDuplicates(collection) {\r\n  var arr = [];\r\n  for (var i = 0, len = collection.length; i < len; i++) {\r\n    arr.push(collection[i].duplicate());\r\n  }\r\n  return arr;\r\n}\r\n\r\n/**\r\n * Get active document ruler units\r\n * @return {string} Shortened units\r\n */\r\nfunction getUnits() {\r\n  if (!documents.length) return '';\r\n  var key = activeDocument.rulerUnits.toString().replace('RulerUnits.', '');\r\n  switch (key) {\r\n    case 'Pixels': return 'px';\r\n    case 'Points': return 'pt';\r\n    case 'Picas': return 'pc';\r\n    case 'Inches': return 'in';\r\n    case 'Millimeters': return 'mm';\r\n    case 'Centimeters': return 'cm';\r\n    // Added in CC 2023 v27.1.1\r\n    case 'Meters': return 'm';\r\n    case 'Feet': return 'ft';\r\n    case 'FeetInches': return 'ft';\r\n    case 'Yards': return 'yd';\r\n    // Parse new units in CC 2020-2023 if a document is saved\r\n    case 'Unknown':\r\n      var xmp = activeDocument.XMPString;\r\n      if (/stDim:unit/i.test(xmp)) {\r\n        var units = /<stDim:unit>(.*?)<\\/stDim:unit>/g.exec(xmp)[1];\r\n        if (units == 'Meters') return 'm';\r\n        if (units == 'Feet') return 'ft';\r\n        if (units == 'FeetInches') return 'ft';\r\n        if (units == 'Yards') return 'yd';\r\n        return 'px';\r\n      }\r\n      break;\r\n    default: return 'px';\r\n  }\r\n}\r\n\r\n/**\r\n * Convert units of measurement\r\n * @param {string} value - Numeric data\r\n * @param {string} curUnits - Document units \r\n * @param {string} newUnits - Final units\r\n * @return {number} Converted value \r\n */\r\nfunction convertUnits(value, curUnits, newUnits) {\r\n  return UnitValue(value, curUnits).as(newUnits);\r\n}\r\n\r\n/**\r\n * Convert string to absolute number\r\n * @param {string} str - Input data\r\n * @param {number} def - Default value if the string don't contain digits\r\n * @return {number}\r\n */\r\nfunction strToAbsNum(str, def) {\r\n  if (arguments.length == 1 || def == undefined) def = 1;\r\n  str = str.replace(/,/g, '.').replace(/[^\\d.]/g, '');\r\n  str = str.split('.');\r\n  str = str[0] ? str[0] + '.' + str.slice(1).join('') : '';\r\n  if (isNaN(str) || !str.length) return parseFloat(def);\r\n  else return parseFloat(str);\r\n}\r\n\r\n/**\r\n* Open link in browser\r\n* @param {string} url - Website adress\r\n*/\r\nfunction openURL(url) {\r\n  var html = new File(Folder.temp.absoluteURI + '/aisLink.html');\r\n  html.open('w');\r\n  var htmlBody = '<html><head><META HTTP-EQUIV=Refresh CONTENT=\"0; URL=' + url + '\"></head><body> <p></body></html>';\r\n  html.write(htmlBody);\r\n  html.close();\r\n  html.execute();\r\n}\r\n\r\ntry {\r\n  main();\r\n} catch (e) {}"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "复制画板",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                }
              ],
              "ElseSteps": null,
              "Note": "执行",
              "Disabled": false,
              "Collapsed": true,
              "DelayMs": 0
            }
          ],
          "ElseSteps": null,
          "Note": "",
          "Disabled": false,
          "Collapsed": true,
          "DelayMs": 0
        }
      ],
      "ElseSteps": [
        {
          "StepRunnerKey": "sys:notify",
          "InputParams": {
            "type": {
              "VarKey": null,
              "Value": "Info"
            },
            "msg": {
              "VarKey": null,
              "Value": "请在llustrator中运行动作"
            },
            "maxLines": {
              "VarKey": null,
              "Value": "0"
            },
            "style": {
              "VarKey": null,
              "Value": "Default"
            },
            "clickAction": {
              "VarKey": null,
              "Value": ""
            }
          },
          "OutputParams": {},
          "IfSteps": null,
          "ElseSteps": null,
          "Note": "",
          "Disabled": false,
          "Collapsed": false,
          "DelayMs": 0
        }
      ],
      "Note": "",
      "Disabled": false,
      "Collapsed": true,
      "DelayMs": 0
    }
  ]
}