{
  "LimitSingleInstance": true,
  "SummaryExpression": "$$",
  "SubPrograms": [
    {
      "Id": "3fdf7345-0162-45de-9323-4f6e2be1c2b6",
      "Icon": null,
      "Name": "执行js",
      "Description": "",
      "SummaryExpression": "$$",
      "CreateTimeUtc": "2022-08-26T03:42:09.1373283Z",
      "LastEditTimeUtc": "2022-08-26T03:47:18.3210375Z",
      "IsLocalEdited": true,
      "Variables": [
        {
          "Key": "选中值",
          "Type": 1,
          "Desc": "默认的文本变量",
          "DefaultValue": "",
          "SaveState": false,
          "IsInput": true,
          "IsOutput": false,
          "ParamName": "",
          "InputParamInfo": null,
          "OutputParamInfo": null,
          "TableDef": null,
          "CustomType": null,
          "Group": null
        },
        {
          "Key": "ps",
          "Type": 0,
          "Desc": "",
          "DefaultValue": "",
          "SaveState": false,
          "IsInput": false,
          "IsOutput": false,
          "ParamName": "",
          "InputParamInfo": null,
          "OutputParamInfo": null,
          "TableDef": null,
          "CustomType": null,
          "Group": null
        }
      ],
      "Steps": [],
      "SubPrograms": null,
      "TemplateId": null,
      "TemplateRevision": 0,
      "UseServerVersion": null,
      "IsProtected": null,
      "SharedId": null,
      "ShareTimeUtc": null
    },
    {
      "Id": "f60ff22b-4027-4b51-8ffe-8d67f990fc4d",
      "Icon": null,
      "Name": "RunScript",
      "Description": "",
      "SummaryExpression": "$$",
      "CreateTimeUtc": "2022-08-26T04:03:45.1014229Z",
      "LastEditTimeUtc": "2024-09-03T05:04:31.9744246Z",
      "IsLocalEdited": true,
      "Variables": [
        {
          "Key": "选中值",
          "Type": 0,
          "Desc": "默认的文本变量",
          "DefaultValue": "",
          "SaveState": false,
          "IsInput": true,
          "IsOutput": false,
          "ParamName": "",
          "InputParamInfo": null,
          "OutputParamInfo": null,
          "TableDef": null,
          "CustomType": null,
          "Group": null
        },
        {
          "Key": "path",
          "Type": 0,
          "Desc": "",
          "DefaultValue": "",
          "SaveState": false,
          "IsInput": false,
          "IsOutput": false,
          "ParamName": "",
          "InputParamInfo": null,
          "OutputParamInfo": null,
          "TableDef": null,
          "CustomType": null,
          "Group": null
        }
      ],
      "Steps": [
        {
          "StepRunnerKey": "sys:getActiveProcessInfo",
          "InputParams": {
            "stopIfFail": {
              "VarKey": null,
              "Value": "1"
            }
          },
          "OutputParams": {
            "path": "path",
            "procName": null,
            "pid": null,
            "isSuccess": null
          },
          "IfSteps": null,
          "ElseSteps": null,
          "Note": "",
          "Disabled": false,
          "Collapsed": false,
          "DelayMs": 0
        },
        {
          "StepRunnerKey": "sys:simpleIf",
          "InputParams": {
            "condition": {
              "VarKey": null,
              "Value": "$$ {选中值} == 1"
            }
          },
          "OutputParams": {},
          "IfSteps": [
            {
              "StepRunnerKey": "sys:runScript",
              "InputParams": {
                "script": {
                  "VarKey": null,
                  "Value": "// This script exports photoshop layers as individual PNGs. It also\r\n// writes a JSON file that can be imported into Spine where the images\r\n// will be displayed in the same positions and draw order.\r\n\r\n// Setting defaults.\r\nvar writePngs = true;\r\nvar writeTemplate = false;\r\nvar writeJson = true;\r\nvar ignoreHiddenLayers = true;\r\nvar pngScale = 1;\r\nvar groupsAsSkins = false;\r\nvar useRulerOrigin = false;\r\nvar imagesDir = \"./images/\";\r\nvar projectDir = \"\";\r\nvar padding = 1;\r\n\r\n// IDs for saving settings.\r\nconst settingsID = stringIDToTypeID(\"settings\");\r\nconst writePngsID = stringIDToTypeID(\"writePngs\");\r\nconst writeTemplateID = stringIDToTypeID(\"writeTemplate\");\r\nconst writeJsonID = stringIDToTypeID(\"writeJson\");\r\nconst ignoreHiddenLayersID = stringIDToTypeID(\"ignoreHiddenLayers\");\r\nconst groupsAsSkinsID = stringIDToTypeID(\"groupsAsSkins\");\r\nconst useRulerOriginID = stringIDToTypeID(\"useRulerOrigin\");\r\nconst pngScaleID = stringIDToTypeID(\"pngScale\");\r\nconst imagesDirID = stringIDToTypeID(\"imagesDir\");\r\nconst projectDirID = stringIDToTypeID(\"projectDir\");\r\nconst paddingID = stringIDToTypeID(\"padding\");\r\n\r\nvar originalDoc;\r\ntry {\r\n\toriginalDoc = app.activeDocument;\r\n} catch (ignored) {}\r\nvar settings, progress;\r\nloadSettings();\r\nshowDialog();\r\n\r\nfunction run () {\r\n\t// Output dirs.\r\n\tvar absProjectDir = absolutePath(projectDir);\r\n\tnew Folder(absProjectDir).create();\r\n\tvar absImagesDir = absolutePath(imagesDir);\r\n\tvar imagesFolder = new Folder(absImagesDir);\r\n\timagesFolder.create();\r\n\tvar relImagesDir = imagesFolder.getRelativeURI(absProjectDir);\r\n\trelImagesDir = relImagesDir == \".\" ? \"\" : (relImagesDir + \"/\");\r\n\r\n\t// Get ruler origin.\r\n\tvar xOffSet = 0, yOffSet = 0;\r\n\tif (useRulerOrigin) {\r\n\t\tvar ref = new ActionReference();\r\n\t\tref.putEnumerated(charIDToTypeID(\"Dcmn\"), charIDToTypeID(\"Ordn\"), charIDToTypeID(\"Trgt\"));\r\n\t\tvar desc = executeActionGet(ref);\r\n\t\txOffSet = desc.getInteger(stringIDToTypeID(\"rulerOriginH\")) >> 16;\r\n\t\tyOffSet = desc.getInteger(stringIDToTypeID(\"rulerOriginV\")) >> 16;\r\n\t}\r\n\r\n\tactiveDocument.duplicate();\r\n\r\n\t// Output template image.\r\n\tif (writeTemplate) {\r\n\t\tif (pngScale != 1) {\r\n\t\t\tscaleImage();\r\n\t\t\tstoreHistory();\r\n\t\t}\r\n\r\n\t\tvar file = new File(absImagesDir + \"template\" + \".png\");\r\n\t\tif (file.exists) file.remove();\r\n\r\n\t\tvar opts;\r\n\t\topts = new ExportOptionsSaveForWeb();\r\n\t\topts.format = SaveDocumentType.PNG;\r\n\t\topts.PNG8 = false;\r\n\t\topts.quality = 100;\r\n\r\n\t\tactiveDocument.exportDocument(file, ExportType.SAVEFORWEB, opts);\r\n\r\n\t\tif (pngScale != 1) restoreHistory();\r\n\t}\r\n\r\n\tif (!writeJson && !writePngs) {\r\n\t\tactiveDocument.close(SaveOptions.DONOTSAVECHANGES);\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Rasterize all layers.\r\n\ttry {\r\n\t\texecuteAction(stringIDToTypeID( \"rasterizeAll\" ), undefined, DialogModes.NO);\r\n\t} catch (ignored) {}\r\n\r\n\t// Collect and hide layers.\r\n\tvar layers = [];\r\n\tcollectLayers(activeDocument, layers);\r\n\tvar layersCount = layers.length;\r\n\r\n\tstoreHistory();\r\n\r\n\t// Store the slot names and layers for each skin.\r\n\tvar slots = {}, skins = { \"default\": [] };\r\n\tfor (var i = layersCount - 1; i >= 0; i--) {\r\n\t\tvar layer = layers[i];\r\n\r\n\t\t// Use groups as skin names.\r\n\t\tvar potentialSkinName = trim(layer.parent.name);\r\n\t\tvar layerGroupSkin = potentialSkinName.indexOf(\"-NOSKIN\") == -1;\r\n\t\tvar skinName = (groupsAsSkins && layer.parent.typename == \"LayerSet\" && layerGroupSkin) ? potentialSkinName : \"default\";\r\n\r\n\t\tvar skinLayers = skins[skinName];\r\n\t\tif (!skinLayers) skins[skinName] = skinLayers = [];\r\n\t\tskinLayers[skinLayers.length] = layer;\r\n\r\n\t\tslots[layerName(layer)] = true;\r\n\t}\r\n\r\n\t// Output skeleton and bones.\r\n\tvar json = '{\"skeleton\":{\"images\":\"' + relImagesDir + '\"},\\n\"bones\":[{\"name\":\"root\"}],\\n\"slots\":[\\n';\r\n\r\n\t// Output slots.\r\n\tvar slotsCount = countAssocArray(slots);\r\n\tvar slotIndex = 0;\r\n\tfor (var slotName in slots) {\r\n\t\tif (!slots.hasOwnProperty(slotName)) continue;\r\n\r\n\t\t// Use image prefix if slot's attachment is in the default skin.\r\n\t\tvar attachmentName = slotName;\r\n\t\tvar defaultSkinLayers = skins[\"default\"];\r\n\t\tfor (var i = defaultSkinLayers.length - 1; i >= 0; i--) {\r\n\t\t\tif (layerName(defaultSkinLayers[i]) == slotName) {\r\n\t\t\t\tattachmentName = slotName;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tjson += '\\t{\"name\":\"' + slotName + '\",\"bone\":\"root\",\"attachment\":\"' + attachmentName + '\"}';\r\n\t\tslotIndex++;\r\n\t\tjson += slotIndex < slotsCount ? \",\\n\" : \"\\n\";\r\n\t}\r\n\tjson += '],\\n\"skins\":{\\n';\r\n\r\n\t// Output skins.\r\n\tvar skinsCount = countAssocArray(skins);\r\n\tvar skinIndex = 0;\r\n\tfor (var skinName in skins) {\r\n\t\tif (!skins.hasOwnProperty(skinName)) continue;\r\n\t\tjson += '\\t\"' + skinName + '\":{\\n';\r\n\r\n\t\tvar skinLayers = skins[skinName];\r\n\t\tvar skinLayersCount = skinLayers.length;\r\n\t\tvar skinLayerIndex = 0;\r\n\t\tfor (var i = skinLayersCount - 1; i >= 0; i--) {\r\n\t\t\tvar layer = skinLayers[i];\r\n\t\t\tvar slotName = layerName(layer);\r\n\t\t\tvar placeholderName, attachmentName;\r\n\t\t\tif (skinName == \"default\") {\r\n\t\t\t\tplaceholderName = slotName;\r\n\t\t\t\tattachmentName = placeholderName;\r\n\t\t\t} else {\r\n\t\t\t\tplaceholderName = slotName;\r\n\t\t\t\tattachmentName = skinName + \"/\" + slotName;\r\n\t\t\t}\r\n\r\n\t\t\tvar x = activeDocument.width.as(\"px\") * pngScale;\r\n\t\t\tvar y = activeDocument.height.as(\"px\") * pngScale;\r\n\r\n\t\t\tlayer.visible = true;\r\n\t\t\tif (!layer.isBackgroundLayer) activeDocument.trim(TrimType.TRANSPARENT, false, true, true, false);\r\n\t\t\tx -= activeDocument.width.as(\"px\") * pngScale;\r\n\t\t\ty -= activeDocument.height.as(\"px\") * pngScale;\r\n\t\t\tif (!layer.isBackgroundLayer) activeDocument.trim(TrimType.TRANSPARENT, true, false, false, true);\r\n\t\t\tvar width = activeDocument.width.as(\"px\") * pngScale + padding * 2;\r\n\t\t\tvar height = activeDocument.height.as(\"px\") * pngScale + padding * 2;\r\n\r\n\t\t\t// Save image.\r\n\t\t\tif (writePngs) {\r\n\t\t\t\tif (pngScale != 1) scaleImage();\r\n\t\t\t\tif (padding > 0) activeDocument.resizeCanvas(width, height, AnchorPosition.MIDDLECENTER);\r\n\r\n\t\t\t\tif (skinName != \"default\") new Folder(absImagesDir + skinName).create();\r\n\r\n\t\t\t\tvar opts;\r\n\t\t\t\topts = new ExportOptionsSaveForWeb();\r\n\t\t\t\topts.format = SaveDocumentType.PNG;\r\n\t\t\t\topts.PNG8 = false;\r\n\t\t\t\topts.quality = 100;\r\n\r\n\t\t\t\tactiveDocument.exportDocument(new File(absImagesDir + attachmentName + \".png\"), ExportType.SAVEFORWEB, opts);\r\n\t\t\t}\r\n\r\n\t\t\trestoreHistory();\r\n\t\t\tlayer.visible = false;\r\n\r\n\t\t\tx += Math.round(width) / 2;\r\n\t\t\ty += Math.round(height) / 2;\r\n\r\n\t\t\t// Make relative to the Photoshop document ruler origin.\r\n\t\t\tif (useRulerOrigin) {\r\n\t\t\t\tx -= xOffSet * pngScale;\r\n\t\t\t\ty -= activeDocument.height.as(\"px\") * pngScale - yOffSet * pngScale; // Invert y.\r\n\t\t\t}\r\n\r\n\t\t\tif (attachmentName == placeholderName) {\r\n\t\t\t\tjson += '\\t\\t\"' + slotName + '\":{\"' + placeholderName + '\":{'\r\n\t\t\t\t\t+ '\"x\":' + x + ',\"y\":' + y + ',\"width\":' + Math.round(width) + ',\"height\":' + Math.round(height) + '}}';\r\n\t\t\t} else {\r\n\t\t\t\tjson += '\\t\\t\"' + slotName + '\":{\"' + placeholderName + '\":{\"name\":\"' + attachmentName + '\", '\r\n\t\t\t\t\t+ '\"x\":' + x + ',\"y\":' + y + ',\"width\":' + Math.round(width) + ',\"height\":' + Math.round(height) + '}}';\r\n\t\t\t}\r\n\r\n\t\t\tskinLayerIndex++;\r\n\t\t\tjson += skinLayerIndex < skinLayersCount ? \",\\n\" : \"\\n\";\r\n\t\t}\r\n\t\tjson += \"\\t\\}\";\r\n\r\n\t\tskinIndex++;\r\n\t\tjson += skinIndex < skinsCount ? \",\\n\" : \"\\n\";\r\n\t}\r\n\tjson += '},\\n\"animations\":{\"animation\":{}}\\n}';\r\n\r\n\tactiveDocument.close(SaveOptions.DONOTSAVECHANGES);\r\n\r\n\t// Output JSON file.\r\n\tif (writeJson) {\r\n\t\tvar name = decodeURI(originalDoc.name);\r\n\t\tname = name.substring(0, name.indexOf(\".\"));\r\n\t\tvar file = new File(absProjectDir + name + \".json\");\r\n\t\tfile.remove();\r\n\t\tfile.open(\"w\", \"TEXT\");\r\n\t\tfile.lineFeed = \"\\n\";\r\n\t\tfile.write(json);\r\n\t\tfile.close();\r\n\t}\r\n}\r\n\r\n// Dialog and settings:\r\n\r\nfunction showDialog () {\r\n\tif (!originalDoc) {\r\n\t\talert(\"请打开一个文件在运行 LayersToPNG 脚本.\");\r\n\t\treturn;\r\n\t}\r\n\tif (!hasFilePath()) {\r\n\t\talert(\"请在运行 LayersToPNG 之前保存该文档.\");\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar dialog = new Window(\"dialog\", \"Spine LayersToPNG\");\r\n\tdialog.alignChildren = \"fill\";\r\n\r\n\tvar checkboxGroup = dialog.add(\"group\");\r\n\t\tvar group = checkboxGroup.add(\"group\");\r\n\t\t\tgroup.orientation = \"column\";\r\n\t\t\tgroup.alignChildren = \"left\";\r\n\t\t\tvar writePngsCheckbox = group.add(\"checkbox\", undefined, \" 导出 PNG\");\r\n\t\t\twritePngsCheckbox.value = writePngs;\r\n\t\t\tvar writeTemplateCheckbox = group.add(\"checkbox\", undefined, \" 编写模板 PNG\");\r\n\t\t\twriteTemplateCheckbox.value = writeTemplate;\r\n\t\t\tvar writeJsonCheckbox = group.add(\"checkbox\", undefined, \" 导出 JSON\");\r\n\t\t\twriteJsonCheckbox.value = writeJson;\r\n\t\tgroup = checkboxGroup.add(\"group\");\r\n\t\t\tgroup.orientation = \"column\";\r\n\t\t\tgroup.alignChildren = \"left\";\r\n\t\t\tvar ignoreHiddenLayersCheckbox = group.add(\"checkbox\", undefined, \" 忽略隐藏图层\");\r\n\t\t\tignoreHiddenLayersCheckbox.value = ignoreHiddenLayers;\r\n\t\t\tvar groupsAsSkinsCheckbox = group.add(\"checkbox\", undefined, \" 使用组作为皮肤\");\r\n\t\t\tgroupsAsSkinsCheckbox.value = groupsAsSkins;\r\n\t\t\tvar useRulerOriginCheckbox = group.add(\"checkbox\", undefined, \" 使用标尺原点为 0,0\");\r\n\t\t\tuseRulerOriginCheckbox.value = useRulerOrigin;\r\n\r\n\tvar slidersGroup = dialog.add(\"group\");\r\n\t\tgroup = slidersGroup.add(\"group\");\r\n\t\t\tgroup.orientation = \"column\";\r\n\t\t\tgroup.alignChildren = \"right\";\r\n\t\t\tgroup.add(\"statictext\", undefined, \"PNG比例:\");\r\n\t\t\tgroup.add(\"statictext\", undefined, \"边缘像素:\");\r\n\t\tgroup = slidersGroup.add(\"group\");\r\n\t\t\tgroup.orientation = \"column\";\r\n\t\t\tvar scaleText = group.add(\"edittext\", undefined, pngScale * 100);\r\n\t\t\tscaleText.characters = 4;\r\n\t\t\tvar paddingText = group.add(\"edittext\", undefined, padding);\r\n\t\t\tpaddingText.characters = 4;\r\n\t\tgroup = slidersGroup.add(\"group\");\r\n\t\t\tgroup.orientation = \"column\";\r\n\t\t\tgroup.add(\"statictext\", undefined, \"%\");\r\n\t\t\tgroup.add(\"statictext\", undefined, \"px\");\r\n\t\tgroup = slidersGroup.add(\"group\");\r\n\t\t\tgroup.alignment = [\"fill\", \"\"];\r\n\t\t\tgroup.orientation = \"column\";\r\n\t\t\tgroup.alignChildren = [\"fill\", \"\"];\r\n\t\t\tvar scaleSlider = group.add(\"slider\", undefined, pngScale * 100, 1, 100);\r\n\t\t\tvar paddingSlider = group.add(\"slider\", undefined, padding, 0, 4);\r\n\tscaleText.onChanging = function () { scaleSlider.value = scaleText.text; };\r\n\tscaleSlider.onChanging = function () { scaleText.text = Math.round(scaleSlider.value); };\r\n\tpaddingText.onChanging = function () { paddingSlider.value = paddingText.text; };\r\n\tpaddingSlider.onChanging = function () { paddingText.text = Math.round(paddingSlider.value); };\r\n\r\n\tvar outputGroup = dialog.add(\"panel\", undefined, \"输出目录\");\r\n\t\toutputGroup.alignChildren = \"fill\";\r\n\t\toutputGroup.margins = [10,15,10,10];\r\n\t\tvar textGroup = outputGroup.add(\"group\");\r\n\t\t\tgroup = textGroup.add(\"group\");\r\n\t\t\t\tgroup.orientation = \"column\";\r\n\t\t\t\tgroup.alignChildren = \"right\";\r\n\t\t\t\tgroup.add(\"statictext\", undefined, \"图片:\");\r\n\t\t\t\tgroup.add(\"statictext\", undefined, \"JSON:\");\r\n\t\t\tgroup = textGroup.add(\"group\");\r\n\t\t\t\tgroup.orientation = \"column\";\r\n\t\t\t\tgroup.alignChildren = \"fill\";\r\n\t\t\t\tgroup.alignment = [\"fill\", \"\"];\r\n\t\t\t\tvar imagesDirText = group.add(\"edittext\", undefined, imagesDir);\r\n\t\t\t\tvar projectDirText = group.add(\"edittext\", undefined, projectDir);\r\n\t\toutputGroup.add(\"statictext\", undefined, \"Begin paths with \\\"./\\\" to be relative to the PSD file.\").alignment = \"center\";\r\n\r\n\tvar group = dialog.add(\"group\");\r\n\t\tgroup.alignment = \"center\";\r\n\t\tvar runButton = group.add(\"button\", undefined, \"确定\");\r\n\t\tvar cancelButton = group.add(\"button\", undefined, \"取消\");\r\n\t\tcancelButton.onClick = function () {\r\n\t\t\tdialog.close(0);\r\n\t\t\treturn;\r\n\t\t};\r\n\r\n\tfunction updateSettings () {\r\n\t\twritePngs = writePngsCheckbox.value;\r\n\t\twriteTemplate = writeTemplateCheckbox.value;\r\n\t\twriteJson = writeJsonCheckbox.value;\r\n\t\tignoreHiddenLayers = ignoreHiddenLayersCheckbox.value;\r\n\t\tvar scaleValue = parseFloat(scaleText.text);\r\n\t\tif (scaleValue > 0 && scaleValue <= 100) pngScale = scaleValue / 100;\r\n\t\tgroupsAsSkins = groupsAsSkinsCheckbox.value;\r\n\t\tuseRulerOrigin = useRulerOriginCheckbox.value;\r\n\t\timagesDir = imagesDirText.text;\r\n\t\tprojectDir = projectDirText.text;\r\n\t\tvar paddingValue = parseInt(paddingText.text);\r\n\t\tif (paddingValue >= 0) padding = paddingValue;\r\n\t}\r\n\r\n\tdialog.onClose = function() {\r\n\t\tupdateSettings();\r\n\t\tsaveSettings();\r\n\t};\r\n\t\r\n\trunButton.onClick = function () {\r\n\t\tif (scaleText.text <= 0 || scaleText.text > 100) {\r\n\t\t\talert(\"PNG scale must be between > 0 and <= 100.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (paddingText.text < 0) {\r\n\t\t\talert(\"Padding must be >= 0.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdialog.close(0);\r\n\r\n\t\tvar rulerUnits = app.preferences.rulerUnits;\r\n\t\tapp.preferences.rulerUnits = Units.PIXELS;\r\n\t\ttry {\r\n\t\t\trun();\r\n\t\t} catch (e) {\r\n\t\t\talert(\"An unexpected error has occurred.\\n\\nTo debug, run the LayersToPNG script using Adobe ExtendScript \"\r\n\t\t\t\t+ \"with \\\"Debug > Do not break on guarded exceptions\\\" unchecked.\");\r\n\t\t\tdebugger;\r\n\t\t} finally {\r\n\t\t\tif (activeDocument != originalDoc) activeDocument.close(SaveOptions.DONOTSAVECHANGES);\r\n\t\t\tapp.preferences.rulerUnits = rulerUnits;\r\n\t\t}\r\n\t};\r\n\r\n\tdialog.center();\r\n\tdialog.show();\r\n}\r\n\r\nfunction loadSettings () {\r\n\ttry {\r\n\t\tsettings = app.getCustomOptions(settingsID);\r\n\t} catch (e) {\r\n\t\tsaveSettings();\r\n\t}\r\n\tif (typeof settings == \"undefined\") saveSettings();\r\n\tsettings = app.getCustomOptions(settingsID);\r\n\tif (settings.hasKey(writePngsID)) writePngs = settings.getBoolean(writePngsID);\r\n\tif (settings.hasKey(writeTemplateID)) writeTemplate = settings.getBoolean(writeTemplateID);\r\n\tif (settings.hasKey(writeJsonID)) writeJson = settings.getBoolean(writeJsonID);\r\n\tif (settings.hasKey(ignoreHiddenLayersID)) ignoreHiddenLayers = settings.getBoolean(ignoreHiddenLayersID);\r\n\tif (settings.hasKey(pngScaleID)) pngScale = settings.getDouble(pngScaleID);\r\n\tif (settings.hasKey(groupsAsSkinsID)) groupsAsSkins = settings.getBoolean(groupsAsSkinsID);\r\n\tif (settings.hasKey(useRulerOriginID)) useRulerOrigin = settings.getBoolean(useRulerOriginID);\r\n\tif (settings.hasKey(imagesDirID)) imagesDir = settings.getString(imagesDirID);\r\n\tif (settings.hasKey(projectDirID)) projectDir = settings.getString(projectDirID);\r\n\tif (settings.hasKey(paddingID)) padding = settings.getDouble(paddingID);\r\n}\r\n\r\nfunction saveSettings () {\r\n\tvar settings = new ActionDescriptor();\r\n\tsettings.putBoolean(writePngsID, writePngs);\r\n\tsettings.putBoolean(writeTemplateID, writeTemplate);\r\n\tsettings.putBoolean(writeJsonID, writeJson);\r\n\tsettings.putBoolean(ignoreHiddenLayersID, ignoreHiddenLayers);\r\n\tsettings.putDouble(pngScaleID, pngScale);\r\n\tsettings.putBoolean(groupsAsSkinsID, groupsAsSkins);\r\n\tsettings.putBoolean(useRulerOriginID, useRulerOrigin);\r\n\tsettings.putString(imagesDirID, imagesDir);\r\n\tsettings.putString(projectDirID, projectDir);\r\n\tsettings.putDouble(paddingID, padding);\r\n\tapp.putCustomOptions(settingsID, settings, true);\r\n}\r\n\r\n// Photoshop utility:\r\n\r\nfunction scaleImage () {\r\n\tvar imageSize = activeDocument.width.as(\"px\");\r\n\tactiveDocument.resizeImage(UnitValue(imageSize * pngScale, \"px\"), null, null, ResampleMethod.BICUBICSHARPER);\r\n}\r\n\r\nvar historyIndex;\r\nfunction storeHistory () {\r\n\thistoryIndex = activeDocument.historyStates.length - 1;\r\n}\r\nfunction restoreHistory () {\r\n\tactiveDocument.activeHistoryState = activeDocument.historyStates[historyIndex];\r\n}\r\n\r\nfunction collectLayers (layer, collect) {\r\n\tfor (var i = 0, n = layer.layers.length; i < n; i++) {\r\n\t\tvar child = layer.layers[i];\r\n\t\tif (ignoreHiddenLayers && !child.visible) continue;\r\n\t\tif (child.bounds[2] == 0 && child.bounds[3] == 0) continue;\r\n\t\tif (child.layers && child.layers.length > 0)\r\n\t\t\tcollectLayers(child, collect);\r\n\t\telse if (child.kind == LayerKind.NORMAL) {\r\n\t\t\tcollect.push(child);\r\n\t\t\tchild.visible = false;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction hasFilePath () {\r\n\tvar ref = new ActionReference();\r\n\tref.putEnumerated(charIDToTypeID(\"Dcmn\"), charIDToTypeID(\"Ordn\"), charIDToTypeID(\"Trgt\"));\r\n\treturn executeActionGet(ref).hasKey(stringIDToTypeID(\"fileReference\"));\r\n}\r\n\r\nfunction absolutePath (path) {\r\n\tpath = trim(path);\r\n\tif (path.length == 0)\r\n\t\tpath = activeDocument.path.toString();\r\n\telse if (imagesDir.indexOf(\"./\") == 0)\r\n\t\tpath = activeDocument.path + path.substring(1);\r\n\tpath = path.replace(/\\\\/g, \"/\");\r\n\tif (path.substring(path.length - 1) != \"/\") path += \"/\";\r\n\treturn path;\r\n}\r\n\r\n// JavaScript utility:\r\n\r\nfunction countAssocArray (obj) {\r\n\tvar count = 0;\r\n\tfor (var key in obj)\r\n\t\tif (obj.hasOwnProperty(key)) count++;\r\n\treturn count;\r\n}\r\n\r\nfunction trim (value) {\r\n\treturn value.replace(/^\\s+|\\s+$/g, \"\");\r\n}\r\n\r\nfunction endsWith (str, suffix) {\r\n\treturn str.indexOf(suffix, str.length - suffix.length) !== -1;\r\n}\r\n\r\nfunction stripSuffix (str, suffix) {\r\n\tif (endsWith(str.toLowerCase(), suffix.toLowerCase())) str = str.substring(0, str.length - suffix.length);\r\n\treturn str;\r\n}\r\n\r\nfunction layerName (layer) {\r\n\treturn stripSuffix(trim(layer.name), \".png\").replace(/[:\\/\\\\*\\?\\\"\\<\\>\\|]/g, \"\");\r\n}\r\n"
                },
                "type": {
                  "VarKey": null,
                  "Value": "CUSTOM"
                },
                "ext": {
                  "VarKey": null,
                  "Value": ".jsx"
                },
                "encoding": {
                  "VarKey": null,
                  "Value": "default"
                },
                "runner": {
                  "VarKey": "选中值",
                  "Value": null
                },
                "argTemplate": {
                  "VarKey": null,
                  "Value": "%FILE%"
                },
                "outputEncoding": {
                  "VarKey": null,
                  "Value": "oem"
                },
                "workingDir": {
                  "VarKey": null,
                  "Value": ""
                },
                "runAsAdmin": {
                  "VarKey": null,
                  "Value": "0"
                },
                "waitToExit": {
                  "VarKey": null,
                  "Value": "0"
                }
              },
              "OutputParams": {
                "stdout": null,
                "stdoutOnly": null,
                "stderr": null
              },
              "IfSteps": null,
              "ElseSteps": null,
              "Note": "",
              "Disabled": false,
              "Collapsed": false,
              "DelayMs": 0
            }
          ],
          "ElseSteps": null,
          "Note": "LayersToPNG",
          "Disabled": false,
          "Collapsed": true,
          "DelayMs": 0
        },
        {
          "StepRunnerKey": "sys:simpleIf",
          "InputParams": {
            "condition": {
              "VarKey": null,
              "Value": "$= {选中值} == 2"
            }
          },
          "OutputParams": {},
          "IfSteps": [
            {
              "StepRunnerKey": "sys:runScript",
              "InputParams": {
                "script": {
                  "VarKey": null,
                  "Value": "//  photoshopscripts.wordpress.com\r\n\r\n////////////////////////////////////\r\n//       Split to Layers 1.0      //\r\n//       2012, David Jensen       //\r\n//                                //\r\n//         With help from         //\r\n//   pfaffenbichler and xbytor    //\r\n//        at ps-scripts.com       //\r\n////////////////////////////////////\r\n\r\n#target photoshop\r\n\r\n//更改以下5个值中的任何一个以自定义脚本的默认选项:\r\n\r\nvar showOptionsDialog = true; //设置为false以禁用对用户的提示.\r\nvar tolerance = 0;            // 将被忽略的透明像素的最大间隙。还设置默认值\r\nvar confirmThreshold = 20;    // 如果脚本要生成大量层，请提示用户确认这是正常的\r\nvar suffix = \"_\";           // 将此添加到新层的层名称中。设置为“”，不添加任何内容。\r\nvar addCount = true;          // 在每个新层的末尾添加一个数字\r\n\r\n\r\n///////////////////////////////////////\r\n///////////////////////////////////////\r\n///////////////////////////////////////\r\n///////////////////////////////////////\r\n///////////////////////////////////////\r\nvar layerNamePreview=activeDocument.activeLayer.name + suffix;\r\nif (addCount === true){\r\n    layerNamePreview += \"1\";\r\n}\r\n\r\nvar originalRulerUnits = app.preferences.rulerUnits;\r\napp.preferences.rulerUnits = Units.POINTS;\r\n\r\nbounds = activeDocument.activeLayer.bounds\r\nvar emptyLayer=false;\r\nif (Number(bounds[0]) == 0 && Number(bounds[1]) == 0 && Number(bounds[2]) == 0 && Number(bounds[3]) == 0) {emptyLayer = true};\r\n\r\ntry{\r\n    if (activeDocument.activeLayer.kind != undefined && activeDocument.activeLayer.isBackgroundLayer == false && emptyLayer == false){\r\n        activeDocument.suspendHistory(\"Separate\", \"main()\");\r\n    }else{\r\n        alert( \"没有选择支持的图层类型.\");\r\n    }\r\n}catch(err){\r\n    alert(err)\r\n}\r\n\r\napp.preferences.rulerUnits = originalRulerUnits;\r\n\r\nfunction main() {\r\n        \r\n    var ok=createDialog();\r\n    if (ok===2){\r\n        activeDocument.selection.deselect()\r\n        return false;\r\n    }\r\n    baseLayer=activeDocument.activeLayer;\r\n    activeDocument.quickMaskMode = false;\r\n    activeDocument.selection.deselect()\r\n    var layerName = activeDocument.activeLayer.name\r\n    //如果无法进行选择，请停止运行脚本\r\n  \r\n \r\n    var idCpTL = charIDToTypeID(\"CpTL\");\r\n    executeAction(idCpTL, undefined, DialogModes.NO);\r\n    \r\n    activeDocument.activeLayer.rasterize(RasterizeType.ENTIRELAYER)\r\n    try{\r\n        var idDlt = charIDToTypeID( \"Dlt \" );\r\n        var desc120 = new ActionDescriptor();\r\n        var idnull = charIDToTypeID( \"null\" );\r\n        var ref112 = new ActionReference();\r\n        var idChnl = charIDToTypeID( \"Chnl\" );\r\n        var idChnl = charIDToTypeID( \"Chnl\" );\r\n        var idMsk = charIDToTypeID( \"Msk \" );\r\n        ref112.putEnumerated( idChnl, idChnl, idMsk );\r\n        desc120.putReference( idnull, ref112 );\r\n        var idAply = charIDToTypeID( \"Aply\" );\r\n        desc120.putBoolean( idAply, true );\r\n        executeAction( idDlt, desc120, DialogModes.NO );\r\n    }catch(e){}\r\n    \r\n    \r\n    \r\n    activeDocument.activeLayer.name = layerName\r\n\r\n    baseLayer=activeDocument.activeLayer\r\n\r\n\r\n    \r\n    makeSelection()\r\n\r\n    var idMk = charIDToTypeID(\"Mk  \");\r\n    var desc642 = new ActionDescriptor();\r\n    var idNw = charIDToTypeID(\"Nw  \");\r\n    var idDcmn = charIDToTypeID(\"Dcmn\");\r\n    desc642.putClass(idNw, idDcmn);\r\n    var idUsng = charIDToTypeID(\"Usng\");\r\n    var ref535 = new ActionReference();\r\n    var idChnl = charIDToTypeID(\"Chnl\");\r\n    var idOrdn = charIDToTypeID(\"Ordn\");\r\n    var idTrgt = charIDToTypeID(\"Trgt\");\r\n    ref535.putEnumerated(idChnl, idOrdn, idTrgt);\r\n    desc642.putReference(idUsng, ref535);\r\n    executeAction(idMk, desc642, DialogModes.NO);\r\n\r\n    newDoc = activeDocument\r\n    // =======================================================\r\n    activeDocument.resizeImage(\"200%\", \"200%\", undefined, ResampleMethod.NEARESTNEIGHBOR)\r\n\r\n    // =======================================================\r\n    var idsetd = charIDToTypeID(\"setd\");\r\n    var desc934 = new ActionDescriptor();\r\n    var idnull = charIDToTypeID(\"null\");\r\n    var ref535 = new ActionReference();\r\n    var idChnl = charIDToTypeID(\"Chnl\");\r\n    var idfsel = charIDToTypeID(\"fsel\");\r\n    ref535.putProperty(idChnl, idfsel);\r\n    desc934.putReference(idnull, ref535);\r\n    var idT = charIDToTypeID(\"T   \");\r\n    var ref536 = new ActionReference();\r\n    var idChnl = charIDToTypeID(\"Chnl\");\r\n    var idOrdn = charIDToTypeID(\"Ordn\");\r\n    var idTrgt = charIDToTypeID(\"Trgt\");\r\n    ref536.putEnumerated(idChnl, idOrdn, idTrgt);\r\n    desc934.putReference(idT, ref536);\r\n    executeAction(idsetd, desc934, DialogModes.NO);\r\n\r\n\r\n    var idMk = charIDToTypeID(\"Mk  \");\r\n    var desc403 = new ActionDescriptor();\r\n    var idnull = charIDToTypeID(\"null\");\r\n    var ref288 = new ActionReference();\r\n    var idPath = charIDToTypeID(\"Path\");\r\n    ref288.putClass(idPath);\r\n    desc403.putReference(idnull, ref288);\r\n    var idFrom = charIDToTypeID(\"From\");\r\n    var ref289 = new ActionReference();\r\n    var idcsel = charIDToTypeID(\"csel\");\r\n    var idfsel = charIDToTypeID(\"fsel\");\r\n    var idfsel = charIDToTypeID(\"fsel\");\r\n    ref289.putProperty(idcsel, idfsel);\r\n    desc403.putReference(idFrom, ref289);\r\n    var idTlrn = charIDToTypeID(\"Tlrn\");\r\n    var idPxl = charIDToTypeID(\"#Pxl\");\r\n    desc403.putUnitDouble(idTlrn, idPxl, 0.500000);\r\n    executeAction(idMk, desc403, DialogModes.NO);\r\n    \r\n    var subPathsLength = activeDocument.pathItems[0].subPathItems.length\r\n    \r\n    if (subPathsLength>confirmThreshold){\r\n        var answer = confirm(\"Up to \"+subPathsLength+ \" layers will be created. Would you like to continue?\",true)\r\n        if (answer === false){\r\n            newDoc.close(SaveOptions.DONOTSAVECHANGES);\r\n            activeDocument.quickMaskMode = false;\r\n            activeDocument.selection.deselect();\r\n            return 0;\r\n        }\r\n    \r\n    }\r\n\r\n    // =======================================================\r\n    activeDocument.resizeImage(\"50%\", \"50%\", undefined, ResampleMethod.NEARESTNEIGHBOR)\r\n\r\n    var pathInfo = collectPathInfoFromDesc(activeDocument, activeDocument.pathItems[activeDocument.pathItems.length - 1])\r\n    \r\n    // =======================================================\r\n    newDoc.close(SaveOptions.DONOTSAVECHANGES)\r\n\r\n    // =======================================================\r\n    activeDocument.quickMaskMode = false\r\n\r\n    // =======================================================\r\n    //制作频道\r\n    // =======================================================\r\n    var idMk = charIDToTypeID(\"Mk  \");\r\n    var desc6 = new ActionDescriptor();\r\n    var idNw = charIDToTypeID(\"Nw  \");\r\n    var desc7 = new ActionDescriptor();\r\n    var idNm = charIDToTypeID(\"Nm  \");\r\n    desc7.putString(idNm, \"ContiguityMask\");\r\n    var idClrI = charIDToTypeID(\"ClrI\");\r\n    var idMskI = charIDToTypeID(\"MskI\");\r\n    var idMskA = charIDToTypeID(\"MskA\");\r\n    desc7.putEnumerated(idClrI, idMskI, idMskA);\r\n    var idClr = charIDToTypeID(\"Clr \");\r\n    var desc8 = new ActionDescriptor();\r\n    var idRd = charIDToTypeID(\"Rd  \");\r\n    desc8.putDouble(idRd, 255.000000);\r\n    var idGrn = charIDToTypeID(\"Grn \");\r\n    desc8.putDouble(idGrn, 0.000000);\r\n    var idBl = charIDToTypeID(\"Bl  \");\r\n    desc8.putDouble(idBl, 0.000000);\r\n    var idRGBC = charIDToTypeID(\"RGBC\");\r\n    desc7.putObject(idClr, idRGBC, desc8);\r\n    var idOpct = charIDToTypeID(\"Opct\");\r\n    desc7.putInteger(idOpct, 50);\r\n    var idChnl = charIDToTypeID(\"Chnl\");\r\n    desc6.putObject(idNw, idChnl, desc7);\r\n    var idUsng = charIDToTypeID(\"Usng\");\r\n    var ref5 = new ActionReference();\r\n    var idChnl = charIDToTypeID(\"Chnl\");\r\n    var idfsel = charIDToTypeID(\"fsel\");\r\n    ref5.putProperty(idChnl, idfsel);\r\n    desc6.putReference(idUsng, ref5);\r\n    executeAction(idMk, desc6, DialogModes.NO);\r\n\r\n\r\n    var layerCount = 1\r\n    for (i = 0; i < subPathsLength; i++) {\r\n        //deselect\r\n        var idsetd = charIDToTypeID(\"setd\");\r\n        var desc279 = new ActionDescriptor();\r\n        var idnull = charIDToTypeID(\"null\");\r\n        var ref137 = new ActionReference();\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idfsel = charIDToTypeID(\"fsel\");\r\n        ref137.putProperty(idChnl, idfsel);\r\n        desc279.putReference(idnull, ref137);\r\n        var idT = charIDToTypeID(\"T   \");\r\n        var idOrdn = charIDToTypeID(\"Ordn\");\r\n        var idNone = charIDToTypeID(\"None\");\r\n        desc279.putEnumerated(idT, idOrdn, idNone);\r\n        executeAction(idsetd, desc279, DialogModes.NO);\r\n        ///select alpha channel\r\n        var idslct = charIDToTypeID(\"slct\");\r\n        var desc315 = new ActionDescriptor();\r\n        var idnull = charIDToTypeID(\"null\");\r\n        var ref175 = new ActionReference();\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        ref175.putName(idChnl, \"ContiguityMask\");\r\n        desc315.putReference(idnull, ref175);\r\n        executeAction(idslct, desc315, DialogModes.NO);\r\n        //use magic wand\r\n        var idsetd = charIDToTypeID(\"setd\");\r\n        var desc263 = new ActionDescriptor();\r\n        var idnull = charIDToTypeID(\"null\");\r\n        var ref123 = new ActionReference();\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idfsel = charIDToTypeID(\"fsel\");\r\n        ref123.putProperty(idChnl, idfsel);\r\n        desc263.putReference(idnull, ref123);\r\n        var idT = charIDToTypeID(\"T   \");\r\n        var desc264 = new ActionDescriptor();\r\n        var idHrzn = charIDToTypeID(\"Hrzn\");\r\n        var idRlt = charIDToTypeID(\"#Rlt\");\r\n        desc264.putUnitDouble(idHrzn, idRlt, pathInfo[i][0][0]);\r\n        var idVrtc = charIDToTypeID(\"Vrtc\");\r\n        var idRlt = charIDToTypeID(\"#Rlt\");\r\n\r\n        desc264.putUnitDouble(idVrtc, idRlt, pathInfo[i][0][1]);\r\n        var idPnt = charIDToTypeID(\"Pnt \");\r\n        desc263.putObject(idT, idPnt, desc264);\r\n        var idTlrn = charIDToTypeID(\"Tlrn\");\r\n        desc263.putInteger(idTlrn, 1);\r\n        executeAction(idsetd, desc263, DialogModes.NO);\r\n\r\n        var idslct = charIDToTypeID(\"slct\");\r\n        var desc346 = new ActionDescriptor();\r\n        var idnull = charIDToTypeID(\"null\");\r\n        var ref205 = new ActionReference();\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idRGB = charIDToTypeID(\"RGB \");\r\n        ref205.putEnumerated(idChnl, idChnl, idRGB);\r\n        desc346.putReference(idnull, ref205);\r\n        var idMkVs = charIDToTypeID(\"MkVs\");\r\n        desc346.putBoolean(idMkVs, false);\r\n        executeAction(idslct, desc346, DialogModes.NO);\r\n\r\n\r\n\r\n\r\n        try {\r\n            // =======================================================\r\n            var idCpTL = charIDToTypeID(\"CpTL\");\r\n            executeAction(idCpTL, undefined, DialogModes.NO);\r\n\r\n            try {\r\n                var idrasterizeLayer = stringIDToTypeID(\"rasterizeLayer\");\r\n                var desc924 = new ActionDescriptor();\r\n                var idnull = charIDToTypeID(\"null\");\r\n                var ref721 = new ActionReference();\r\n                var idLyr = charIDToTypeID(\"Lyr \");\r\n                var idOrdn = charIDToTypeID(\"Ordn\");\r\n                var idTrgt = charIDToTypeID(\"Trgt\");\r\n                ref721.putEnumerated(idLyr, idOrdn, idTrgt);\r\n                desc924.putReference(idnull, ref721);\r\n                var idWhat = charIDToTypeID(\"What\");\r\n                var idrasterizeItem = stringIDToTypeID(\"rasterizeItem\");\r\n                var idvectorMask = stringIDToTypeID(\"vectorMask\");\r\n                desc924.putEnumerated(idWhat, idrasterizeItem, idvectorMask);\r\n                executeAction(idrasterizeLayer, desc924, DialogModes.NO);\r\n            } catch (err) {}\r\n\r\n            try {\r\n                var idIntr = charIDToTypeID(\"Intr\");\r\n                var desc864 = new ActionDescriptor();\r\n                var idnull = charIDToTypeID(\"null\");\r\n                var ref658 = new ActionReference();\r\n                var idChnl = charIDToTypeID(\"Chnl\");\r\n                var idOrdn = charIDToTypeID(\"Ordn\");\r\n                var idTrgt = charIDToTypeID(\"Trgt\");\r\n                ref658.putEnumerated(idChnl, idOrdn, idTrgt);\r\n                desc864.putReference(idnull, ref658);\r\n                var idWith = charIDToTypeID(\"With\");\r\n                var ref659 = new ActionReference();\r\n                var idChnl = charIDToTypeID(\"Chnl\");\r\n                var idfsel = charIDToTypeID(\"fsel\");\r\n                ref659.putProperty(idChnl, idfsel);\r\n                desc864.putReference(idWith, ref659);\r\n                executeAction(idIntr, desc864, DialogModes.NO);\r\n\r\n                // =======================================================\r\n                var idDlt = charIDToTypeID(\"Dlt \");\r\n                var desc865 = new ActionDescriptor();\r\n                var idnull = charIDToTypeID(\"null\");\r\n                var ref660 = new ActionReference();\r\n                var idChnl = charIDToTypeID(\"Chnl\");\r\n                var idOrdn = charIDToTypeID(\"Ordn\");\r\n                var idTrgt = charIDToTypeID(\"Trgt\");\r\n                ref660.putEnumerated(idChnl, idOrdn, idTrgt);\r\n                desc865.putReference(idnull, ref660);\r\n                executeAction(idDlt, desc865, DialogModes.NO);\r\n\r\n                // =======================================================\r\n                var idMk = charIDToTypeID(\"Mk  \");\r\n                var desc866 = new ActionDescriptor();\r\n                var idNw = charIDToTypeID(\"Nw  \");\r\n                var idChnl = charIDToTypeID(\"Chnl\");\r\n                desc866.putClass(idNw, idChnl);\r\n                var idAt = charIDToTypeID(\"At  \");\r\n                var ref661 = new ActionReference();\r\n                var idChnl = charIDToTypeID(\"Chnl\");\r\n                var idChnl = charIDToTypeID(\"Chnl\");\r\n                var idMsk = charIDToTypeID(\"Msk \");\r\n                ref661.putEnumerated(idChnl, idChnl, idMsk);\r\n                desc866.putReference(idAt, ref661);\r\n                var idUsng = charIDToTypeID(\"Usng\");\r\n                var idUsrM = charIDToTypeID(\"UsrM\");\r\n                var idRvlS = charIDToTypeID(\"RvlS\");\r\n                desc866.putEnumerated(idUsng, idUsrM, idRvlS);\r\n                executeAction(idMk, desc866, DialogModes.NO);\r\n\r\n            } catch (err) {}\r\n            \r\n            var finalSuffix=suffix;\r\n            if (addCount===true)finalSuffix += layerCount;\r\n\r\n\r\n            activeDocument.activeLayer.name = layerName + finalSuffix;\r\n            layerCount++;\r\n            \r\n            \r\n            activeDocument.activeLayer=baseLayer;\r\n        } catch (e) {}\r\n    }\r\n    var idsetd = charIDToTypeID(\"setd\");\r\n    var desc1045 = new ActionDescriptor();\r\n    var idnull = charIDToTypeID(\"null\");\r\n    var ref578 = new ActionReference();\r\n    var idChnl = charIDToTypeID(\"Chnl\");\r\n    var idfsel = charIDToTypeID(\"fsel\");\r\n    ref578.putProperty(idChnl, idfsel);\r\n    desc1045.putReference(idnull, ref578);\r\n    var idT = charIDToTypeID(\"T   \");\r\n    var idOrdn = charIDToTypeID(\"Ordn\");\r\n    var idNone = charIDToTypeID(\"None\");\r\n    desc1045.putEnumerated(idT, idOrdn, idNone);\r\n    executeAction(idsetd, desc1045, DialogModes.NO);\r\n\r\n    // =======================================================\r\n    var idDlt = charIDToTypeID(\"Dlt \");\r\n    var desc694 = new ActionDescriptor();\r\n    var idnull = charIDToTypeID(\"null\");\r\n    var ref323 = new ActionReference();\r\n    var idChnl = charIDToTypeID(\"Chnl\");\r\n    ref323.putName(idChnl, \"ContiguityMask\");\r\n    desc694.putReference(idnull, ref323);\r\n    executeAction(idDlt, desc694, DialogModes.NO);\r\n\r\n    \r\n    activeDocument.activeLayer.remove();\r\n    \r\n\r\n\r\n    var idHd = charIDToTypeID(\"Hd  \");\r\n    var desc736 = new ActionDescriptor();\r\n    var idnull = charIDToTypeID(\"null\");\r\n    var list22 = new ActionList();\r\n    var ref541 = new ActionReference();\r\n    var idLyr = charIDToTypeID(\"Lyr \");\r\n    var idOrdn = charIDToTypeID(\"Ordn\");\r\n    var idTrgt = charIDToTypeID(\"Trgt\");\r\n    ref541.putEnumerated(idLyr, idOrdn, idTrgt);\r\n    list22.putReference(ref541);\r\n    desc736.putList(idnull, list22);\r\n    executeAction(idHd, desc736, DialogModes.NO);\r\n\r\n}\r\n\r\n//   pfaffenbichler and xbytor    //\r\n//        at ps-scripts.com       //\r\n//      created this function     //\r\nfunction collectPathInfoFromDesc(myDocument, thePath) {\r\n    var myDocument = app.activeDocument;\r\n\r\n    // 基于Xbytor的stdlib函数;\r\n    var ref = new ActionReference();\r\n    for (var l = 0; l < myDocument.pathItems.length; l++) {\r\n        var thisPath = myDocument.pathItems[l];\r\n        if (thisPath == thePath && thisPath.name == \"Work Path\") {\r\n            ref.putProperty(cTID(\"Path\"), cTID(\"WrPt\"));\r\n        };\r\n        if (thisPath == thePath && thisPath.name != \"Work Path\" && thisPath.kind != PathKind.VECTORMASK) {\r\n            ref.putIndex(cTID(\"Path\"), l + 1);\r\n        };\r\n        if (thisPath == thePath && thisPath.kind == PathKind.VECTORMASK) {\r\n            var idPath = charIDToTypeID(\"Path\");\r\n            var idPath = charIDToTypeID(\"Path\");\r\n            var idvectorMask = stringIDToTypeID(\"vectorMask\");\r\n            ref.putEnumerated(idPath, idPath, idvectorMask);\r\n        };\r\n    };\r\n    var desc = app.executeActionGet(ref);\r\n    var pname = desc.getString(cTID('PthN'));\r\n    // 创建新数组;\r\n    var theArray = new Array;\r\n    var pathComponents = desc.getObjectValue(cTID(\"PthC\")).getList(sTID('pathComponents'));\r\n    // 对于子路径;\r\n    for (var m = 0; m < pathComponents.count; m++) {\r\n        var listKey = pathComponents.getObjectValue(m).getList(sTID(\"subpathListKey\"));\r\n        // 子路径计数;\r\n        for (var n = 0; n < listKey.count; n++) {\r\n            var points = listKey.getObjectValue(n).getList(sTID('points'));\r\n            // 获得第一点;\r\n            var anchorObj = points.getObjectValue(0).getObjectValue(sTID(\"anchor\"));\r\n            var anchor = [anchorObj.getUnitDoubleValue(sTID('horizontal')), anchorObj.getUnitDoubleValue(sTID('vertical'))];\r\n            var thisPoint = [anchor];\r\n            theArray.push(thisPoint);\r\n        };\r\n    };\r\n    // by xbytor, thanks to him;\r\n\r\n\r\n    function cTID(s) {\r\n        return cTID[s] || cTID[s] = app.charIDToTypeID(s);\r\n    };\r\n\r\n    function sTID(s) {\r\n        return sTID[s] || sTID[s] = app.stringIDToTypeID(s);\r\n    };\r\n    // 重置;\r\n    return theArray;\r\n};\r\n\r\n\r\nfunction makePreviewSelection(){\r\n    makeSelection()    \r\n    app.refresh()\r\n    activeDocument.quickMaskMode = false;\r\n}\r\n\r\nfunction makeSelection(){\r\n    try{\r\n    \r\n        var idsetd = charIDToTypeID(\"setd\");\r\n        var desc922 = new ActionDescriptor();\r\n        var idnull = charIDToTypeID(\"null\");\r\n        var ref529 = new ActionReference();\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idfsel = charIDToTypeID(\"fsel\");\r\n        ref529.putProperty(idChnl, idfsel);\r\n        desc922.putReference(idnull, ref529);\r\n        var idT = charIDToTypeID(\"T   \");\r\n        var ref530 = new ActionReference();\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idTrsp = charIDToTypeID(\"Trsp\");\r\n        ref530.putEnumerated(idChnl, idChnl, idTrsp);\r\n        desc922.putReference(idT, ref530);\r\n        executeAction(idsetd, desc922, DialogModes.NO);\r\n\r\n    } catch (err) {\r\n        return false;\r\n    }\r\n\r\n\r\n    try {\r\n        var idIntr = charIDToTypeID(\"Intr\");\r\n        var desc846 = new ActionDescriptor();\r\n        var idnull = charIDToTypeID(\"null\");\r\n        var ref639 = new ActionReference();\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idMsk = charIDToTypeID(\"Msk \");\r\n        ref639.putEnumerated(idChnl, idChnl, idMsk);\r\n        desc846.putReference(idnull, ref639);\r\n        var idWith = charIDToTypeID(\"With\");\r\n        var ref640 = new ActionReference();\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idfsel = charIDToTypeID(\"fsel\");\r\n        ref640.putProperty(idChnl, idfsel);\r\n        desc846.putReference(idWith, ref640);\r\n        executeAction(idIntr, desc846, DialogModes.NO);\r\n\r\n\r\n    } catch (err) {}\r\n\r\n    try {\r\n        // =======================================================\r\n        var idIntW = charIDToTypeID(\"IntW\");\r\n        var desc787 = new ActionDescriptor();\r\n        var idnull = charIDToTypeID(\"null\");\r\n        var ref572 = new ActionReference();\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idfsel = charIDToTypeID(\"fsel\");\r\n        ref572.putProperty(idChnl, idfsel);\r\n        desc787.putReference(idnull, ref572);\r\n        var idT = charIDToTypeID(\"T   \");\r\n        var ref573 = new ActionReference();\r\n        var idPath = charIDToTypeID(\"Path\");\r\n        var idPath = charIDToTypeID(\"Path\");\r\n        var idvectorMask = stringIDToTypeID(\"vectorMask\");\r\n        ref573.putEnumerated(idPath, idPath, idvectorMask);\r\n        var idLyr = charIDToTypeID(\"Lyr \");\r\n        var idOrdn = charIDToTypeID(\"Ordn\");\r\n        var idTrgt = charIDToTypeID(\"Trgt\");\r\n        ref573.putEnumerated(idLyr, idOrdn, idTrgt);\r\n        desc787.putReference(idT, ref573);\r\n        var idVrsn = charIDToTypeID(\"Vrsn\");\r\n        desc787.putInteger(idVrsn, 1);\r\n        var idvectorMaskParams = stringIDToTypeID(\"vectorMaskParams\");\r\n        desc787.putBoolean(idvectorMaskParams, true);\r\n        executeAction(idIntW, desc787, DialogModes.NO);\r\n    } catch (err) {}\r\n\r\n\r\n\r\n    if (tolerance >= 2) {\r\n\r\n        activeDocument.selection.expand(Math.floor(tolerance / 2))\r\n\r\n    }\r\n\r\n\r\n    activeDocument.quickMaskMode = true;\r\n\r\n\r\n    var idThrs = charIDToTypeID(\"Thrs\");\r\n    var desc479 = new ActionDescriptor();\r\n    var idLvl = charIDToTypeID(\"Lvl \");\r\n    desc479.putInteger(idLvl, 1);\r\n    executeAction(idThrs, desc479, DialogModes.NO);\r\n\r\n\r\n\r\n    if (tolerance % 2 == 1) {\r\n\r\n        var idMtnB = charIDToTypeID(\"MtnB\");\r\n        var desc213 = new ActionDescriptor();\r\n        var idAngl = charIDToTypeID(\"Angl\");\r\n        desc213.putInteger(idAngl, 0);\r\n        var idDstn = charIDToTypeID(\"Dstn\");\r\n        var idPxl = charIDToTypeID(\"#Pxl\");\r\n        desc213.putUnitDouble(idDstn, idPxl, 1.000000);\r\n        executeAction(idMtnB, desc213, DialogModes.NO);\r\n\r\n        // =======================================================\r\n        var idMtnB = charIDToTypeID(\"MtnB\");\r\n        var desc214 = new ActionDescriptor();\r\n        var idAngl = charIDToTypeID(\"Angl\");\r\n        desc214.putInteger(idAngl, 90);\r\n        var idDstn = charIDToTypeID(\"Dstn\");\r\n        var idPxl = charIDToTypeID(\"#Pxl\");\r\n        desc214.putUnitDouble(idDstn, idPxl, 1.000000);\r\n        executeAction(idMtnB, desc214, DialogModes.NO);\r\n\r\n\r\n        // =======================================================\r\n        var idThrs = charIDToTypeID(\"Thrs\");\r\n        var desc215 = new ActionDescriptor();\r\n        var idLvl = charIDToTypeID(\"Lvl \");\r\n        desc215.putInteger(idLvl, 1);\r\n        executeAction(idThrs, desc215, DialogModes.NO);\r\n    }\r\n}   \r\n\r\nfunction createDialog(){\r\n        \r\n    var dlg = new Window('dialog', '图层分离器');\r\n    dlg.alignChildren ='left';\r\n\r\n    dlg.gap = dlg.add('group')\r\n    dlg.gap.orientation= 'row';\r\n    dlg.gap.txt=dlg.gap.add('statictext', undefined,'间隙大于时拆分');\r\n    dlg.gap.input=dlg.gap.add('edittext', undefined,tolerance);\r\n        dlg.gap.input.preferredSize = [20,20];\r\n    dlg.gap.txt2=dlg.gap.add('statictext', undefined,'像素');\r\n    dlg.gap.btnPreview= dlg.gap.add('button', undefined,'预览');\r\n        dlg.gap.btnPreview.preferredSize = [55,20]\r\n    \r\n    dlg.naming = dlg.add('panel',undefined,'图层命名') \r\n    dlg.naming.alignChildren ='left';\r\n        dlg.naming.suffix = dlg.naming.add('group')\r\n        dlg.naming.suffix.orientation= 'row';\r\n        dlg.naming.suffix.txt=dlg.naming.suffix.add('statictext', undefined,'后缀:');\r\n        dlg.naming.suffix.input=dlg.naming.suffix.add('edittext', undefined,suffix);\r\n            dlg.naming.suffix.input.preferredSize = [60,20];\r\n\r\n        dlg.naming.suffix.chkbox = dlg.naming.suffix.add('checkbox', undefined, '添加数字')\r\n            dlg.naming.suffix.chkbox.value=addCount;\r\n        \r\n        dlg.naming.txtPreview = dlg.naming.add('statictext', undefined, layerNamePreview)\r\n            dlg.naming.txtPreview.preferredSize = [200,20];\r\n        \r\n    dlg.btnPnl= dlg.add('group');\r\n    dlg.btnPnl.alignment ='right';\r\n    dlg.btnPnl.okBtn = dlg.btnPnl.add('button', undefined, '确定', {name:'ok'});\r\n        dlg.btnPnl.okBtn.active=true;\r\n    dlg.btnPnl.cancelBtn = dlg.btnPnl.add('button', undefined, '取消', {name:'cancel'});\r\n      \r\n    dlg.naming.suffix.input.onChanging= function(){\r\n        layerNamePreview=activeDocument.activeLayer.name + dlg.naming.suffix.input.text\r\n        if (dlg.naming.suffix.chkbox.value === true){\r\n            layerNamePreview += \"1\"\r\n        }\r\n        dlg.naming.txtPreview.text =layerNamePreview\r\n    }\r\n    dlg.naming.suffix.chkbox.onClick = function(){\r\n        layerNamePreview=activeDocument.activeLayer.name + dlg.naming.suffix.input.text\r\n        if (dlg.naming.suffix.chkbox.value === true){\r\n            layerNamePreview += \"1\"\r\n        }\r\n        dlg.naming.txtPreview.text = layerNamePreview;\r\n    }\r\n\r\n    \r\n        \r\n    \r\n    dlg.gap.input.onChanging = function() {\r\n        if (parseInt(dlg.gap.input.text) == 1){\r\n            dlg.gap.txt2.text = '像素'\r\n        }else{\r\n            dlg.gap.txt2.text = '像素'\r\n        }\r\n        tolerance = parseInt (dlg.gap.input.text)\r\n    }\r\n\r\n    dlg.gap.btnPreview.onClick = function() {\r\n        makePreviewSelection()   \r\n    }\r\n    \r\n    x=dlg.show(); \r\n    \r\n    tolerance = parseInt (dlg.gap.input.text)\r\n    suffix = dlg.naming.suffix.input.text\r\n    addCount=dlg.naming.suffix.chkbox.value\r\n    \r\n    return x;\r\n}\r\n"
                },
                "type": {
                  "VarKey": null,
                  "Value": "CUSTOM"
                },
                "ext": {
                  "VarKey": null,
                  "Value": ".jsx"
                },
                "encoding": {
                  "VarKey": null,
                  "Value": "default"
                },
                "runner": {
                  "VarKey": "选中值",
                  "Value": null
                },
                "argTemplate": {
                  "VarKey": null,
                  "Value": "%FILE%"
                },
                "outputEncoding": {
                  "VarKey": null,
                  "Value": "oem"
                },
                "workingDir": {
                  "VarKey": null,
                  "Value": ""
                },
                "runAsAdmin": {
                  "VarKey": null,
                  "Value": "0"
                },
                "waitToExit": {
                  "VarKey": null,
                  "Value": "0"
                }
              },
              "OutputParams": {
                "stdout": null,
                "stdoutOnly": null,
                "stderr": null
              },
              "IfSteps": null,
              "ElseSteps": null,
              "Note": "",
              "Disabled": false,
              "Collapsed": false,
              "DelayMs": 0
            }
          ],
          "ElseSteps": null,
          "Note": "分离图层",
          "Disabled": false,
          "Collapsed": true,
          "DelayMs": 0
        },
        {
          "StepRunnerKey": "sys:simpleIf",
          "InputParams": {
            "condition": {
              "VarKey": null,
              "Value": "$= {选中值} == 3"
            }
          },
          "OutputParams": {},
          "IfSteps": [
            {
              "StepRunnerKey": "sys:runScript",
              "InputParams": {
                "script": {
                  "VarKey": null,
                  "Value": "\r\n/*\r\n<javascriptresource>\r\n<name>[M] Delete all empty layers faster v1.1</name>\r\n<enableinfo>true</enableinfo>\r\n<category>Magic</category>\r\n</javascriptresource>\r\n*/\r\n\r\n/* \r\n    Version History:\r\n    1.1: (30. 4. 2017)\r\n    - removed JAM \"framework\"\r\n    - big code cleaning\r\n    - better performance. Up to 9× faster than version 1.0\r\n    - keeps selected layers\r\n    - improved compatibility - works with CS6 and higher\r\n    - fixed layers and groups counter\r\n    - progressbar can now show deleting progress\r\n    - fixed - if clipped layers was attached to empty locked layer then visibility was turned off. (script shouldn't remove locked layers)\r\n\r\n    1.0: (19. 5. 2016)\r\n    - Initial release.\r\n    \r\n*/\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// Do not look down here. If you try to understand my code, you will waste a lot of time. \r\n// This code is optimized for performance with low level AM code and no recursion.\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n/*\r\nTROUBLE SHOOTING:\r\n    - deleting layers according layerID may not work properly if they are not sorted by layerIndex\r\n    \r\nTODO:\r\n    -\r\n*/\r\n\r\n#target Photoshop\r\napp.bringToFront();\r\n\r\n//$.level = 1;\r\n\r\nvar psVersion=app.version.split('.')[0];\r\ncTID = function(s) { return cTID[s] || (cTID[s] = charIDToTypeID(s)); };\r\nsTID = function(s) { return stringIDToTypeID(s); }; \r\n\r\n// caching precalculated typeID numbers for saving a bit miliseconds\r\nvar TID = {\r\n    idPrpr: charIDToTypeID( \"Prpr\" ),\r\n    idBounds: stringIDToTypeID( \"bounds\" ),\r\n    idLyr: charIDToTypeID( \"Lyr \" ),\r\n    top: stringIDToTypeID('top'),\r\n    bottom: stringIDToTypeID('bottom'),\r\n    layerLocking: stringIDToTypeID( \"layerLocking\" ),\r\n    protectAll: stringIDToTypeID('protectAll'),\r\n    layerID: stringIDToTypeID( \"layerID\" ),\r\n    group: stringIDToTypeID( \"group\" ),\r\n    layerSection: stringIDToTypeID( \"layerSection\" ),\r\n    textKey: stringIDToTypeID( \"textKey\" ),\r\n    idNull: charIDToTypeID( \"null\" ),\r\n    idDlt: charIDToTypeID( \"Dlt \" )\r\n    \r\n    \r\n}\r\n\r\napp.activeDocument.suspendHistory(\"Delete all empty layers faster\", \"initialize()\");\r\n\r\nfunction initialize(){\r\n    try {\r\n        if(app.documents.length < 1){\r\n            alert(\"You must have a document open.\");\r\n            return;\r\n        }\r\n        main();\r\n        \r\n    } catch(e) {\r\n        alert(\"Deleting layers failed. \"+e);\r\n    \treturn 'cancel';\r\n    }\r\n}\r\n\r\nfunction main() {\r\n    \r\n    var layerCount = getLayersCount();\r\n    \r\n    function getLayersCount(){\r\n        var ref = new ActionReference(); \r\n        ref.putProperty(charIDToTypeID( \"Prpr\" ), stringIDToTypeID(\"numberOfLayers\"));\r\n        ref.putEnumerated( charIDToTypeID(\"Dcmn\"), charIDToTypeID(\"Ordn\"), charIDToTypeID(\"Trgt\") );  \r\n        var desc = executeActionGet(ref); \r\n        var numberOfLayers = desc.getDouble(stringIDToTypeID (\"numberOfLayers\"));\r\n        return numberOfLayers;\r\n    }\r\n    if(layerCount <= 1){\r\n        alert(\"The document must have more layers.\");\r\n        return;\r\n    }\r\n    var deleteList = [];\r\n    var hideList = [];\r\n    var tr = [];\r\n    var maximalDepth=0;\r\n    var regularLayersCount=0;\r\n    var groupLayersCount=0; \r\n    var removeRegularLayersCount=0;\r\n    var removeGroupLayersCount=0;\r\n    \r\n    if(psVersion < 16){\r\n        analyze();\r\n    }else{\r\n        app.doProgress(\"Layers scanning...\",\"analyze()\");\r\n    }\r\n    \r\n    function analyze(){\r\n        for (var layerIndex = layerCount, stepsInside=0; layerIndex > 0; layerIndex--){ // stepsInside = how deep I am in folder structure\r\n            if(psVersion > 16){\r\n                var canContinue = app.doProgressSegmentTask(1,layerCount-layerIndex,layerCount,\"segmentTask()\");\r\n                if(!canContinue) return;\r\n            }else{\r\n                segmentTask();\r\n            }\r\n        \r\n            function segmentTask(){\r\n                var nullHeight = hasNullHeight(layerIndex);\r\n                var locked = isLocked (layerIndex);\r\n                var id = getLayerId(layerIndex);\r\n                var layerType = getLayerType(layerIndex);\r\n                var isClipped = getIsClipped(layerIndex); // isClipped = cliped layer\r\n                var isTextLayerEmpty = hasEmptyTextContent(layerIndex);\r\n                var shouldRemove;\r\n                var depth;\r\n                \r\n                //regular layer\r\n                if(layerType=='item'){\r\n                    regularLayersCount++;\r\n                    depth = stepsInside+1;\r\n                    \r\n                    if((nullHeight || isTextLayerEmpty) && !locked){\r\n                        shouldRemove = true;\r\n                    }else{\r\n                        shouldRemove = false;\r\n                    }\r\n                }\r\n                //group end - closing (invisible) layer\r\n                else if(layerType=='end'){\r\n                    depth = stepsInside;\r\n                    shouldRemove = false;\r\n                    stepsInside--;\r\n                }\r\n                //group start - opening layer\r\n                else if(layerType=='start'){\r\n                   stepsInside++;\r\n                   groupLayersCount++;\r\n                   depth = stepsInside;\r\n                   shouldRemove = true;\r\n                }\r\n            \r\n                if(depth>maximalDepth){\r\n                    maximalDepth = depth;\r\n                }\r\n            \r\n                var layerInfo = {\r\n                    depth: depth,\r\n                    layerType: layerType,\r\n                    itemIndex: layerIndex,\r\n                    itemID: id,\r\n                    remove: shouldRemove,\r\n                    locked: locked,\r\n                    isClipped: isClipped\r\n                }\r\n            \r\n                tr.push (layerInfo);\r\n            }\r\n        }\r\n    }\r\n    \r\n    treatLockedLayers();\r\n    addItemsToDeleteList();\r\n    \r\n    if (deleteList && deleteList.length) { // if there is something to delete\r\n        \r\n        // if layer which we want delete has cliping mask, then we hide clipping mask layers\r\n        if (hideList && hideList.length) {\r\n            hideMulti(hideList);\r\n        }\r\n        \r\n        deleteMulti(deleteList);\r\n        var bgCount = hasBackground ();\r\n        alert(\r\n            \"已移除 \"+removeRegularLayersCount+\" 个图层和 \"+removeGroupLayersCount+\" 个组.\\n\"+\r\n            \"现在的内容包含 \"+(regularLayersCount-removeRegularLayersCount+bgCount)+\" 个图层和 \"+(groupLayersCount-removeGroupLayersCount)+\" 个组.\\n\"+\r\n            \"(画板作为组)\"\r\n        );\r\n    }\r\n    else{\r\n        alert(\"没有可删除的空图层.\");\r\n    }\r\n    \r\n    \r\n    function treatLockedLayers(){\r\n        var max = maximalDepth;\r\n        var len = tr.length;\r\n        \r\n        for(var j = 1; j < max;max--){ // j = 1 protože úroven nula bude mít nastavené mazání z podmínek uvnitř cyklu a itemy mě nezajímají\r\n            for(var i = 0; i < len;i++){\r\n                var lyr = tr[i];\r\n                \r\n                if(lyr.depth === max){\r\n                    var parent = getParent(i);\r\n                    \r\n                    if (lyr.layerType==\"item\" && !lyr.remove){ // don't remove classic layer\r\n                        tr[parent].remove = false;\r\n                    }\r\n                    if(lyr.locked && lyr.layerType == \"start\"){ // locked parent group\r\n                        tr[parent].remove = false;\r\n                    }\r\n                    if(!lyr.remove && lyr.layerType == \"start\"){ // don't remove parent folder if children folder shouldn't be deleted\r\n                        tr[parent].remove = false;\r\n                    }\r\n                }\r\n            }  \r\n        }\r\n    \r\n        for(var j = 0; j < len; j++){ // browse once all layers and if parrent group is locked then it excludes all child from delete list\r\n            if (tr[j].locked && tr[j].layerType==\"start\"){\r\n                var initialDepthLevel = tr[j].depth;\r\n                j++;\r\n                while(initialDepthLevel < tr[j].depth){\r\n                    tr[j].remove = false;\r\n                    j++;\r\n                }\r\n            }\r\n        }\r\n    \r\n        for(var j = 0; j < len; j++){ // don't mess up cliping mask layers\r\n            var lyr = tr[j];\r\n            if (lyr.isClipped){\r\n                var tempList=[];\r\n                while(tr[j].isClipped){\r\n                    tempList.push(tr[j].itemIndex);           \r\n                    j++;\r\n                }\r\n                if(tr[j].remove && !tr[j].locked){\r\n                    hideList = hideList.concat(tempList);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function addItemsToDeleteList(){\r\n        for (var j = 0, len = tr.length;j<len;j++){\r\n            var lyr = tr[j];\r\n            if(lyr.remove && !lyr.locked){\r\n                deleteList.push(lyr.itemID);\r\n                \r\n                if(lyr.layerType==\"start\"){\r\n                    removeGroupLayersCount++;\r\n                }else{\r\n                    removeRegularLayersCount++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function getParent(p){ //pomocná funkce, která najde děcku rodiče\r\n        for (var i = p-1; i > 0; i--){\r\n            if(tr[i].depth==tr[p].depth-1){\r\n                return i;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction hasNullHeight(index){\r\n    var ref = new ActionReference();\r\n    ref.putProperty( TID.idPrpr, TID.idBounds );\r\n    ref.putIndex( TID.idLyr, index );\r\n    var desc = executeActionGet(ref);\r\n    var bounds = desc.getObjectValue(TID.idBounds);\r\n    var top = bounds.getDouble(TID.top);\r\n    var bottom = bounds.getDouble(TID.bottom);\r\n    \r\n    var nullHeight = top===bottom;\r\n    return nullHeight;\r\n}\r\n\r\nfunction isLocked(index){\r\n    var ref = new ActionReference();\r\n    ref.putProperty( TID.idPrpr, TID.layerLocking );\r\n    ref.putIndex( TID.idLyr, index );\r\n    var desc = executeActionGet(ref);\r\n    var descLocking = desc.getObjectValue(TID.layerLocking);\r\n    var locked = descLocking.getBoolean(TID.protectAll);\r\n    \r\n    return locked;\r\n}\r\n\r\nfunction getLayerId(index){\r\n    var ref = new ActionReference();\r\n    ref.putProperty( TID.idPrpr, TID.layerID );\r\n    ref.putIndex( TID.idLyr, index );\r\n    var desc = executeActionGet(ref);\r\n    var id = desc.getInteger(TID.layerID);\r\n    \r\n    return id;\r\n}\r\n\r\nfunction getIsClipped(index){\r\n    var ref = new ActionReference();\r\n    ref.putProperty( TID.idPrpr, TID.group );\r\n    ref.putIndex( TID.idLyr, index );\r\n    var desc = executeActionGet(ref);\r\n    var group = desc.getBoolean(TID.group);\r\n    \r\n    return group;\r\n}\r\n\r\nfunction getLayerType(index){\r\n    var ref = new ActionReference();\r\n    ref.putProperty( TID.idPrpr, TID.layerSection );\r\n    ref.putIndex( TID.idLyr, index );\r\n    var desc = executeActionGet(ref);\r\n    var type = desc.getEnumerationValue(TID.layerSection);\r\n    type = typeIDToStringID(type);\r\n    \r\n    switch(type){\r\n        case 'layerSectionEnd':\r\n            return 'end';\r\n        case 'layerSectionStart':\r\n            return 'start';\r\n        case 'layerSectionContent':\r\n            return 'item';\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\n\r\nfunction hasEmptyTextContent(index){\r\n var ref = new ActionReference();\r\n    ref.putProperty( TID.idPrpr, TID.textKey );\r\n    ref.putIndex( TID.idLyr, index );\r\n    var textKey = executeActionGet(ref);\r\n    \r\n    var isTextLayer = textKey.hasKey(TID.textKey);\r\n    if(!isTextLayer){\r\n        return false;\r\n    }\r\n    var textKey = textKey.getObjectValue(TID.textKey);\r\n    var contentString = textKey.getString(TID.textKey);\r\n    var result = contentString === \"\";\r\n    return result;   \r\n}\r\n\r\n\r\nfunction hideMulti(list){ \r\n    var idHd = charIDToTypeID( \"Hd  \" );\r\n        var desc19 = new ActionDescriptor();\r\n            var list9 = new ActionList();\r\n            for(var i = 0, len = list.length; i < len; i++){\r\n                var ref = new ActionReference();\r\n                ref.putIndex( TID.idLyr, list[i] );\r\n                list9.putReference( ref );\r\n            }\r\n        desc19.putList( TID.idNull, list9 );\r\n    executeAction( idHd, desc19, DialogModes.NO );\r\n}\r\n\r\n\r\nfunction deleteMulti (list){\r\n    function progressTask(){\r\n        for(var i = list.length-1, len = i; i >= 0; i--){\r\n            if(psVersion > 16){\r\n                if(i%5===0){ // fast updating takes time. Update text for every five layer\r\n                    app.changeProgressText(\"I am removing layers. Removed: \"+(len-i)+\" layers from \"+len+\"\");\r\n                }\r\n                var canContinue = app.doProgressSubTask(len-i,len,\"segmentTask(\"+list[i]+\")\");\r\n                if(!canContinue) return;\r\n            }else{\r\n                segmentTask(list[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    function segmentTask(id){\r\n        var desc13 = new ActionDescriptor();\r\n        var layerRef = new ActionReference();\r\n        layerRef.putIdentifier( TID.idLyr, id );\r\n        desc13.putReference( TID.idNull, layerRef );\r\n        executeAction( TID.idDlt, desc13, DialogModes.NO );\r\n    }\r\n\r\n    if(psVersion > 16){\r\n        app.doProgress(\"I am removing layers, give me a moment please.\",\"progressTask()\");\r\n    }else{\r\n        progressTask();\r\n    }\r\n}\r\n\r\nfunction hasBackground(){\r\n    try {\r\n        var dummy = app.activeDocument.backgroundLayer;\r\n        return 1;\r\n    }\r\n    catch(e){\r\n        return 0;\r\n    } \r\n}"
                },
                "type": {
                  "VarKey": null,
                  "Value": "CUSTOM"
                },
                "ext": {
                  "VarKey": null,
                  "Value": ".jsx"
                },
                "encoding": {
                  "VarKey": null,
                  "Value": "default"
                },
                "runner": {
                  "VarKey": "选中值",
                  "Value": null
                },
                "argTemplate": {
                  "VarKey": null,
                  "Value": "%FILE%"
                },
                "outputEncoding": {
                  "VarKey": null,
                  "Value": "oem"
                },
                "workingDir": {
                  "VarKey": null,
                  "Value": ""
                },
                "runAsAdmin": {
                  "VarKey": null,
                  "Value": "0"
                },
                "waitToExit": {
                  "VarKey": null,
                  "Value": "0"
                }
              },
              "OutputParams": {
                "stdout": null,
                "stdoutOnly": null,
                "stderr": null
              },
              "IfSteps": null,
              "ElseSteps": null,
              "Note": "",
              "Disabled": false,
              "Collapsed": false,
              "DelayMs": 0
            }
          ],
          "ElseSteps": null,
          "Note": "删除空图层",
          "Disabled": false,
          "Collapsed": true,
          "DelayMs": 0
        },
        {
          "StepRunnerKey": "sys:simpleIf",
          "InputParams": {
            "condition": {
              "VarKey": null,
              "Value": "$= {选中值} == 4"
            }
          },
          "OutputParams": {},
          "IfSteps": [
            {
              "StepRunnerKey": "sys:runScript",
              "InputParams": {
                "script": {
                  "VarKey": null,
                  "Value": "var cnt = 0;\r\n\r\ntry { if (app.documents.length) { app.activeDocument.suspendHistory(\"Del hidden\", \"process_doc(app.activeDocument)\"); } } catch(e) { alert(e); }\r\n\r\napp.refresh();\r\n\r\nalert(cnt + \" 个隐藏图层被移除\", \"\");\r\n\r\nfunction process_doc(doc, close)\r\n\r\n    {   \r\n\r\n    try {\r\n\r\n        app.activeDocument = doc;\r\n\r\n        var doc_len = app.documents.length;\r\n\r\n        var i0 = get_layer_count();\r\n\r\n        try { \r\n\r\n            var d = new ActionDescriptor();\r\n\r\n            var r = new ActionReference();\r\n\r\n            r.putEnumerated(stringIDToTypeID(\"layer\"), stringIDToTypeID(\"ordinal\"), stringIDToTypeID(\"hidden\"));\r\n\r\n            d.putReference(stringIDToTypeID(\"null\"), r);\r\n\r\n            executeAction(stringIDToTypeID(\"delete\"), d, DialogModes.NO);\r\n\r\n            } \r\n\r\n        catch (e) { } \r\n\r\n        var i = get_layer_count();\r\n\r\n        cnt += i0-i;\r\n\r\n        var ok = true;  \r\n\r\n        while (ok && i >= 1 && process_layer(i)) { --i; }\r\n\r\n        if (ok && close) doc.close(SaveOptions.SAVECHANGES);\r\n\r\n        return ok;\r\n\r\n        function get_layer_count()\r\n\r\n            {\r\n\r\n            try\r\n\r\n                {\r\n\r\n                var r = new ActionReference();\r\n\r\n                r.putEnumerated(stringIDToTypeID(\"layer\"), stringIDToTypeID(\"ordinal\"), stringIDToTypeID(\"targetEnum\"));\r\n\r\n                var n = executeActionGet(r).getInteger(stringIDToTypeID(\"count\"));\r\n\r\n                try { app.activeDocument.backgroundLayer; } catch(e) { return n; }\r\n\r\n                return n-1;\r\n\r\n                }\r\n\r\n            catch (e) { alert(e); ok = false; return 0; }\r\n\r\n            }\r\n\r\n        function process_layer(n)\r\n\r\n            {   \r\n\r\n            try {\r\n\r\n                var r = new ActionReference();\r\n\r\n                r.putIndex(stringIDToTypeID(\"layer\"), n);\r\n\r\n                var d = executeActionGet(r);\r\n\r\n                if (!d.hasKey(stringIDToTypeID(\"smartObject\"))) return true;\r\n\r\n                var id = d.getInteger(stringIDToTypeID(\"layerID\")); \r\n\r\n                var r = new ActionReference();\r\n\r\n                r.putIdentifier(stringIDToTypeID(\"layer\"), id);\r\n\r\n                var d = new ActionDescriptor();\r\n\r\n                d.putReference(stringIDToTypeID(\"null\"), r);\r\n\r\n                executeAction(stringIDToTypeID(\"select\"), d, DialogModes.NO); \r\n\r\n                executeAction(stringIDToTypeID(\"placedLayerEditContents\"), undefined, DialogModes.ERROR);\r\n\r\n                if (doc_len == app.documents.length) { alert(\"SmartObject edit error!\"); ok = false; return false; }\r\n\r\n                ok = process_doc(app.activeDocument, true);\r\n\r\n                app.activeDocument = doc;\r\n\r\n        \r\n\r\n                return ok;\r\n\r\n                }\r\n\r\n            catch (e) { alert(e); ok = false; return false; }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    catch (e) { alert(e); return false; }\r\n\r\n    }"
                },
                "type": {
                  "VarKey": null,
                  "Value": "CUSTOM"
                },
                "ext": {
                  "VarKey": null,
                  "Value": ".jsx"
                },
                "encoding": {
                  "VarKey": null,
                  "Value": "default"
                },
                "runner": {
                  "VarKey": "选中值",
                  "Value": null
                },
                "argTemplate": {
                  "VarKey": null,
                  "Value": "%FILE%"
                },
                "outputEncoding": {
                  "VarKey": null,
                  "Value": "oem"
                },
                "workingDir": {
                  "VarKey": null,
                  "Value": ""
                },
                "runAsAdmin": {
                  "VarKey": null,
                  "Value": "0"
                },
                "waitToExit": {
                  "VarKey": null,
                  "Value": "0"
                }
              },
              "OutputParams": {
                "stdout": null,
                "stdoutOnly": null,
                "stderr": null
              },
              "IfSteps": null,
              "ElseSteps": null,
              "Note": "",
              "Disabled": false,
              "Collapsed": false,
              "DelayMs": 0
            }
          ],
          "ElseSteps": null,
          "Note": "删除隐藏图层",
          "Disabled": false,
          "Collapsed": true,
          "DelayMs": 0
        },
        {
          "StepRunnerKey": "sys:simpleIf",
          "InputParams": {
            "condition": {
              "VarKey": null,
              "Value": "$= {选中值} == 5"
            }
          },
          "OutputParams": {},
          "IfSteps": [
            {
              "StepRunnerKey": "sys:runScript",
              "InputParams": {
                "script": {
                  "VarKey": null,
                  "Value": "var settings = {\r\n\t\tdeleteOriginalObject: true, // Smart object is hidden if false. \r\n\t\tscaleAllLayerEffects: true, // Only if smart object has another size than its content. Size must be proportional.\r\n\t\tresizeContent: true, // Scale extracted content. Only widht and height.\r\n\t\tpreserveSmartObjectProperties: true, // Creates group from content if true. Group will have vector mask, style, blending of smart object. Bitmap mask hides overleaping pixels.\r\n\t\tclearSmartObjectContent: true, // Delete hidden layers inside smart object\r\n\t\thidePixelsOutsideSoCanvas: true, // Option not fix pixels outside smart object canvas. Creates always bitmap mask on group. \"preserveSmartObjectProperties\" must be set to true\r\n\t\tdontGroupSOContent: false,\r\n\t\tstyleScaleSettings:{\r\n\t\t\tscaleStyle: true,\r\n\t\t\tscaleShapeStrokeWidth: true,\r\n\t\t\tscaleShapePatternFill: true,\r\n\t\t\tscaleShapeGradientFill: true, //only if gradient is not aligned with layer\r\n\t\t\tscaleShapeStrokeGradient: true, //only if gradient is not aligned with layer\r\n\t\t\tscaleShapeStrokePattern: true\r\n\t\t}\r\n\t}\r\n\r\n\r\n#target Photoshop\r\n\r\n\tCH = function(c) { return CH [c] || (CH [c] = charIDToTypeID(c)); };\r\n\tST = function(s) { return ST [s] || (ST [s] = stringIDToTypeID(s)); }; \r\n\tIDtoCH = function(id) {return typeIDToCharID(id);};\r\n\tIDtoST = function(id) {return typeIDToStringID(id);};\r\n\tCHtoST = function(c) {return IDtoST(CH(c));};\r\n\tSTtoCH = function(s) {return IDtoCH(ST(s));};\r\n\r\n\tfunction LxActionDescriptor(desc){\r\n\t\tthis.version = 1;\r\n\t\t\r\n\t\tif(desc){\r\n\t\t\tthis._desc = desc\r\n\t\t}else{\r\n\t\t\tthis._desc = new ActionDescriptor();\r\n\t\t}\r\n\r\n\t\t//check if I will need to update properties\r\n\t\tthis.count = this._desc.count;\r\n\t\tthis.typename = this._desc.typename;\r\n\t\tthis.clear = function (){this._desc.clear()};\r\n\t\tthis.erase = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tthis._desc.erase(key);\r\n\t\t};\r\n\t\tthis.fromStream = function (value){this._desc.fromStream(value)};\r\n\t\t\r\n\t\t// get data\r\n\t\tthis.getBoolean = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getBoolean(key);\r\n\t\t};\r\n\t\tthis.getClass = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getClass(key);\r\n\t\t};\r\n\t\tthis.getData = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getData(key);\r\n\t\t};\r\n\t\tthis.getDouble = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getDouble(key);\r\n\t\t};\r\n\t\tthis.getEnumerationType = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getEnumerationType(key);\r\n\t\t};\r\n\t\tthis.getEnumerationValue = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getEnumerationValue(key);\r\n\t\t};\r\n\t\tthis.getInteger = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getInteger(key);\r\n\t\t};\r\n\t\tthis.getLargeInteger = function (key){\r\n\t\t\treturn this._desc.getLargeInteger(key);\r\n\t\t};\r\n\t\tthis.getList = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tvar result = new LxActionList(this._desc.getList(key));\r\n\t\t\treturn result;\r\n\t\t};\r\n\t\tthis.getObjectType = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getObjectType(key);\r\n\t\t};\r\n\t\tthis.getObjectValue = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getObjectValue(key);\r\n\t\t};\r\n\t\tthis.getPath = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getPath(key);\r\n\t\t};\r\n\t\tthis.getReference = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getReference(key);\r\n\t\t};\r\n\t\tthis.getString = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getString(key);\r\n\t\t};\r\n\t\tthis.getType = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getType(key);\r\n\t\t};\r\n\t\tthis.getUnitDoubleType = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getUnitDoubleType(key);\r\n\t\t};\r\n\t\tthis.getUnitDoubleValue = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getUnitDoubleValue(key);\r\n\t\t};\r\n\t\t// end of get data\r\n\r\n\t\tthis.hasKey = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.hasKey(key);\r\n\t\t};\r\n\t\tthis.isEqual = function (desc){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.isEqual(desc);\r\n\t\t};\r\n\r\n\t\t//// put data\r\n\t\tthis.putBoolean = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tthis._desc.putBoolean(key, value);\r\n\t\t};\r\n\t   this.putClass = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tvalue = lexicon.resolveId(key);\r\n\t\t\tthis._desc.putClass(key, value);\r\n\t\t};\r\n\t\tthis.putData = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tthis._desc.putData(key, value);\r\n\t\t};\r\n\t\tthis.putDouble = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tthis._desc.putDouble(key, value);\r\n\t\t};\r\n\t\tthis.putEnumerated = function (key, enumType ,value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tenumType = lexicon.resolveId(enumType);\r\n\t\t\tvalue = lexicon.resolveId(value);\r\n\t\t\tthis._desc.putEnumerated(key,enumType,value);\r\n\t\t};\r\n\t\tthis.putInteger = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tthis._desc.putInteger(key, value);\r\n\t\t};\r\n\t\tthis.putLargeInteger = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tthis._desc.putLargeInteger(key, value);\r\n\t\t};\r\n\t\tthis.putList = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tthis._desc.putList(key, value);\r\n\t\t};\r\n\t\tthis.putObject = function (key, classID , value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tclassID = lexicon.resolveId(classID);\r\n\t\t\tif(value._desc){\r\n\t\t\t\tvalue = value._desc;\r\n\t\t\t}\r\n\t\t\tthis._desc.putObject(key, classID, value);\r\n\t\t};\r\n\t\tthis.putPath = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tthis._desc.putPath(key, value);\r\n\t\t};\r\n\t\tthis.putReference = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tif(value._ref){\r\n\t\t\t   value = value._ref; \r\n\t\t\t}\r\n\t\t\tthis._desc.putReference(key, value);\r\n\t\t};\r\n\t\tthis.putString = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tthis._desc.putString(key, value);\r\n\t\t};\r\n\t\tthis.putUnitDouble = function (key, unitID, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tunitID = lexicon.resolveId(unitID);\r\n\t\t\tthis._desc.putUnitDouble(key, unitID, value);\r\n\t\t};\r\n\r\n\t\t// end of put data\r\n\t\tthis.toStream = function (){\r\n\t\t\treturn this._desc.toStream();\r\n\t\t}; \r\n\r\n\t\t// custom functions\r\n\t\tthis.getValue = function(key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tvar type = this._desc.getType( key ).toString();\r\n\t\t\treturn lexicon._getValue(this._desc, type, key);\r\n\t\t};\r\n\t\r\n\t\tthis.toJSONString = function(){\r\n\t\t\treturn lexicon.descriptorToJSON(this._desc);\r\n\t\t}\r\n\t\r\n\t\tthis.toJSObject = function(){\r\n\t\t\treturn eval(\"(\"+this.toJSONString()+\")\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tfunction LxActionList(list){\r\n\t\tthis.version = 1;\r\n\t\t\r\n\t\tif(list){\r\n\t\t\tthis._list = list\r\n\t\t}else{\r\n\t\t\tthis._list = new ActionDescriptor();\r\n\t\t}\r\n\r\n\t\t//check if I will need to update properties\r\n\t\tthis.count = this._list.count;\r\n\t\tthis.typename = this._list.typename;\r\n\t\tthis.clear = function (){this._list.clear()};\r\n\t   \r\n\t\t\r\n\t\t\r\n\t\t// get data\r\n\t\tthis.getBoolean = function (position){\r\n\t\t\treturn this._list.getBoolean(position);\r\n\t\t};\r\n\t\tthis.getClass = function (position){\r\n\t\t\treturn this._list.getClass(position);\r\n\t\t};\r\n\t\tthis.getData = function (position){\r\n\t\t\treturn this._list.getData(position);\r\n\t\t};\r\n\t\tthis.getDouble = function (position){\r\n\t\t\treturn this._list.getDouble(position);\r\n\t\t};\r\n\t\tthis.getEnumerationType = function (position){\r\n\t\t\treturn this._list.getEnumerationType(position);\r\n\t\t};\r\n\t\tthis.getEnumerationValue = function (position){\r\n\t\t\treturn this._list.getEnumerationValue(position);\r\n\t\t};\r\n\t\tthis.getInteger = function (position){\r\n\t\t\treturn this._list.getInteger(position);\r\n\t\t};\r\n\t\tthis.getLargeInteger = function (position){\r\n\t\t\treturn this._list.getLargeInteger(position);\r\n\t\t};\r\n\t\tthis.getList = function (position){\r\n\t\t\tvar result = new LxActionList(this._list.getList(position));\r\n\t\t\treturn result;\r\n\t\t};\r\n\t\tthis.getObjectType = function (position){\r\n\t\t\treturn this._list.getObjectType(position);\r\n\t\t};\r\n\t\tthis.getObjectValue = function (position){\r\n\t\t\tvar result = new LxActionDescriptor(this._list.getObjectValue(position));\r\n\t\t\treturn result;\r\n\t\t};\r\n\t\tthis.getPath = function (position){\r\n\t\t\treturn this._list.getPath(position);\r\n\t\t};\r\n\t\tthis.getReference = function (position){\r\n\t\t\tvar result = new LxActionReference(this._list.getReference(position));\r\n\t\t\treturn result;\r\n\t\t};\r\n\t\tthis.getString = function (position){\r\n\t\t\treturn this._list.getString(position);\r\n\t\t};\r\n\t\tthis.getType = function (position){\r\n\t\t\treturn this._list.getType(position);\r\n\t\t};\r\n\t\tthis.getUnitDoubleType = function (position){\r\n\t\t\treturn this._list.getUnitDoubleType(position);\r\n\t\t};\r\n\t\tthis.getUnitDoubleValue = function (position){\r\n\t\t\treturn this._list.getUnitDoubleValue(position);\r\n\t\t};\r\n\t\t// end of get data\r\n\r\n\t\t//// put data\r\n\t\tthis.putBoolean = function (value){\r\n\t\t\tthis._list.putBoolean(value);\r\n\t\t};\r\n\t\tthis.putClass = function (value){\r\n\t\t\tvalue = lexicon.resolveId(position);\r\n\t\t\tthis._list.putClass(value);\r\n\t\t};\r\n\t\tthis.putData = function (value){\r\n\t\t\tthis._list.putData(value);\r\n\t\t};\r\n\t\tthis.putDouble = function (value){\r\n\t\t\tthis._list.putDouble(value);\r\n\t\t};\r\n\t\tthis.putEnumerated = function (enumType ,value){\r\n\t\t\tenumType = lexicon.resolveId(enumType);\r\n\t\t\tvalue = lexicon.resolveId(value);\r\n\t\t\tthis._list.putEnumerated(enumType,value);\r\n\t\t};\r\n\t\tthis.putInteger = function (value){\r\n\t\t\tthis._list.putInteger(value);\r\n\t\t};\r\n\t\tthis.putLargeInteger = function (value){\r\n\t\t\tthis._list.putLargeInteger(value);\r\n\t\t};\r\n\t\tthis.putList = function (value){\r\n\t\t\tif(value._list){\r\n\t\t\t\tvalue = value._list;\r\n\t\t\t}\r\n\t\t\tthis._list.putList(value);\r\n\t\t};\r\n\t\tthis.putObject = function (classID , value){\r\n\t\t\tif(value._desc){\r\n\t\t\t\tvalue = value._desc;\r\n\t\t\t}\r\n\t\t\tclassID = lexicon.resolveId(classID);\r\n\t\t\tthis._list.putObject(classID, value._desc);\r\n\t\t};\r\n\t\tthis.putPath = function (value){\r\n\t\t\tthis._list.putPath(value);\r\n\t\t};\r\n\t\tthis.putReference = function (value){\r\n\t\t\tif(value._ref){\r\n\t\t\t   value = value._ref; \r\n\t\t\t}\r\n\t\t\tthis._list.putReference(value);\r\n\t\t};\r\n\t\tthis.putString = function (value){\r\n\t\t\tthis._list.putString(value);\r\n\t\t};\r\n\t\tthis.putUnitDouble = function (unitID, value){\r\n\t\t\tunitID = lexicon.resolveId(unitID);\r\n\t\t\tthis._list.putUnitDouble(unitID, value);\r\n\t\t};\r\n\r\n\t\t// custom functions\r\n\t\tthis.getValue = function(position){\r\n\t\t\tvar type = this._list.getType( position ).toString();\r\n\t\t\tlexicon._getValue(this._list, type, position);\r\n\t\t};\r\n\r\n\t\tthis.forEach = function(itemFunction){\r\n\t\t\tfor(var i = 0, len = this._list.count; i < len; i++){\r\n\t\t\t\titemFunction(i);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction LxActionReference(ref){\r\n\t\tthis.version = 1;\r\n\t\t\r\n\t\tif(ref){\r\n\t\t\tthis._ref = ref\r\n\t\t}else{\r\n\t\t\tthis._ref = new ActionReference();\r\n\t\t}\r\n\r\n\t\tthis.typename = this._ref.typename;\r\n\t\tthis.getContainer = function(){return this._ref.getContainer()}\r\n\t\tthis.getDesiredClass = function(){return this._ref.getDesiredClass()}\r\n\t\tthis.getEnumeratedType = function(){return this._ref.getEnumeratedType()}\r\n\t\tthis.getEnumeratedValue = function(){return this._ref.getEnumeratedValue()}\r\n\t\tthis.getForm = function(){return this._ref.getForm()}\r\n\t\tthis.getIdentifier = function(){return this._ref.getIdentifier()}\r\n\t\tthis.getIndex = function(){return this._ref.getIndex()}\r\n\t\tthis.getName = function(){return this._ref.getName()}\r\n\t\tthis.getOffset = function(){return this._ref.getOffset()}\r\n\t\tthis.getProperty = function(){return this._ref.getProperty()} //typeID\r\n\t\t\r\n\t\tthis.putClass = function(classId){\r\n\t\t\tclassId = lexicon.resolveId(classId);\r\n\t\t\tthis._ref.putClass(classId)\r\n\t\t}\r\n\t\tthis.putEnumerated = function(classId, enumType, value){\r\n\t\t\tclassId = lexicon.resolveId(classId);\r\n\t\t\tenumType = lexicon.resolveId(enumType);\r\n\t\t\tvalue = lexicon.resolveId(value);\r\n\t\t\tthis._ref.putEnumerated(classId, enumType, value)\r\n\t\t}\r\n\t\tthis.putIdentifier = function(classId, value){\r\n\t\t\tclassId = lexicon.resolveId(classId);\r\n\t\t\tthis._ref.putIdentifier(classId, value)\r\n\t\t}\r\n\t\tthis.putIndex = function(classId, value){\r\n\t\t\tclassId = lexicon.resolveId(classId);\r\n\t\t\tthis._ref.putIndex(classId, value)\r\n\t\t}\r\n\t\tthis.putName = function(classId, value){\r\n\t\t\tclassId = lexicon.resolveId(classId);\r\n\t\t\tthis._ref.putName(classId, value)\r\n\t\t}\r\n\t\tthis.putOffset = function(classId, value){\r\n\t\t\tclassId = lexicon.resolveId(classId);\r\n\t\t\tthis._ref.putOffset(classId, value)\r\n\t\t}\r\n\t\tthis.putProperty = function(classId, value){\r\n\t\t\tclassId = lexicon.resolveId(classId);\r\n\t\t\tvalue = lexicon.resolveId(value);\r\n\t\t\tthis._ref.putProperty(classId, value)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tLexicon.prototype._getValue = function( theDesc, descType, position ) {\r\n\t\tswitch( descType ) {\r\n\t\t\tcase 'DescValueType.BOOLEANTYPE':  \r\n\t\t\t\treturn theDesc.getBoolean( position );  \r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.CLASSTYPE':  \r\n\t\t\t\treturn theDesc.getClass( position );  \r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.DOUBLETYPE':  \r\n\t\t\t\treturn theDesc.getDouble( position );  \r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.ENUMERATEDTYPE':  \r\n\t\t\t\treturn typeIDToStringID(theDesc.getEnumerationValue( position ));  \r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.INTEGERTYPE':  \r\n\t\t\t\treturn theDesc.getInteger( position );  \r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.LISTTYPE':  \r\n\t\t\t\t var result = new LxActionList(theDesc.getList( position ));\r\n\t\t\t\treturn result;  \r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.OBJECTTYPE':\r\n\t\t\t\t var result = new LxActionDescriptor (theDesc.getObjectValue( position ));\r\n\t\t\t\treturn result;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.REFERENCETYPE':\r\n\t\t\t\t var result = new LxActionReference (theDesc.getReference( position ));\r\n\t\t\t\treturn result;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.STRINGTYPE':\r\n\t\t\t\tvar str = '';\r\n\t\t\t\treturn str + theDesc.getString( position );  \r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.UNITDOUBLE':  \r\n\t\t\t\treturn theDesc.getUnitDoubleValue( position );  \r\n\t\t\t\tbreak;        \r\n\r\n\t\t\tcase 'DescValueType.ALIASTYPE':  \r\n\t\t\t\treturn decodeURI(theDesc.getPath( position ));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.RAWTYPE':  \r\n\t\t\t\treturn theDesc.getData( position ).substring( 0, this.descParams.maxRawLimit );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ReferenceFormType.CLASSTYPE':\r\n\t\t\t\treturn theDesc.getDesiredClass();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ReferenceFormType.ENUMERATED':\r\n\t\t\t\tvar enumeratedID = theDesc.getEnumeratedValue();\r\n\t\t\t\treturn this._getBestName( enumeratedID );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ReferenceFormType.IDENTIFIER':\r\n\t\t\t\treturn theDesc.getIdentifier();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ReferenceFormType.INDEX':\r\n\t\t\t\treturn theDesc.getIndex();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ReferenceFormType.NAME':\r\n\t\t\t\tvar str = '';\r\n\t\t\t\treturn str + theDesc.getName();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ReferenceFormType.OFFSET':\r\n\t\t\t\treturn theDesc.getOffset();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ReferenceFormType.PROPERTY':\r\n\t\t\t\tvar propertyID = theDesc.getProperty();\r\n\t\t\t\treturn this._getBestName( propertyID );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;  \r\n\t\t};\r\n\t};\r\n\r\n\tLxActionReference.prototype.toString = function (){\r\n\t\treturn '[LxActionReference]';\r\n\t}\r\n\r\n\tLxActionList.prototype.toString = function (){\r\n\t\treturn '[LxActionList]';\r\n\t}\r\n\r\n\tLxActionDescriptor.prototype.toString = function (){\r\n\t\treturn '[LxActionDescriptor]';\r\n\t}\r\n\r\n\tLxActionDescriptor.prototype.valueOf = function (){\r\n\t\treturn this._desc;\r\n\t}\r\n\r\n\r\n\r\n\tfunction Lexicon() {\r\n\t\tthis.version = 1;\r\n\t\tthis.settings = {\r\n\t\t\tdebugMode : false\r\n\t\t}\r\n\t};\r\n\r\n\tfunction LayerContext(pointer, type){\r\n\t\tvar _descLocking, _backgroundCounter, _documentLayersCount;\r\n\t\t\r\n\t\t// init\r\n\t\t\r\n\t\tthis.init = function(){\r\n\t\t\t_descLocking = new LxActionDescriptor( lexicon.getLayerDescriptor (pointer, type, \"layerLocking\").getObjectValue('layerLocking'));\r\n\t\t\t_backgroundCounter = lexicon.existsBackgroundLayer() ? -1 : 0;\r\n\t\t\t_documentLayersCount = lexicon.getDocumentLayersCount();\r\n\t\t\t\r\n\t\t\tthis.layerID = lexicon.getLayerDescriptor (pointer, type, \"layerID\").getInteger(\"layerID\");\r\n\t\t\tthis.itemIndex = lexicon.getLayerDescriptor (pointer, type, \"itemIndex\").getInteger(\"itemIndex\") + _backgroundCounter;\r\n\t\t\tthis.layerLocking = {\r\n\t\t\t\tprotectAll: _descLocking.getBoolean(\"protectAll\"),\r\n\t\t\t\tprotectArtboardAutonest: _descLocking.getBoolean(\"protectArtboardAutonest\"),\r\n\t\t\t\tprotectComposite: _descLocking.getBoolean(\"protectComposite\"),\r\n\t\t\t\tprotectPosition: _descLocking.getBoolean(\"protectPosition\"),\r\n\t\t\t\tprotectTransparency: _descLocking.getBoolean(\"protectTransparency\")\r\n\t\t\t};\r\n\t\t\tthis.name = lexicon.getLayerDescriptor (pointer, type, \"name\").getString(\"name\");\r\n\t\t\tthis.visible = lexicon.getLayerDescriptor (pointer, type, \"visible\").getBoolean(\"visible\");\r\n\t\t\tthis.indexInGroup = 0; //in same level\r\n\t\t\tthis.absoluteIndexInGroup = 0;\r\n\t\t\tthis.layerSection = typeIDToStringID(lexicon.getLayerDescriptor (pointer, type, \"layerSection\").getEnumerationValue('layerSection'));\r\n\t\t\tthis.isGroup = (this.layerSection === \"layerSectionStart\" || this.layerSection === \"layerSectionEnd\");\r\n\t\t\tthis.groupBounds = null;\r\n\t\t\tthis.getGroupBounds = null;\r\n\t\t\tthis.isParentLocked = null;\r\n\t\t\tthis.isParentInvisible = null;\r\n\t\t\tthis.setDomLayer = null;\r\n\t\t\tthis.isParentDocument = false;\r\n\t\t\tthis.parentItemIndex = null;\r\n\t\t\tthis._setIndexInGroup ();\r\n\t\t\tif(this.isGroup){\r\n\t\t\t\tthis._setGroupLength ();\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tthis.reinit = function(){\r\n\t\t\tpointer = this.layerID;\r\n\t\t\ttype = \"id\";\r\n\t\t\tthis.init();\r\n\t\t}\r\n\t\t\r\n\t\tthis._setIndexInGroup = function(){\r\n\t\t\tvar indexInGroup = 0, absoluteIndexInGroup = 0, i = this.itemIndex, level = 0;\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tfor(i; ((i <= _documentLayersCount) && (level <= 0)); i++){  \r\n\t\t\t\t///* debug */ $.writeln(lexicon.getLayerDescriptor (i, null, \"name\").getString('name'));$.writeln(level);\r\n\t\t\t\tvar layerSection = typeIDToStringID(lexicon.getLayerDescriptor (i, null, \"layerSection\").getEnumerationValue('layerSection'));\r\n\t\t\t\tif(layerSection===\"layerSectionStart\" && this.itemIndex !== i){  \r\n\t\t\t\t\tlevel++;  \r\n\t\t\t\t}  \r\n\t\t\t\telse if(layerSection===\"layerSectionEnd\"){  \r\n\t\t\t\t\tlevel--;\r\n\t\t\t\t}  \r\n\t\t\t\tif(level == 0 && layerSection!==\"layerSectionEnd\" && this.itemIndex !== i){\r\n\t\t\t\t\tindexInGroup++; // first item in DOM group begins with zero... so we don't count layer itself\r\n\t\t\t\t}\r\n\t\t\t\tif(level <= 0){\r\n\t\t\t\t\tabsoluteIndexInGroup++; // this value is for getting new action descriptor in linear list. So we need to count everything\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar a = 0;\r\n\t\t\t//$.writeln(i);\r\n\t\t\tthis.absoluteIndexInGroup = absoluteIndexInGroup;\r\n\t\t\tthis.indexInGroup = indexInGroup;\r\n\t\t\ttry{\r\n\t\t\t\t// fail if next layer doesn't exists. So it means that we reached most top layer\r\n\t\t\t\tvar dummmy = lexicon.getLayerDescriptor (i, null, \"name\");\r\n\t\t\t}catch(e){\r\n\t\t\t\tthis.isParentDocument = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tthis._setGroupLength = function(){\r\n\t\t\tvar length = 0; // DOM like\r\n\t\t\tvar lengthAbsolute = 0; // DOM like with folders ends\r\n\t\t\tvar deepLength = 0; // with nested without folders ends\r\n\t\t\tvar deepLengthAbsolute = 0; //all\r\n\t\t\t\r\n\t\t\tfor(var i = this.itemIndex-1, level = 0; (i > 0) && (level >= 0); i--){  \r\n\t\t\t\tvar layerSection = typeIDToStringID(lexicon.getLayerDescriptor (i, null, \"layerSection\").getEnumerationValue('layerSection'));\r\n\t\t\t\t\r\n\t\t\t\tdeepLengthAbsolute++;\r\n\t\t\t\t\r\n\t\t\t\tif(layerSection===\"layerSectionEnd\"){  \r\n\t\t\t\t\tlevel--;\r\n\t\t\t\t} \r\n\t\t\t\t\r\n\t\t\t\tif(level == 0){\r\n\t\t\t\t\tlengthAbsolute++;\r\n\t\t\t\t\tif(layerSection!==\"layerSectionEnd\"){\r\n\t\t\t\t\t\tlength++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(layerSection===\"layerSectionStart\"){  \r\n\t\t\t\t\tlevel++;  \r\n\t\t\t\t\tdeepLength++;\r\n\t\t\t\t}  \r\n\t\t\t\t \r\n\t\t\t\tif(layerSection===\"layerSectionContent\"){\r\n\t\t\t\t\tdeepLength++;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tthis.length = length;\r\n\t\t\tthis.lengthAbsolute = lengthAbsolute; // DOM li\r\n\t\t\tthis.deepLength = deepLength; // with neste\r\n\t\t\tthis.deepLengthAbsolute = deepLengthAbsolute; //all\r\n\t\t\t\r\n\t\t}\r\n\t\r\n\t\tthis.getContentPointers = function(type,ignoreGroupEnds){\r\n\t\t\tif(this.isGroup){\r\n\t\t\t\tvar len = this.itemIndex - this.deepLengthAbsolute - 1;\r\n\t\t\t\tvar result = [];\r\n\t\t\t\t\r\n\t\t\t\tfor(var i = this.itemIndex - 1; i > len; i--){\r\n\t\t\t\t\tvar pointer;\r\n\t\t\t\t\tif(!type){\r\n\t\t\t\t\t\tpointer = i;\r\n\t\t\t\t\t}else if(type.toLowerCase() === \"id\"){\r\n\t\t\t\t\t\tpointer = lexicon.convertLayerIndexToId(i);\r\n\t\t\t\t\t}else if(type.toLowerCase() === \"name\"){\r\n\t\t\t\t\t\tpointer = lexicon.getLayerDescriptor(i,null,\"name\").getString(\"name\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar notGroupEnd = typeIDToStringID(lexicon.getLayerDescriptor (i, null, \"layerSection\").getEnumerationValue('layerSection')) !== \"layerSectionEnd\";\r\n\t\t\t\t\r\n\t\t\t\t\tif((notGroupEnd && ignoreGroupEnds) || !ignoreGroupEnds){\r\n\t\t\t\t\t\tresult.push(pointer);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn result;\r\n\t\t\t}else{\r\n\t\t\t\tthrow \"Can't get folder content. It's not a group\";\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\t\r\n\t\tthis.init();\r\n\t};\r\n\t   \r\n\t /*  Input\r\n\t\tvalue = reference value:layerIndex, id, name, array\r\n\t\ttype = optional, \"id\" if number is ID    \r\n\t\tpsClass = optional\r\n\t*/\r\n\r\n\tLxActionDescriptor.prototype.lxRef = function(value, psMainClass, type, psClass){\r\n\t\tif(!psClass){\r\n\t\t\tpsClass = \"null\";\r\n\t\t}\r\n\t\tif(value && value.constructor === Array){\r\n\t\t\tthis.putList( psClass, lexicon.ref(psMainClass, value,  type) ); \r\n\t\t} else {\r\n\t\t\tthis.putReference( psClass, lexicon.ref(psMainClass, value, type) ); \r\n\t\t}\r\n\t}\r\n\r\n\tLxActionDescriptor.prototype.lxRefLayer = function(value, type){\r\n\t\tthis.lxRef(value,'Lyr ',type);\r\n\t}\r\n\r\n\tLxActionDescriptor.prototype.lxRefDocument = function(value, type){\r\n\t\tthis.lxRef(value,'Dcmn',type);\r\n\t}\r\n\r\n\tLexicon.prototype.getLayerDescriptor = function(value, type, property){\r\n\t\treturn lexicon.getDescriptor(\"Lyr \", value, type, property);\r\n\t}\r\n\r\n\t/* return value */\r\n\tLexicon.prototype.getDocumentProperty = function (property, pointer, pointerType){\r\n\t\treturn lexicon.getDescriptor(\"Dcmn\", pointer, pointerType, property).getValue(property);\r\n\t}\r\n\r\n\t/* return value */\r\n\tLexicon.prototype.getLayerProperty = function (property, pointer, pointerType){\r\n\t\treturn lexicon.getDescriptor(\"Lyr \", pointer, pointerType, property).getValue(property);\r\n\t}\r\n\r\n\t/* return value */\r\n\tLexicon.prototype.getAppProperty = function (property, pointer, pointerType){\r\n\t\treturn lexicon.getDescriptor(\"capp\", pointer, pointerType, property).getValue(property);\r\n\t}\r\n\r\n\t/* return value */\r\n\tLexicon.prototype.getPathProperty = function (property, pointer, pointerType){\r\n\t\treturn lexicon.getDescriptor(\"Path\", pointer, pointerType, property).getValue(property);\r\n\t}\r\n\r\n\tLexicon.prototype.getDocumentDescriptor = function(value, type, property){\r\n\t\treturn lexicon.getDescriptor(\"Dcmn\", value, type, property);\r\n\t}\r\n\tLexicon.prototype.getDocumentLayersCount = function (value, type){\r\n\t\treturn lexicon.getDescriptor(\"Dcmn\", value, type, \"numberOfLayers\").getInteger(\"numberOfLayers\");\r\n\t}\r\n\r\n\tLexicon.prototype.getDocumentDeepestLevel = function(){\r\n\t\t// this doesn't utilize lexicon features becuase we need performance. We want traverse all layers.\r\n\t\tvar bgCounter = lexicon.existsBackgroundLayer() ? 0 : 1;\r\n\t\tvar currentLevel = 1;\r\n\t\tvar maxLevel = 1;\r\n\t\tvar idLyr = charIDToTypeID( \"Lyr \" ); \r\n\t\tvar idPrp = stringIDToTypeID('property');\r\n\t\tvar idSection = stringIDToTypeID('layerSection');\r\n\t\tvar idStart = stringIDToTypeID(\"layerSectionStart\");\r\n\t\tvar idEnd = stringIDToTypeID(\"layerSectionEnd\");\r\n\t\tvar ref, desc, layerSection;\r\n\t\t\r\n\t\tfor(var i = bgCounter, len = lexicon.getDocumentLayersCount(); i<len ; i++){  \r\n\t\t\t\r\n\t\t\tref = new ActionReference();    \r\n\t\t\tref.putProperty(idPrp, idSection);\r\n\t\t\tref.putIndex( idLyr, i );   \r\n\t\t\tdesc = executeActionGet(ref);  \r\n\t\t\t  \r\n\t\t\tlayerSection = desc.getEnumerationValue(idSection);  \r\n\t\t\tif(layerSection===idEnd){  \r\n\t\t\t\tcurrentLevel++; \r\n\t\t\t\tif(currentLevel > maxLevel){\r\n\t\t\t\t\tmaxLevel = currentLevel;\r\n\t\t\t\t\t//$.writeln(lexicon.getLayerDescriptor(i+1, null, \"name\").getValue(\"name\"));\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}  \r\n\t\t\telse if(layerSection===idStart){  \r\n\t\t\t\tcurrentLevel--;  \r\n\t\t\t}  \r\n\t\t\t\r\n\t\t}\r\n\t\treturn maxLevel;\r\n\t}\r\n\r\n\tLexicon.prototype.getDescriptor = function(psMainClass,value, type, property){\r\n\t\tvar ref = new LxActionReference();\r\n\t\tif(property){\r\n\t\t\tref.putProperty(\"Prpr\", property);  \r\n\t\t}\r\n\t\tref = lexicon.ref(psMainClass, value, type, ref);\r\n\t\t\r\n\t\tvar result = executeActionGet(ref);\r\n\t\tresult = new LxActionDescriptor(result);\r\n\t\t\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\r\n\r\n\r\n\tLexicon.prototype.resolveId = function (id){\r\n\t\tif (id.constructor == Number) {\r\n\t\t\treturn id;\r\n\t\t} else if(id.constructor == String){\r\n\t\t\tif(id.length > 0){\r\n\t\t\t\t\r\n\t\t\t\tif(id.length === 4){\r\n\t\t\t\t\ttry { \r\n\t\t\t\t\t\tvar typeID = charIDToTypeID(id);\r\n\t\t\t\t\t\tif(typeIDToStringID(typeID) === \"\"){\r\n\t\t\t\t\t\t\treturn stringIDToTypeID(id); \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn typeID\r\n\t\t\t\t\t} \r\n\t\t\t\t\tcatch (e) { return stringIDToTypeID(id); }\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn stringIDToTypeID(id);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tError.runtimeError(19, id);  // Bad Argument\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/*  Input\r\n\t\tvalue = reference value:layerIndex, id, name, array\r\n\t\ttype = optional, \"id\" if number is ID    \r\n\t*/\r\n\tLexicon.prototype.ref = function (psMainClass, value, type, ref){\r\n\t\tif(!ref){\r\n\t\t\tref = new LxActionReference();  \r\n\t\t}\r\n\t\tvar psMainClass = this.resolveId(psMainClass);\r\n\t\t\r\n\t\tif(value && value.constructor === Array){\r\n\t\t\tvar list = new ActionList();\r\n\t\t\tfor(var i = 0, len = value.length; i < len; i++){\r\n\t\t\t\tvar ref = new ActionReference();  \r\n\t\t\t\tref = this._refSingle(psMainClass, value[i], type, ref);\r\n\t\t\t\tlist.putReference(ref);\r\n\t\t\t}\r\n\t\t\treturn list;\r\n\t\t}else{\r\n\t\t\tref = this._refSingle(psMainClass, value, type, ref);\r\n\t\t\treturn ref;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tLexicon.prototype._refSingle = function (psMainClass, value, type, ref){\r\n\t\tif(!ref){\r\n\t\t\tref = new LxActionReference();\r\n\t\t}\r\n\t\t\r\n\t\tif(type && type.toLowerCase() === \"id\"){\r\n\t\t\tref.putIdentifier( psMainClass, value );\r\n\t\t}else if(type && type.toLowerCase() === \"offset\"){\r\n\t\t\tref.putOffset( psMainClass, value );\r\n\t\t}else if(typeof value === \"number\" ){\r\n\t\t\tref.putIndex( psMainClass, value );\r\n\t\t}else if(typeof value === \"string\" ){\r\n\t\t\tref.putName( psMainClass, value );\r\n\t\t}else if(value === undefined || value === null){\r\n\t\t\tref.putEnumerated( psMainClass, charIDToTypeID(\"Ordn\"), charIDToTypeID(\"Trgt\") );  \r\n\t\t}else{\r\n\t\t\tthrow \"Can't create reference. Bad data type\"\r\n\t\t}\r\n\t\treturn ref;\r\n\t}\r\n\r\n\t/// native overrides\r\n\r\n\texecuteAction = function(eventID, descriptor, displayDialogs){\r\n\t\tif(displayDialogs === undefined){\r\n\t\t\tdisplayDialogs = DialogModes.NO;\r\n\t\t}\r\n\t\tif(descriptor !== undefined && descriptor._desc){\r\n\t\t\tdescriptor = descriptor._desc;\r\n\t\t}\r\n\t\teventID = Lexicon.prototype.resolveId(eventID);\r\n\t\tlexicon.settings.debugMode ? $.hiresTimer : null;\r\n\t\tvar desc = app.executeAction(eventID, descriptor, displayDialogs);\r\n\t\t\r\n\t\tif(lexicon.settings.debugMode){\r\n\t\t\tvar time = $.hiresTimer;\r\n\t\t\tvar event = eventID;\r\n\t\t\ttry{event = typeIDToStringID(eventID)}catch(e){alert(e)}\r\n\t\t\t$.writeln(time/1000 +\"\\n\"+$.stack+\"\\n\\n\");\r\n\t\t}\r\n\t\r\n\t\treturn desc;\r\n\t};\r\n\r\n\texecuteActionGet = function (ref){\r\n\t\tif(ref._ref){\r\n\t\t\tref = ref._ref;\r\n\t\t}\r\n\t\tvar result = app.executeActionGet(ref);\r\n\t\treturn result;\r\n\t};\r\n\r\n\t// common methods\r\n\r\n\tLexicon.prototype.selectDocument = function(value, type){\r\n\t\tvar desc = new LxActionDescriptor();\r\n\t\tdesc.lxRefDocument (value, type);\r\n\t\texecuteAction( \"slct\", desc, DialogModes.NO );\r\n\t}\r\n\r\n\tLexicon.prototype.convertLayerIdToIndex = function(id){\r\n\t\tvar backgroundCounter = Lexicon.prototype.existsBackgroundLayer() ? -1 : 0;\r\n\t\t\r\n\t\tif(id.constructor === Array){\r\n\t\t\tvar result = new Array();\r\n\t\t\tfor (var i = 0, len = id.length; i < len; i++){\r\n\t\t\t\tresult.push(idToIndex(id[i]));\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}else{\r\n\t\t\treturn idToIndex(id);\r\n\t\t}\r\n\r\n\t\tfunction idToIndex(identifier){\r\n\t\t\tvar desc = Lexicon.prototype.getLayerDescriptor(identifier, \"id\", \"itemIndex\");\r\n\t\t\tvar index = desc.getInteger(\"itemIndex\") + backgroundCounter;\r\n\t\t\treturn index;\r\n\t\t}\r\n\t}\r\n\r\n\tLexicon.prototype.convertLayerIndexToId = function(index){\r\n\t\tvar result = new Array();\r\n\t\t\r\n\t\tvar indexToId = function(idx){\r\n\t\t\tvar desc = Lexicon.prototype.getLayerDescriptor(idx, null, \"layerID\");\r\n\t\t\tvar id = desc.getInteger(\"layerID\");\r\n\t\t\tresult.push(id);\r\n\t\t}\r\n\r\n\t\tthis.forEach(index, null, indexToId);\r\n\t\t\r\n\t\treturn result.length === 1 ? result[0] : result;\r\n\t}\r\n\r\n\tLexicon.prototype.selectLayers = function(value, type){\r\n\t\tif(value.constructor === Array && value.length > 1){\r\n\t\t\tif(type ===\"id\"){\r\n\t\t\t\tthis.convertLayerIdToIndex (value)\r\n\t\t\t}\r\n\t\t\tvalue.sort(sortNumber);\r\n\t\t\tvar invertedArray = new Array();\r\n\t\t\t\r\n\t\t\tvar continuousScore = 0;\r\n\t\t\tfor(var i = value[0], len = value[value.length-1], j=0; i<len; i++){\r\n\t\t\t\tif(value[j] !== i){\r\n\t\t\t\t\tinvertedArray.push(i);\r\n\t\t\t\t}else{j++}\r\n\t\t\t}\r\n\t\t\tvar invertedSelection = invertedArray.length < value.length;\r\n\t\t\t\r\n\t\t\tsetSelectedLayer(value[0], type);\r\n\t\t\t\r\n\t\t\tif(invertedSelection){\r\n\t\t\t\taddContinuousSelection(value[value.length-1]);\r\n\t\t\t\tthis.deselectLayers (invertedArray, type);\r\n\t\t\t}else{\r\n\t\t\t\tvalue.shift();\r\n\t\t\t\tthis.addSelectedLayers (value, type);\r\n\t\t\t}\r\n\t\t\r\n\t\t}else if(value.constructor === Array && value.length === 1){\r\n\t\t\tsetSelectedLayer(value[0], type)\r\n\t\t}else{\r\n\t\t\tsetSelectedLayer(value, type)\r\n\t\t}\r\n\r\n\t\tfunction setSelectedLayer(pointer, type){\r\n\t\t\tvar desc = new LxActionDescriptor();\r\n\t\t\tdesc.lxRefLayer (pointer, type);\r\n\t\t\tdesc.putBoolean( \"MkVs\", false );\r\n\t\t\texecuteAction( \"slct\", desc );\r\n\t\t}\r\n\t\t\r\n\t\tfunction addContinuousSelection(pointer,type){\r\n\t\t\tvar desc = new LxActionDescriptor();\r\n\t\t\tdesc.lxRefLayer (pointer, type);\r\n\t\t\tdesc.putEnumerated( \"selectionModifier\", \"selectionModifierType\", \"addToSelectionContinuous\" );\r\n\t\t\tdesc.putBoolean( \"MkVs\", false );\r\n\t\t\texecuteAction( \"slct\", desc );\r\n\t\t}\r\n\r\n\t\tfunction sortNumber(a,b) {\r\n\t\t\treturn a - b;\r\n\t\t}\r\n\t}\r\n\r\n\t// sibling groups with content inside are counted as single layer if deep = false\r\n\tLexicon.prototype.getLayerIndexInGroup = function(pointer, type, deep){\r\n\t\t\r\n\t}\r\n\r\n\t// sibling groups with content inside are counted as single layer if deep = false\r\n\tLexicon.prototype.getLayerCountInGroup = function(pointer, type, deep){\r\n\t\t\r\n\t}\r\n\r\n\t// because DOM sucks\r\n\r\n\tfunction LayerContextStack(pointer,type){\r\n\t\tthis.stack = [];\r\n\t\t\r\n\t\tthis.loadStack = function(pointer, type){\r\n\t\t\tthis.stack = [];\r\n\t\t\t//innerLoad.call(this, pointer, type);\r\n\t\t\t\r\n\t\t\t/*function innerLoad(pointer, type){\r\n\t\t\t\tvar layerContext = new LayerContext(pointer, type);\r\n\t\t\t\tthis.stack.push(layerContext);\r\n\t\t\t\t//$.writeln(layerContext.name);\r\n\t\t\t\tif(!layerContext.isParentDocument){\r\n\t\t\t\t\tinnerLoad.call (this, layerContext.itemIndex + layerContext.absoluteIndexInGroup);\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\t\t\t\r\n\t\t\tvar layerContext = new LayerContext(pointer, type);\r\n\t\t\tthis.stack.push(layerContext);\r\n\t\t\t\r\n\t\t\twhile(!layerContext.isParentDocument){\r\n\t\t\t\tlayerContext = new LayerContext(layerContext.itemIndex + layerContext.absoluteIndexInGroup, type);\r\n\t\t\t\tthis.stack.push(layerContext);\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tthis.getDOMlayer = function(stackArrayIndex){\r\n\t\t\tvar layer = app.activeDocument.layers;\r\n\t\t\tfor (var i = stackArrayIndex || this.stack.length -1; i >= 0; i--){\r\n\t\t\t\tif(i!==0){\r\n\t\t\t\t\tlayer = layer[this.stack[i].indexInGroup].layers;\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn layer[this.stack[i].indexInGroup];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthrow \"getDOMlayer error\";\r\n\t\t}\r\n\t\r\n\t\tthis.getLast = function(){\r\n\t\t\treturn this.stack[this.stack.length-1];\r\n\t\t}\r\n\r\n\t\tthis.hasParentProtectAll = function(layerContext){\r\n\t\t\tvar startLevelPassed = false;\r\n\t\t\tfor(var i = 0, len = this.stack.length; i < len; i++){\r\n\t\t\t\tif(!startLevelPassed){\r\n\t\t\t\t\tstartLevelPassed = this.stack[i].id===layerContext.id;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar index = this.stack[i].itemIndex;\r\n\t\t\t\t\tvar allLock = lexicon.getLayerDescriptor (index, null, \"layerLocking\").getObjectValue(stringIDToTypeID('layerLocking')).getBoolean(stringIDToTypeID('protectAll'));\r\n\t\t\t\t\tif(allLock){\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\t/*\r\n\t\tvar getDataContext = function (pointer, type){\r\n\t\t\tvar curLayer = new LayerContext(pointer, type);\r\n\t\t\tif(curLayer.isGroup){\r\n\t\t\t\t\r\n\t\t\t\tcurLayer.groupBounds = {\r\n\t\t\t\t\tleft: null,\r\n\t\t\t\t\ttop: null,\r\n\t\t\t\t\tright: null,\r\n\t\t\t\t\tbottom: null\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn curLayer;\r\n\t\t}*/\r\n\t\r\n\t\tthis.loadStack(pointer,type);\r\n\t\t\r\n\t\tthis.reinit = function(){\r\n\t\t\tvar lastID = this.getLast().layerID;\r\n\t\t\tthis.loadStack(lastID, \"id\");\r\n\t\t}\r\n\r\n\t\t//var result = this.forEach(pointer, type, getDataContext);\r\n\t\t//return result;\r\n\t}\r\n\r\n\tLexicon.prototype.deselectLayers = function(value, type){\r\n\t\tvar deselectLayer = function (pointer, type){\r\n\t\t\tvar desc = new LxActionDescriptor();\r\n\t\t\tdesc.lxRefLayer (pointer, type);\r\n\t\t\tdesc.putEnumerated( \"selectionModifier\", \"selectionModifierType\", \"removeFromSelection\" );\r\n\t\t\tdesc.putBoolean( \"MkVs\", false );\r\n\t\t\texecuteAction( \"slct\", desc );\r\n\t\t}\r\n\r\n\t\tthis.forEach(value, type, deselectLayer)\r\n\t}\r\n\r\n\tLexicon.prototype.addSelectedLayers = function(value, type){\r\n\t\tvar addSelectedLayer = function (pointer, type){\r\n\t\t\tvar desc = new LxActionDescriptor();\r\n\t\t\tdesc.lxRefLayer (pointer, type);\r\n\t\t\tdesc.putEnumerated( \"selectionModifier\", \"selectionModifierType\", \"addToSelection\" );\r\n\t\t\tdesc.putBoolean( \"MkVs\", false );\r\n\t\t\texecuteAction( \"slct\", desc );\r\n\t\t}\r\n\t\t\r\n\t\tthis.forEach(value, type, addSelectedLayer)\r\n\t}\r\n\r\n\tLexicon.prototype.createGroup = function(value, type){\r\n\t\ttry{\r\n\t\t\tvar desc = new LxActionDescriptor();\r\n\t\t\tvar ref = new LxActionReference();\r\n\t\t\tref.putClass( \"layerSection\" );\r\n\t\t\tdesc.putReference( \"null\", ref );\r\n\t\t\tvar ref2 = this.ref(\"Lyr \", value, type)\r\n\t\t\tdesc.putReference( \"From\", ref2 );\r\n\t\t\texecuteAction( \"Mk  \", desc );\r\n\t\t}\r\n\t\tcatch(e){\r\n\t\t\tthrow \"Can't create group.\"\r\n\t\t}\r\n\t}\r\n\r\n\tLexicon.prototype.hasHistorySnapshot = function(pointer, type){\r\n\t\ttry{\r\n\t\t\tvar ref = new ActionReference();\r\n\t\t\tvar ref = lexicon._refSingle(\"SnpS\", pointer, type)\r\n\t\t\texecuteActionGet( ref );\t\t\r\n\t\t\treturn true;\r\n\t\t}catch(e){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tLexicon.prototype.makeHistorySnapshot = function(snapshotName){\r\n\t\tvar idMk = charIDToTypeID( \"Mk  \" );\r\n\t\t\tvar desc11 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref5 = new ActionReference();\r\n\t\t\t\tvar idSnpS = charIDToTypeID( \"SnpS\" );\r\n\t\t\t\tref5.putClass( idSnpS );\r\n\t\t\tdesc11.putReference( idnull, ref5 );\r\n\t\t\tvar idFrom = charIDToTypeID( \"From\" );\r\n\t\t\t\tvar ref6 = new ActionReference();\r\n\t\t\t\tvar idHstS = charIDToTypeID( \"HstS\" );\r\n\t\t\t\tvar idCrnH = charIDToTypeID( \"CrnH\" );\r\n\t\t\t\tref6.putProperty( idHstS, idCrnH );\r\n\t\t\tdesc11.putReference( idFrom, ref6 );\r\n\t\t\tif(name){\r\n\t\t\t\tvar idNm = charIDToTypeID( \"Nm  \" );\r\n\t\t\t\tdesc11.putString( idNm, snapshotName );\r\n\t\t\t}\r\n\t\t\tvar idUsng = charIDToTypeID( \"Usng\" );\r\n\t\t\tvar idHstS = charIDToTypeID( \"HstS\" );\r\n\t\t\tvar idFllD = charIDToTypeID( \"FllD\" );\r\n\t\t\tdesc11.putEnumerated( idUsng, idHstS, idFllD );\r\n\t\treturn executeAction( idMk, desc11, DialogModes.NO );\r\n\t}\r\n\r\n\tLexicon.prototype.restoreHistorySnapshot = function(pointer, type){\r\n\t\tvar desc = new LxActionDescriptor();\r\n\t\tvar ref = lexicon._refSingle(\"SnpS\", pointer, type)\r\n\t\tdesc.putReference( \"null\", ref );\r\n\t\texecuteAction( \"slct\" , desc);\r\n\t}\r\n\r\n\tLexicon.prototype.removeHistorySnapshot = function(pointer, type){\r\n\t\tvar desc = new LxActionDescriptor();\r\n\t\tvar ref = lexicon._refSingle(\"SnpS\", pointer, type)\r\n\t\tdesc.putReference( \"null\", ref );\r\n\t\texecuteAction( \"Dlt \" , desc);\r\n\t}\r\n\r\n\tLexicon.prototype.deleteLayers = function(value, type){\r\n\t\ttry{\r\n\t\t\tvar deleteLayer = function(value, type){\r\n\t\t\t\tvar desc = new LxActionDescriptor();\r\n\t\t\t\tdesc.lxRefLayer (value, type);\r\n\t\t\t\texecuteAction( \"Dlt \", desc );\r\n\t\t\t}\r\n\t\t\tthis.forEach(value, type, deleteLayer);\r\n\t\t}\r\n\t\tcatch(e){\r\n\t\t\tthrow \"Can't delete layer\"\r\n\t\t}\r\n\t}\r\n\r\n\tLexicon.prototype.forEach = function(pointer, type, itemFunction){\r\n\t\tif(pointer !== undefined && pointer.constructor === Array){\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0, len = pointer.length; i < len; i++){\r\n\t\t\t\tvar returnedItem = itemFunction(pointer[i], type);\r\n\t\t\t\tresult.push(returnedItem);\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}else{\r\n\t\t\tvar result = itemFunction(pointer, type);\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\r\n\tLexicon.prototype.forEachLayerWithSelection = function (pointer, type, layerFunction){\r\n\t\tif(pointer.constructor === Array){\r\n\t\t\tfor(var i = 0, len = pointer.length; i < len; i++){\r\n\t\t\t\tthis.selectLayers (pointer[i], type);\r\n\t\t\t\tlayerFunction(pointer[i],type);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.selectLayers (pointer, type);\r\n\t\t\tlayerFunction(pointer,type);\r\n\t\t}\r\n\t}\r\n\r\n\t//\r\n\tLexicon.prototype.getSelectedPathsPointer = function(type){\r\n\t\t\r\n\t\tvar pathsLength = lexicon.getDocumentProperty(\"numberOfPaths\");\r\n\t\tvar result = [];\r\n\t\t\r\n\t\tfor (var i = 1; i <= pathsLength; i++){\r\n\t\t\tvar selected = lexicon.getPathProperty(\"targetPath\", i);\r\n\t\t\tif(selected){\r\n\t\t\t\tif(type === undefined){\r\n\t\t\t\t\tresult.push(lexicon.getPathProperty(\"itemIndex\", i));\r\n\t\t\t\t} else if(type.toLowerCase() === \"id\"){\r\n\t\t\t\t\tresult.push(lexicon.getPathProperty(\"ID\", i));\r\n\t\t\t\t}if(type.toLowerCase() === \"name\"){\r\n\t\t\t\t\tresult.push(lexicon.getPathProperty(\"pathName\", i));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\r\n\tLexicon.prototype.getSelectedLayersId = function(docPointer, pionterType){\r\n\t\tvar selectedLayers = new Array();\r\n\t\t\tvar desc = this.getDocumentDescriptor(docPointer, pionterType, \"targetLayersIDs\")\r\n\t\t\tvar hasSelectedLayers = desc.hasKey('targetLayersIDs');\r\n\t\t\tif(hasSelectedLayers){\r\n\t\t\t\tvar layersIDList = desc.getList('targetLayersIDs');\r\n\t\t\t\tlayersIDList.forEach(function(i){\r\n\t\t\t\t\tvar id = layersIDList.getReference(i).getIdentifier(\"layer\");\r\n\t\t\t\t\tselectedLayers.push(id);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\treturn selectedLayers;\r\n\t}\r\n\r\n\tLexicon.prototype.existsBackgroundLayer = function(value, type){\r\n\t\tvar desc = Lexicon.prototype.getDocumentDescriptor(value,type,\"hasBackgroundLayer\");\r\n\t\treturn desc.getBoolean(\"hasBackgroundLayer\");\r\n\t}\r\n\r\n\tLexicon.prototype.descriptorToJSON = function(desc){\r\n\t\tif(desc._desc){\r\n\t\t\tdesc = desc._desc;\r\n\t\t}\r\n\t\tvar convertDesc = new ActionDescriptor();\r\n\t\tconvertDesc.putObject( stringIDToTypeID(\"object\"), stringIDToTypeID(\"object\"), desc );\r\n\t\tvar jsonDesc = executeAction( stringIDToTypeID(\"convertJSONdescriptor\"), convertDesc, DialogModes.NO );\r\n\t\treturn jsonDesc.getString(stringIDToTypeID(\"json\") );\r\n\t}\r\n\r\n\tLexicon.prototype.getSelectedLayersIndexes = function(value, type){\r\n\t\tfunction getBgCounter(){\r\n\t\t\treturn Lexicon.prototype.existsBackgroundLayer() ? 0 : 1;\r\n\t\t}\r\n\t\t\r\n\t\tvar selectedLayers = new Array();\r\n\t\t\tvar backGroundCounter = getBgCounter();\r\n\t\t\tvar desc = this.getDocumentDescriptor(value, type, \"targetLayersIndexes\")\r\n\t\t\tvar hasSelectedLayers = desc.hasKey('targetLayersIndexes');\r\n\t\t\tif(hasSelectedLayers){\r\n\t\t\t\tvar layersIDList = desc.getList('targetLayersIndexes');\r\n\t\t\t\tlayersIDList.forEach(function(i){\r\n\t\t\t\t\tvar index = layersIDList.getReference(i).getIndex(\"layer\");\r\n\t\t\t\t\tselectedLayers.push(index+backGroundCounter);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\treturn selectedLayers;\r\n\t}\r\n\r\n\t// activate lexicon\r\n\r\n\tvar lexicon = new Lexicon();\r\n\tvar lx = lexicon; \r\n\r\n////////////////////////////////////\r\n// \t\tLEXICON END\r\n////////////////////////////////////\t\r\n\r\n  \r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// Do not look down here. If you try to understand my code, you will waste a lot of time.\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\napp.bringToFront();\r\ncTID = function(s) { return cTID[s] || (cTID[s] = charIDToTypeID(s)); };\r\nsTID = function(s) { return sTID[s] || (sTID[s] = stringIDToTypeID(s)); }; \r\n\r\nvar startDisplayDialogs = app.displayDialogs;\r\napp.displayDialogs = DialogModes.NO;\r\n\r\nvar docMaster = app.activeDocument;\r\n\r\n///////////////////\r\n// MAIN CODE\r\n///////////////////\r\napplyPollyFills();\r\n\r\nif(docMaster.length != 0) {  \r\n\tif(app.version.split(\".\")[0] >= 17){\r\n\t\t//main(); // uncoment for debug\t\r\n\t\tapp.activeDocument.suspendHistory(\"Unsmart\", \"main()\"); //keep history clear\r\n\t}\r\n\telse{\r\n\t\talert(\"Sorry. Only Photoshop 2015.5 and higher is supported.\");\r\n\t}\r\n}\r\n\r\nfunction main(){\t\r\n\tvar artboardsSettings = getArtboardSettings();\r\n\tpreventFromArtboardMessUp();\r\n\t\r\n\t//global variables\r\n\tvar layerList = lx.getSelectedLayersId ();\r\n\tlayerList = filterValidLayers(layerList);\r\n\tvar soGroupList = new Array();\r\n\tvar clippedLayers = new Array();\r\n\tvar openWindowID;\r\n\tvar documentOpened;\r\n\tvar exceededWarningShown = false;\r\n\tvar tempFilesToRemove = new Array();\r\n\tvar resolutionRatio = lx.getDocumentDescriptor(null, null, \"resolution\").getValue(\"resolution\") / 72.00;\r\n\tvar effectsScaled = false;\r\n\t\r\n\t// we don't want transform path, bug layer\r\n\tif(isPathSelected()){ //performance condition\r\n\t\tdeselectPath ();\r\n\t}\r\n\t\r\n\t// we don't want open and close window for each SO instance\r\n\t// we also don't want change layer comp for each SO instance if instance has same layer comp\r\n\t// so we sort smart object instances like this: soInst > comps > soLayerIDs > descriptor\r\n\tvar soInst = getSOInstances(layerList);\r\n\t\r\n\tfor (var soKey in soInst){\r\n\t\tvar comps = soInst[soKey];\r\n\t\topenWindowID = null;\r\n\t\t\r\n\t\tfor (var compKey in comps){\r\n\t\t\tvar layers = comps[compKey];\r\n\t\t\t\r\n\t\t\tfor (var layerKey in layers){\r\n\t\t\t\tvar desc = layers[layerKey];\r\n\t\t\t\tlx.selectLayers(layerKey,\"id\");\r\n\t\t\t\tvar layerStack = new LayerContextStack();\r\n\t\t\t\t\r\n\t\t\t\t// ingore SO inside locked group\r\n\t\t\t\tif(layerStack.hasParentProtectAll(layerStack.getLast())) {\r\n\t\t\t\t\tvar indexInArrayToRemove = layerList.findValueIndex(layerKey);\r\n\t\t\t\t\tlayerList.splice(indexInArrayToRemove, 1);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// this should include blending mode, fill, opacity\r\n\t\t\t\tif(canCopyPasteStyle(desc)){\r\n\t\t\t\t\tcopyLayerStyle ();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// we want move clipped layer from SO to new group\r\n\t\t\t\tclippedLayers = getClippedLayersList(desc);\r\n\t\t\t\t\r\n\t\t\t\t// window method is used if smart object has layer comps\r\n\t\t\t\tif(comps.windowMethod){\r\n\t\t\t\t\textractWithWindow(desc, soKey);\r\n\t\t\t\t}else{\r\n\t\t\t\t\textractViewless(desc, soKey);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(documentOpened){\r\n\t\t\t// we can't close document by ID... so we first select this document\r\n\t\t\tselectDocument(openWindowID);\r\n\t\t\tcloseWindow(openWindowID);\r\n\t\t}\r\n\t\r\n\t\topenWindowID = undefined;\r\n\t\tdocumentOpened = undefined;\r\n\t\t\r\n\t}\r\n\r\n\t// clean up unsmarted objects\r\n\tlx.forEachLayerWithSelection(layerList, \"id\", function(soId){\r\n\t\tif(settings.deleteOriginalObject){\r\n\t\t\tlx.deleteLayers(soId, \"id\");\r\n\t\t}else{\r\n\t\t\thideLayer();\r\n\t\t\tsetColorTag(null,null,\"Gry \");\r\n\t\t}\r\n\t});\r\n\t\r\n\t// restore layer selection but with unsmarted objects\r\n\tif(soGroupList.length > 0){\r\n\t\tlx.selectLayers(soGroupList, \"id\");\r\n\t\tif(settings.dontGroupSOContent){\r\n\t\t\tungroupSelectedLayer();\r\n\t\t}\r\n\t}\r\n\t\r\n\t// clean up .psb files in temp folder\r\n\tlx.forEach(tempFilesToRemove, null, function (file){\r\n\t\tif(file.exists){\r\n\t\t\tfile.remove();\r\n\t\t}\r\n\t});\r\n\r\n\trevertArtboardsSettings();\r\n\t\r\n\t/////////////\r\n\t// FUNCTIONS\r\n\t/////////////\r\n\r\n\tfunction extractViewless(desc, soKey){\r\n\t\tvar smartObject = desc.getObjectValue(stringIDToTypeID('smartObject'));\r\n\t\t\r\n\t\tvar hasPath = smartObject.hasKey(stringIDToTypeID('link'));\r\n\t\tvar isKnownPath = soInst[soKey].file;\r\n\t\tvar isCloudFile = hasPath && smartObject.getType(stringIDToTypeID('link')) == \"DescValueType.OBJECTTYPE\";\r\n\t\tvar file;\r\n\t\t\r\n\t\tif((!hasPath && !isKnownPath) || (isCloudFile && !isKnownPath)){\r\n\t\t\tif(isCloudFile){\r\n\t\t\t\tfile = new File(getCloudFilePath(desc));\r\n\t\t\t\t//executeAction( stringIDToTypeID( \"placedLayerConvertToEmbedded\" ), undefined, DialogModes.NO );\r\n\t\t\t}else{\r\n\t\t\t\tvar extension = smartObject.getString(stringIDToTypeID('fileReference')).split(\".\").pop();\r\n\t\t\t\tfile = convertToLinkedSo(soKey+\".\"+extension);\r\n\t\t\t\ttempFilesToRemove.push(file);\r\n\t\t\t}\r\n\t\t}else if(isKnownPath){\r\n\t\t\tfile = soInst[soKey].file; \r\n\t\t}else{\r\n\t\t\tfile = new File(smartObject.getPath(stringIDToTypeID('link')));\r\n\t\t}\r\n\t\r\n\t\tsoInst[soKey].file = file;\r\n\t\t\r\n\t\t/*clean these variables*/\r\n\t\tvar soMore = desc.getObjectValue(stringIDToTypeID('smartObjectMore'));\r\n\t\tvar soInnerWidth = soMore.getObjectValue(stringIDToTypeID('size')).getDouble(stringIDToTypeID('width'));\r\n\t\tvar soInnerHeight = soMore.getObjectValue(stringIDToTypeID('size')).getDouble(stringIDToTypeID('height'));\r\n\t\tvar widthDeviation = soInnerWidth % 2;\r\n\t\tvar heightDeviation = soInnerHeight % 2;\r\n\t\t\r\n\t\tselectPixels(0 + widthDeviation, 0 + heightDeviation, soInnerWidth, soInnerHeight);\r\n\t\tplaceUnwrap(file);\r\n\t\tdeselectPixels();\r\n\t\t\r\n\t\tunlockAllLocks(); //all SO layers must be selected. Native function for folder ignores groups in CC 2017 and lower\r\n\t\t\r\n\t\textractShared(desc, true);\r\n\t}\r\n\r\n\r\n\tfunction extractWithWindow(desc, soKey){\r\n\t\tvar soCompId = desc.getObjectValue(stringIDToTypeID('smartObjectMore')).getInteger(stringIDToTypeID('comp'));\r\n\t\t\r\n\t\t\r\n\t\t// first check if document was already opened with script, so we can skip some things\r\n\t\tif(documentOpened && openWindowID){\r\n\t\t\tselectDocument(openWindowID);\r\n\t\t}else{        \r\n\t\t\tvar documentsBefore = app.documents.length;\r\n\t\t\texecuteAction( stringIDToTypeID( \"placedLayerEditContents\" ), new ActionDescriptor(), DialogModes.NO );\r\n\t\t\t// we need to be sure that correct document is opened so we will wait\r\n\t\t\tWaitForRedraw ();\r\n\t\t\t\r\n\t\t\tselectAllLayers ();\r\n\t\t\t\r\n\t\t\t// we want layers locking untouched after script execution\r\n\t\t\tif(!hasHistorySnapshot(\"UnsmartSnapshot\")){\r\n \t\t\t\tmakeHistorySnapshot (\"UnsmartSnapshot\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar documentsAfter = app.documents.length;\r\n\t\t\t// here we know if script opened window, so we will not close windows opened before script execution\r\n\t\t\tdocumentOpened = documentsBefore === (documentsAfter - 1);\r\n\t\t\t\r\n\t\t\tunlockEverything();\r\n\t\t}\r\n\t\r\n\t\tvar compActive = getActiveComp(getLayerCompsData()); // this variable could be more global\r\n\t\tvar docSO = app.activeDocument;\r\n\t\topenWindowID = docSO.id;\r\n\t\t\r\n\t\tif(soCompId !== compActive){\r\n\t\t\tif(soCompId === -1){\r\n\t\t\t\tsoCompId = compActive;\r\n\t\t\t}\r\n\t\t\tchangeComp(soCompId); \r\n\t\t}\r\n\t\t\r\n\t\tif(settings.clearSmartObjectContent){\r\n\t\t\ttry{\r\n\t\t\t\tdeleteHiddenLayers();\r\n\t\t\t}catch(e){;}//error if nothing to delete\r\n\t\t}\r\n\t\t\r\n\t\t// check if we don't exceed nesting limit\r\n\t\tvar documentDeepestLevel = lx.getDocumentDeepestLevel();\r\n\t\tvar soCurrentLevel = layerStack.stack.length+1;\r\n\t\tvar isNestingLevelExceeded = (documentDeepestLevel + soCurrentLevel) > 11;\r\n\t\tif(isNestingLevelExceeded){\r\n\t\t\tif(!exceededWarningShown){\r\n\t\t\t\talert(\"Some layer(s) will be skipped. Limit is 10 nested groups/artboards + 1 layer.\\nYour smart object is in level: \"+soCurrentLevel + \"\\nDeepest level in smart object is: \"+documentDeepestLevel+\"\\nYou need remove: \"+(documentDeepestLevel + soCurrentLevel - 11)+\" level(s)\");\r\n\t\t\t}\r\n\t\t\texceededWarningShown = true;\r\n\t\t\t//don't delete layer if layer is not unsmarted\r\n\t\t\tvar indexInArrayToRemove = layerList.findValueIndex(layerKey);\r\n\t\t\tlayerList.splice(indexInArrayToRemove, 1);\r\n\t\t\tif(hasHistorySnapshot(\"UnsmartSnapshot\")){\r\n\t\t\t\trestoreFromSnapshot (\"UnsmartSnapshot\");\r\n\t\t\t}\r\n\t\t\tselectDocument (docMaster.id);\r\n\t\t}else{\r\n\t\t\tduplicateToDocument (docMaster.id);\r\n\t\t\tif(hasHistorySnapshot(\"UnsmartSnapshot\")){ //this could be executed only if layer comp has changed\r\n\t\t\t\trestoreFromSnapshot (\"UnsmartSnapshot\");\r\n\t\t\t}\r\n\t\t\tselectDocument (docMaster.id);\r\n\t\t\textractShared(desc, false);\r\n\t\t}\r\n\t} \r\n\r\n\tfunction extractShared(desc, isViewLess){\r\n\t\tvar soMore = desc.getObjectValue(stringIDToTypeID('smartObjectMore'));\r\n\t\tvar soInnerWidth = soMore.getObjectValue(stringIDToTypeID('size')).getDouble(stringIDToTypeID('width'));\r\n\t\tvar soInnerHeight = soMore.getObjectValue(stringIDToTypeID('size')).getDouble(stringIDToTypeID('height'));\r\n\t\tvar soNonAffineTransform = soMore.getList(stringIDToTypeID('nonAffineTransform'));\r\n\t\tvar soId = desc.getInteger(stringIDToTypeID('layerID'));\r\n\t\tvar soIndex = lx.convertLayerIdToIndex(soId);\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tlx.createGroup ();\r\n\t\tvar groupForSo = docMaster.activeLayer;\r\n\t\tvar groupForSoLayerContext = new LayerContext();\r\n\t\tsoGroupList.push(groupForSo.id);\r\n\t\t\r\n\t\t// Fix Big SO which are bigger than canvas\r\n\t\tif(isViewLess){\r\n\t\t\t// so content doesn't start at 0,0 of selection if is bigger than document and viewless\r\n\t\t\t// first must be created group and this cause that selected is only group and this eliminate risk that we will transform path instead layer\r\n\t\t\tvar docMasterWidth = lx.getDocumentDescriptor(null, null, \"width\").getValue(\"width\") * resolutionRatio;\r\n\t\t\tvar docMasterHeight = lx.getDocumentDescriptor(null, null, \"height\").getValue(\"height\") * resolutionRatio;\r\n\t\t\t\r\n\t\t\tif(docMasterWidth < soInnerWidth || docMasterHeight < soInnerHeight){\r\n\t\t\t\tvar x = (docMasterWidth < soInnerWidth) ? (soInnerWidth-docMasterWidth)/2 : 0;\r\n\t\t\t\tvar y = (docMasterHeight < soInnerHeight) ? (soInnerHeight-docMasterHeight)/2 : 0;\r\n\t\t\t\ttranslate(x,y);\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\t// Set layer order for viewless if needed\r\n\t\t// if group end has +1 than desired index then it already has desired position so it would throw error\r\n\t\tif(/*isViewLess && */soIndex !== (groupForSo.itemIndex - groupForSoLayerContext.deepLengthAbsolute - 1)){\r\n\t\t\tmoveLayerOrder(soIndex, groupForSo.id);\r\n\t\t}\r\n\t\t\r\n\t\t// viewLess method needs different method for removing hidden layers\r\n\t\tif(isViewLess && settings.clearSmartObjectContent){\r\n\t\t\tclearSOContentInParentDoc(groupForSo.id);\r\n\t\t}\r\n\t\t\r\n\t\t// if smart object content has layers outside canvas, we can hide them with mask on unsmarted group\r\n\t\tif(settings.hidePixelsOutsideSoCanvas){\r\n\t\t\tvar left = 0, top = 0;\r\n\t\t\t\r\n\t\t\tvar soBounds = {\r\n\t\t\t\ttop:top,\r\n\t\t\t\tright:left + soInnerWidth,\r\n\t\t\t\tbottom:top + soInnerHeight,\r\n\t\t\t\tleft:left\r\n\t\t\t};\r\n\t\t\r\n\t\t\tvar shouldHaveMask = isSOContentOutsideCanvas(groupForSo.id, soBounds);\r\n\t\t\tif(shouldHaveMask){\r\n\t\t\t\tselectPixels(left, top, soInnerWidth, soInnerHeight);\r\n\t\t\t\tcreateMask ();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// here we move layer to desired position and apply deformation\r\n\t\t\r\n\t\tvar soConerPoints = cornersActionListToObject(soNonAffineTransform);\r\n\t\tvar boolIsSmartObjectDeformed = isSmartObjectDeformed(soConerPoints, soInnerWidth, soInnerHeight);\r\n\t\t\r\n\t\tif(settings.resizeContent && boolIsSmartObjectDeformed){\r\n\t\t\tdoRectangleToQuadrilateral (soInnerWidth, soInnerHeight, soConerPoints);\r\n\t\t\tif(settings.scaleAllLayerEffects){\r\n\t\t\t\tvar trScaleRatio = calculateScaleRatio(soInnerWidth, soInnerHeight, soNonAffineTransform);\r\n\t\t\t\t// only if ratio is not 100,00\r\n\t\t\t\tif((Math.round(trScaleRatio*100)/100) !== 100){\r\n\t\t\t\t\tgroupForSoLayerContext.reinit(); // reinitialize because we removed hidden layer and moved group to the bottom\r\n\t\t\t\t\tvar groupContentIndexes = groupForSoLayerContext.getContentPointers(null,true);\r\n\t\t\t\t\tscaleSelectedLayersStyle(trScaleRatio,groupContentIndexes);\r\n\t\t\t\t\teffectsScaled = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\ttranslate( soConerPoints.leftTop.x, soConerPoints.leftTop.y );\r\n\t\t}\r\n\t\t\r\n\t\tif(settings.preserveSmartObjectProperties && !settings.dontGroupSOContent){\r\n\t\t\tvar hasMask = desc.getBoolean(stringIDToTypeID('hasUserMask'));\r\n\t\t\tvar hasVectorMask = desc.getBoolean(stringIDToTypeID('hasVectorMask'));\r\n\t\t\tvar isVisible = desc.getBoolean(stringIDToTypeID('visible'));\r\n\t\t\tvar hasLinkedLayers = desc.hasKey(stringIDToTypeID('linkedLayerIDs'));\r\n\t\t\tvar colorTag = desc.getEnumerationValue(stringIDToTypeID('color'));\r\n\t\t\tvar hasCustomColorTag = typeIDToStringID(colorTag) !== \"none\";\r\n\t\t\t\r\n\t\t\t// performance condition\r\n\t\t\tif(effectsScaled){\r\n\t\t\t\tlx.selectLayers (groupForSo.id, \"id\");\r\n\t\t\t}\r\n\t\t\tcollapseFolder();\r\n\t\t\trenameLayer(groupForSo.id, desc.getString(stringIDToTypeID('name')));\r\n\t\t\t\r\n\t\t\tif(hasCustomColorTag){\r\n\t\t\t\tsetColorTag(groupForSo.id, \"id\",colorTag);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(canCopyPasteStyle (desc)){\r\n\t\t\t\tpasteLayerStyle ();\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif(!isVisible){ //performance condition\r\n\t\t\t\tgroupForSo.visible = false;\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif(!settings.hidePixelsOutsideSoCanvas && hasMask){\r\n\t\t\t\tduplicateMask(soId,groupForSo.id);\r\n\t\t\t\tvar userMaskEnabled = desc.getBoolean(stringIDToTypeID('userMaskEnabled'));\r\n\t\t\t\tif(!userMaskEnabled){\r\n\t\t\t\t\tdisableMask (groupForSo.id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif(hasVectorMask){\r\n\t\t\t\tduplicateVectorMask(soId,groupForSo.id);\r\n\t\t\t\tlx.selectLayers (soId, \"id\");\r\n\t\t\t\tvar vectorMaskEnabled = isVectorMaskEnabled ();\r\n\t\t\t\t// if has vector mask but mask is disabled\r\n\t\t\t\tif(!vectorMaskEnabled ){\r\n\t\t\t\t\tdisableVectorMask (groupForSo.id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\tmoveAllClippedLayers(groupForSo);\r\n\t\t\t\r\n\t\t\tif(hasLinkedLayers){\r\n\t\t\t\tlinkLinkedLayers(desc,groupForSo);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\t///////////////////////////////\r\n\t// FUNCTIONS CALLED FROM MAIN\r\n\t///////////////////////////////\r\n\r\n\tfunction linkLinkedLayers(desc,groupForSo){\r\n\t\tlx.selectLayers(desc.getInteger(stringIDToTypeID('layerID')), \"id\");\r\n\t\tvar isLinkEnabled = isLinkOnLayerEnabled();\r\n\t\t\r\n\t\tvar links = desc.getList(stringIDToTypeID('linkedLayerIDs'));\r\n\t\tvar linkID = links.getInteger(0);\r\n\t\tvar groupID = groupForSo.id;\r\n\t\tlx.selectLayers([linkID,groupID], \"id\"); \r\n\t\t\r\n\t\tvar desc2111 = new LxActionDescriptor();\r\n\t\tdesc2111.lxRefLayer();\r\n\t\texecuteAction( \"linkSelectedLayers\", desc2111 );\r\n\t\t\r\n\t\tif(!isLinkEnabled){\r\n\t\t   var iddisableLayerLink = stringIDToTypeID( \"disableLayerLink\" );\r\n\t\t\t\tvar desc2202 = new LxActionDescriptor();\r\n\t\t\t\tdesc2202.lxRefLayer(groupID, \"id\");\r\n\t\t\t\tvar idT = charIDToTypeID( \"T   \" );\r\n\t\t\t\t\tvar desc2203 = new ActionDescriptor();\r\n\t\t\t\t\tvar idlnkE = charIDToTypeID( \"lnkE\" );\r\n\t\t\t\t\tdesc2203.putBoolean( idlnkE, false );\r\n\t\t\t\tvar idLyr = charIDToTypeID( \"Lyr \" );\r\n\t\t\t\tdesc2202.putObject( idT, idLyr, desc2203 );\r\n\t\t\texecuteAction( iddisableLayerLink, desc2202, DialogModes.NO );\r\n\t\t}\r\n\t}\r\n\r\n\t//\r\n\t// otevře SO\r\n\tfunction openSO(){\r\n\t\tvar idplacedLayerEditContents = sTID( \"placedLayerEditContents\" );\r\n\t\tvar desc187 = new ActionDescriptor();\r\n\t\texecuteAction( idplacedLayerEditContents, desc187, DialogModes.NO );\r\n\t}\r\n\t\r\n\tfunction placeUnwrap(file){\r\n\t\ttry{\r\n\t\t\tvar desc118 = new ActionDescriptor();\r\n\t\t\tdesc118.putPath( charIDToTypeID( \"null\" ) , file );       \r\n\t\t\tdesc118.putBoolean(stringIDToTypeID(\"unwrapLayers\"), true);\r\n\t\t\texecuteAction( charIDToTypeID( \"Plc \" ), desc118, DialogModes.NO );\r\n\t\t}catch(e){ \r\n\t\t\tundo(); //undo pouze při speciální chybovém kodu TODO\r\n\t\t\tthrow \"Unable to UnSmart object. Check your group nesting levels. Limit is 10. Also check your document color mode.\"\r\n\t\t}\r\n\t}\r\n\r\n\tfunction isLinkOnLayerEnabled(){\r\n\t\ttry{\r\n\t\t\tvar idslct = charIDToTypeID( \"slct\" );\r\n\t\t\t\tvar desc135 = new ActionDescriptor();\r\n\t\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\t\tvar ref63 = new ActionReference();\r\n\t\t\t\t\tvar idMn = charIDToTypeID( \"Mn  \" );\r\n\t\t\t\t\tvar idMnIt = charIDToTypeID( \"MnIt\" );\r\n\t\t\t\t\tvar idplacedLayerEditContents = stringIDToTypeID( \"selectLinkedLayers\" );\r\n\t\t\t\t\tref63.putEnumerated( idMn, idMnIt, idplacedLayerEditContents );\r\n\t\t\t\tdesc135.putReference( idnull, ref63 );\r\n\t\t\texecuteAction( idslct, desc135, DialogModes.NO );\r\n\t\t\treturn true;\r\n\t\t}catch(e){\r\n\t\t\tif(e.number == -25920){ // menu item not available\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\t//\r\n\t// changes comp inside smart object\r\n\tfunction changeComp(id){\r\n\t\tif(id===0){\r\n\t\t\ttry{\r\n\t\t\tvar idresetFromComp = stringIDToTypeID( \"resetFromComp\" );\r\n\t\t\tvar desc2707 = new ActionDescriptor();\r\n\t\t\texecuteAction( idresetFromComp, desc2707, DialogModes.NO );\r\n\t\t\t}catch(e){}//you cant reset comp if last document state is equal to current comp\r\n\t\t}else{\r\n\t\t\tvar idapplyComp = sTID( \"applyComp\" );\r\n\t\t\t\tvar desc189 = new ActionDescriptor();\r\n\t\t\t\tvar idnull = cTID( \"null\" );\r\n\t\t\t\t\tvar ref97 = new ActionReference();\r\n\t\t\t\t\tvar idcompsClass = sTID( \"compsClass\" );\r\n\t\t\t\t\tref97.putIdentifier( idcompsClass, id );\r\n\t\t\t\tdesc189.putReference( idnull, ref97 );\r\n\t\t\texecuteAction( idapplyComp, desc189, DialogModes.NO );\r\n\t\t}\r\n\t}\r\n\r\n\tfunction isInLockedFolder(layer){\r\n\t\t\r\n\t\twhile(layer.parent.typename != \"Document\"){\r\n\t\t\tlayer = layer.parent;\r\n\t\t\tif(layer.allLocked){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction hasHistorySnapshot(snapshotName){\r\n\t\ttry{\r\n\t\t\tvar ref = new ActionReference();\r\n\t\t\tvar idSnpS = charIDToTypeID( \"SnpS\" );\r\n\t\t\tref.putName( idSnpS, snapshotName );\r\n\t\t\texecuteActionGet( ref );\t\t\r\n\t\t\treturn true;\r\n\t\t}catch(e){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t// IDs\r\n\tfunction getClippedLayersList(soDesc){\r\n\t\tvar result = new Array();\r\n\t\t// we need fresh soIndex so we take ID and look for new updated index\r\n\t\tvar soIndex = lx.convertLayerIdToIndex(soDesc.getInteger(stringIDToTypeID('layerID')));\r\n\t\tvar limitLayers = soDesc.getInteger(stringIDToTypeID('count'));\r\n\t\tvar bgCounter = 0;\r\n\t\ttry {\r\n\t\t\tvar dummy = docMaster.backgroundLayer;\r\n\t\t\tbgCounter=1;\r\n\t\t}catch(e){} //do nothing\r\n\t\t\r\n\t\tfor(soIndex; soIndex <= limitLayers /*break inside*/; soIndex++){\r\n\t\t\tvar testedLayerDesc = lx.getLayerDescriptor (soIndex-bgCounter);\r\n\t\t\tvar isClipped = testedLayerDesc.getBoolean(stringIDToTypeID('group'));\r\n\t\t\tvar fromID = testedLayerDesc.getInteger(stringIDToTypeID('layerID'));\r\n\t\t\tif(!isClipped){break}\r\n\t\t\tresult.push(fromID)\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction moveAllClippedLayers(layerSet){\r\n\t\tvar layerSetIndex = getLayerDescriptorByID(layerSet.id).getInteger(stringIDToTypeID('itemIndex'));\r\n\t\t\r\n\t\tfor(var i = clippedLayers.length-1, j=0; i >= 0; i--){\r\n\t\t\tvar fromID = clippedLayers[i];\r\n\t\t\tvar idmove = charIDToTypeID( \"move\" );\r\n\t\t\t\tvar desc102 = new ActionDescriptor();\r\n\t\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\t\tvar ref60 = new ActionReference();\r\n\t\t\t\t\tvar idLyr = charIDToTypeID( \"Lyr \" );\r\n\t\t\t\t\tref60.putIdentifier( idLyr, fromID );\r\n\t\t\t\t\t\r\n\t\t\t\tdesc102.putReference( idnull, ref60 );\r\n\t\t\t\tvar idT = charIDToTypeID( \"T   \" );\r\n\t\t\t\t\tvar ref61 = new ActionReference();\r\n\t\t\t\t\tref61.putIndex( idLyr, layerSetIndex ); //global variable\r\n\t\t\t\tdesc102.putReference( idT, ref61 );\r\n\t\t\t\tvar idAdjs = charIDToTypeID( \"Adjs\" );\r\n\t\t\t\tdesc102.putBoolean( idAdjs, false );\r\n\t\t\t\tvar idVrsn = charIDToTypeID( \"Vrsn\" );\r\n\t\t\t\tdesc102.putInteger( idVrsn, 5 );\r\n\t\t\t\t\r\n\t\t\texecuteAction( idmove, desc102, DialogModes.NO );\r\n\t\t\t\r\n\t\t\t//because layer paste between layer and clipped layer is clipped by default\r\n\t\t\tif(j===0){\r\n\t\t\t\tvar idGrpL = charIDToTypeID( \"GrpL\" );\r\n\t\t\t\t\tvar desc104 = new ActionDescriptor();\r\n\t\t\t\t\tdesc104.putReference( idnull, ref60 );\r\n\t\t\t\texecuteAction( idGrpL, desc104, DialogModes.NO );\r\n\t\t\t}\r\n\t\t\tj++;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction unlockEverything(){\r\n\t\tif(lx.existsBackgroundLayer()){\r\n\t\t\tunlockBackground();\r\n\t\t}\r\n\t\tunlockAllLocks();\r\n\r\n\t\tfunction unlockBackground() {\r\n\t\tvar idsetd = cTID( \"setd\" );\r\n\t\t\tvar desc1675 = new ActionDescriptor();\r\n\t\t\t\tvar ref1104 = new ActionReference();\r\n\t\t\t\tref1104.putProperty(  cTID('Lyr '),  cTID('Bckg'));\r\n\t\t\tdesc1675.putReference( cTID('null'), ref1104 );\r\n\t\t\t\tvar desc1676 = new ActionDescriptor();\r\n\t\t\t\tdesc1676.putUnitDouble(  cTID('Opct'),  cTID('#Prc'), 100.000000 );\r\n\t\t\t\tdesc1676.putEnumerated(  cTID('Md  '),  cTID('BlnM'),  cTID('Nrml'));\r\n\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\tdesc1675.putObject( cTID('T   '), cTID('Lyr '), desc1676 );\r\n\t\t\tdesc1675.putInteger( cTID('LyrI'), 7 );\r\n\t\texecuteAction( idsetd, desc1675, DialogModes.NO );\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getLayerDescriptorByID(id){\r\n\t\tvar ref = new ActionReference();  \r\n\t\tref.putIdentifier( cTID( \"Lyr \" ), id );    \r\n\t\tvar desc = executeActionGet(ref); \r\n\t\treturn desc;\r\n\t}\r\n\r\n\tfunction getSOInstances(listID){\r\n\t\tvar so = {};\r\n\r\n\t\tfor(var i = 0, len = listID.length; i < len; i++){\r\n\t\t\tvar desc = getLayerDescriptorByID(listID[i]);\r\n\t\t\tvar soID = desc.getObjectValue(stringIDToTypeID('smartObjectMore')).getString(stringIDToTypeID('ID'));\r\n\t\t\tvar compID = desc.getObjectValue(stringIDToTypeID('smartObjectMore')).getInteger(stringIDToTypeID('comp'));\r\n\t\t\tvar hasComps = desc.getObjectValue(stringIDToTypeID('smartObject')).getObjectValue(stringIDToTypeID('compsList')).hasKey(stringIDToTypeID('compList'))\r\n\t\t\t\r\n\t\t\tvar layerID = listID[i].toString();\r\n\t\t\tso[soID] ? null : so[soID] = new Object();\r\n\t\t\tso[soID].windowMethod = hasComps;\r\n\t\t\tso[soID][compID] ? null : so[soID][compID] = new Object();\r\n\t\t\tso[soID][compID][layerID] = desc;\r\n\t\t}\r\n\r\n\t\treturn so;\r\n\t}\r\n\r\n\tfunction unlockAllLocks() {\r\n\t\tvar idsetd = cTID( \"setd\" );\r\n\t\tvar desc50 = new ActionDescriptor();\r\n\t\tvar idnull = cTID( \"null\" );\r\n\t\t\tvar ref28 = new ActionReference();\r\n\t\t\tref28.putEnumerated( cTID('Lyr '), cTID('Ordn'), cTID('Trgt') );\r\n\t\tdesc50.putReference( idnull, ref28 );\r\n\t\tvar idT = cTID( \"T   \" );\r\n\t\t\tvar desc51 = new ActionDescriptor();\r\n\t\t\tvar idlayerLocking = sTID( \"layerLocking\" );\r\n\t\t\t\tvar desc52 = new ActionDescriptor();\r\n\t\t\t\tvar idprotectNone = sTID( \"protectNone\" );\r\n\t\t\t\tdesc52.putBoolean( idprotectNone, true );\r\n\t\t\tvar idlayerLocking = sTID( \"layerLocking\" );\r\n\t\t\tdesc51.putObject( idlayerLocking, idlayerLocking, desc52 );\r\n\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\tdesc50.putObject( idT, idLyr, desc51 );\r\n\texecuteAction( idsetd, desc50, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction deleteHiddenLayers(){\r\n\t\tvar idDlt = cTID( \"Dlt \" );\r\n\t\t\tvar desc213 = new ActionDescriptor();\r\n\t\t\tvar idnull = cTID( \"null\" );\r\n\t\t\t\tvar ref110 = new ActionReference();\r\n\t\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\t\tvar idOrdn = cTID( \"Ordn\" );\r\n\t\t\t\tvar idhidden = sTID( \"hidden\" );\r\n\t\t\t\tref110.putEnumerated( idLyr, idOrdn, idhidden );\r\n\t\t\tdesc213.putReference( idnull, ref110 );\r\n\t\texecuteAction( idDlt, desc213, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction selectAllLayers() {\r\n\t\tvar ref = new ActionReference();\r\n\t\tref.putEnumerated(cTID('Lyr '), cTID('Ordn'), cTID('Trgt'));\r\n\t\tvar desc = new ActionDescriptor();\r\n\t\tdesc.putReference(cTID('null'), ref);\r\n\texecuteAction(sTID('selectAllLayers'), desc, DialogModes.NO);\r\n\t}\r\n\t\r\n\tfunction convertToLinkedSo(filename){\r\n\t\tvar file = new File(Folder.temp+\"/\"+filename);\r\n\t\t\r\n\t\tvar idplacedLayerConvertToLinked = stringIDToTypeID( \"placedLayerConvertToLinked\" );\r\n\t\t\tvar desc78 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref46 = new ActionReference();\r\n\t\t\t\tvar idLyr = charIDToTypeID( \"Lyr \" );\r\n\t\t\t\tvar idOrdn = charIDToTypeID( \"Ordn\" );\r\n\t\t\t\tvar idTrgt = charIDToTypeID( \"Trgt\" );\r\n\t\t\t\tref46.putEnumerated( idLyr, idOrdn, idTrgt );\r\n\t\t\tdesc78.putReference( idnull, ref46 );\r\n\t\t\tvar idUsng = charIDToTypeID( \"Usng\" );\r\n\t\t\tdesc78.putPath( idUsng, file );\r\n\t\texecuteAction( idplacedLayerConvertToLinked, desc78, DialogModes.NO );\r\n\t\t\r\n\t\treturn file;\r\n\t}\r\n\r\n\t\r\n\tfunction duplicateToDocument(documentID){\r\n\t\ttry{\r\n\t\t\tvar idDplc = cTID( \"Dplc\" );\r\n\t\t\t\tvar desc231 = new ActionDescriptor();\r\n\t\t\t\tvar idnull = cTID( \"null\" );\r\n\t\t\t\t\tvar ref121 = new ActionReference();\r\n\t\t\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\t\t\tvar idOrdn = cTID( \"Ordn\" );\r\n\t\t\t\t\tvar idTrgt = cTID( \"Trgt\" );\r\n\t\t\t\t\tref121.putEnumerated( idLyr, idOrdn, idTrgt );\r\n\t\t\t\tdesc231.putReference( idnull, ref121 );\r\n\t\t\t\tvar idT = cTID( \"T   \" );\r\n\t\t\t\t\tvar ref122 = new ActionReference();\r\n\t\t\t\t\tvar idDcmn = cTID( \"Dcmn\" );\r\n\t\t\t\t\tref122.putIdentifier( idDcmn, documentID );\r\n\t\t\t\tdesc231.putReference( idT, ref122 );\r\n\t\t\t\tvar idIdnt = cTID( \"Idnt\" );\r\n\t\t\texecuteAction( idDplc, desc231, DialogModes.NO );\r\n\t\t}\r\n\t\tcatch(e){\r\n\t\t\t\talert(\"Can't duplicate content\")\r\n\t\t}\r\n\t}\r\n\r\n\tfunction isSOContentOutsideCanvas(layerID, soBounds){\r\n\t\t\r\n\t\tvar index = lx.convertLayerIdToIndex(layerID);\r\n\t\tvar groupID = stringIDToTypeID('group');\r\n\t\tvar sectionID = stringIDToTypeID('layerSection');\r\n\t\tvar endID = stringIDToTypeID('layerSectionEnd');\r\n\t\tvar startID = stringIDToTypeID('layerSectionStart');\r\n\t\tvar boundsID = stringIDToTypeID('bounds');\r\n\t\tvar leftID = stringIDToTypeID('left');\r\n\t\tvar rightID = stringIDToTypeID('right');\r\n\t\tvar topID = stringIDToTypeID('top');\r\n\t\tvar bottomID = stringIDToTypeID('bottom');\r\n\r\n\t\tfor(var i = index-1, level=0; level >= 0 ; i--){\r\n\t\t\tvar desc = lx.getLayerDescriptor(i);\r\n\t\t\tvar clipped = desc.getBoolean(groupID);\r\n\t\t\t\r\n\t\t\tif(clipped){continue;}\r\n\t\t\t\r\n\t\t\tvar layerSection = desc.getEnumerationValue(sectionID);\r\n\t\t\tif(layerSection === startID){\r\n\t\t\t\tlevel++\r\n\t\t\t}\r\n\t\t\telse if(layerSection === endID){\r\n\t\t\t\tlevel--\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tvar bounds = desc.getObjectValue(boundsID);\r\n\t\t\t   \r\n\t\t\t\tvar isOutside = (\r\n\t\t\t\t\tsoBounds.left > bounds.getUnitDoubleValue(leftID) ||\r\n\t\t\t\t\tsoBounds.top > bounds.getUnitDoubleValue(topID) ||\r\n\t\t\t\t\tsoBounds.right < bounds.getUnitDoubleValue(rightID) ||\r\n\t\t\t\t\tsoBounds.bottom < bounds.getUnitDoubleValue(bottomID)\r\n\t\t\t\t);\r\n\t\t\t\tif(isOutside){\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction clearSOContentInParentDoc(layerID){\r\n\t\t\r\n\t\tvar index = lx.convertLayerIdToIndex(layerID);\r\n\t\tvar deleteList = new Array();\r\n\t\tvar sectionID = stringIDToTypeID('layerSection');\r\n\t\tvar endID = stringIDToTypeID('layerSectionEnd');\r\n\t\tvar startID = stringIDToTypeID('layerSectionStart');\r\n\t\tvar visibleID = stringIDToTypeID('visible');\r\n\r\n\t\tfor(var i = index-1, level=0; level >= 0 ; i--){\r\n\t\t\tvar desc = lx.getLayerDescriptor(i);\r\n\t\t\tvar visible = desc.getBoolean(visibleID);\r\n\t\t\t\r\n\t\t\tif(!visible){\r\n\t\t\t\tdeleteList.push(lx.convertLayerIndexToId(i));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar layerSection = desc.getEnumerationValue(sectionID);\r\n\t\t\tif(layerSection===startID){\r\n\t\t\t\tlevel++\r\n\t\t\t}\r\n\t\t\telse if(layerSection===endID){\r\n\t\t\t\tlevel--\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfor(var i = deleteList.length-1; i >= 0; i--){\r\n\t\t\tlx.deleteLayers(deleteList[i],\"id\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction isSmartObjectDeformed(cornerPoints, innerWidth, innerHeight){\r\n\t\tvar cp = cornerPoints;\r\n\t\t\r\n\t\tvar notRectangle = !(cp.leftTop.x === cp.leftBottom.x && cp.rightTop.x === cp.rightBottom.x && cp.leftTop.y === cp.rightTop.y && cp.leftBottom.y === cp.rightBottom.y);\r\n\t\tvar notSizeMatch = !((cp.rightTop.x - cp.leftTop.x === innerWidth) && (cp.leftBottom.y - cp.leftTop.y === innerHeight))\r\n\t\tvar rotatedOrFlipped = !(cp.leftTop.x < cp.rightTop.x && cp.leftTop.y < cp.rightBottom.y)\r\n\t\t\r\n\t\tvar isDeformed = (notRectangle || notSizeMatch || rotatedOrFlipped)\r\n\t\treturn isDeformed;\r\n\t\t\r\n\t}\r\n\r\n\tfunction cornersActionListToObject(nonAffineTransform){\r\n\t\tvar result = {};\r\n\t\tresult.leftTop = {\r\n\t\t\tx:nonAffineTransform.getDouble(0), \r\n\t\t\ty:nonAffineTransform.getDouble(1)\r\n\t\t};\r\n\t\tresult.rightTop = {\r\n\t\t\tx:nonAffineTransform.getDouble(2), \r\n\t\t\ty:nonAffineTransform.getDouble(3)\r\n\t\t};\r\n\t\tresult.rightBottom = {\r\n\t\t\tx:nonAffineTransform.getDouble(4), \r\n\t\t\ty:nonAffineTransform.getDouble(5)\r\n\t\t};\r\n\t\tresult.leftBottom = {\r\n\t\t\tx:nonAffineTransform.getDouble(6), \r\n\t\t\ty:nonAffineTransform.getDouble(7)\r\n\t\t};\r\n\t\t\r\n\t\r\n\t\treturn result;    \r\n\t}\r\n\r\n\tfunction closeWindow(documentID){\r\n\t\tvar idCls = cTID( \"Cls \" );\r\n\t\t\tvar desc255 = new ActionDescriptor();\r\n\t\t\tvar idSvng = cTID( \"Svng\" );\r\n\t\t\tvar idYsN = cTID( \"YsN \" );\r\n\t\t\tvar idN = cTID( \"N   \" );\r\n\t\t\tdesc255.putEnumerated( idSvng, idYsN, idN );\r\n\t\t\tvar idDocI = cTID( \"DocI\" );\r\n\t\t\tdesc255.putInteger( idDocI, documentID );\r\n\t\t\tvar idforceNotify = sTID( \"forceNotify\" );\r\n\t\t\tdesc255.putBoolean( idforceNotify, true );\r\n\t\texecuteAction( idCls, desc255, DialogModes.NO );\r\n\t}\r\n\r\n\t//\r\n\t// hide selected layer(s)\r\n\tfunction hideLayer(){\r\n\t\tvar idHd = cTID( \"Hd  \" );\r\n\t\t\tvar desc19 = new ActionDescriptor();\r\n\t\t\tvar idnull = cTID( \"null\" );\r\n\t\t\t\tvar list9 = new ActionList();\r\n\t\t\t\t\tvar ref15 = new ActionReference();\r\n\t\t\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\t\t\tvar idOrdn = cTID( \"Ordn\" );\r\n\t\t\t\t\tvar idTrgt = cTID( \"Trgt\" );\r\n\t\t\t\t\tref15.putEnumerated( idLyr, idOrdn, idTrgt );\r\n\t\t\t\tlist9.putReference( ref15 );\r\n\t\t\tdesc19.putList( idnull, list9 );\r\n\t\texecuteAction( idHd, desc19, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction copyLayerStyle(){\r\n\t\tvar idCpFX = cTID( \"CpFX\" );\r\n\t\texecuteAction( idCpFX, undefined, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction pasteLayerStyle(){\r\n\t\tvar idPaFX = cTID( \"PaFX\" );\r\n\t\t\tvar desc286 = new ActionDescriptor();\r\n\t\t\tvar idallowPasteFXOnLayerSet = sTID( \"allowPasteFXOnLayerSet\" );\r\n\t\t\tdesc286.putBoolean( idallowPasteFXOnLayerSet, true );\r\n\t\texecuteAction( idPaFX, desc286, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction duplicateVectorMask(idFrom,idAt){\r\n\t\tvar idMk = cTID( \"Mk  \" );\r\n\t\t\tvar desc376 = new ActionDescriptor();\r\n\t\t\tvar idnull = cTID( \"null\" );\r\n\t\t\t\tvar ref270 = new ActionReference();\r\n\t\t\t\tvar idPath = cTID( \"Path\" );\r\n\t\t\t\tref270.putClass( idPath );\r\n\t\t\tdesc376.putReference( idnull, ref270 );\r\n\t\t\tvar tidAt = cTID( \"At  \" );\r\n\t\t\t\tvar ref271 = new ActionReference();\r\n\t\t\t\tvar idvectorMask = sTID( \"vectorMask\" );\r\n\t\t\t\tref271.putEnumerated( idPath, idPath, idvectorMask );\r\n\t\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\t\tref271.putIdentifier( idLyr, idAt );\r\n\t\t\tdesc376.putReference( tidAt, ref271 );\r\n\t\t\tvar idUsng = cTID( \"Usng\" );\r\n\t\t\t\tvar ref272 = new ActionReference();\r\n\t\t\t\tref272.putEnumerated( idPath, idPath, idvectorMask );\r\n\t\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\t\tref272.putIdentifier( idLyr, idFrom );\r\n\t\t\tdesc376.putReference( idUsng, ref272 );\r\n\t\t\tvar idDplc = cTID( \"Dplc\" );\r\n\t\t\tdesc376.putBoolean( idDplc, true );\r\n\t\texecuteAction( idMk, desc376, DialogModes.NO );\r\n\t}\r\n\t\r\n\tfunction duplicateMask(idFrom,idAt){\r\n\t\tvar idMk = cTID( \"Mk  \" );\r\n\t\t\tvar desc381 = new ActionDescriptor();\r\n\t\t\tvar idNw = cTID( \"Nw  \" );\r\n\t\t\tvar idChnl = cTID( \"Chnl\" );\r\n\t\t\tvar tidAt = cTID( \"At  \" );\r\n\t\t\tdesc381.putClass( idNw, idChnl );\r\n\t\t\t\tvar ref277 = new ActionReference();\r\n\t\t\t\tvar idChnl = cTID( \"Chnl\" );\r\n\t\t\t\tvar idMsk = cTID( \"Msk \" );\r\n\t\t\t\tref277.putEnumerated( idChnl, idChnl, idMsk );\r\n\t\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\t\tref277.putIdentifier( idLyr, idAt );\r\n\t\t\tdesc381.putReference( tidAt, ref277 );\r\n\t\t\tvar idUsng = cTID( \"Usng\" );\r\n\t\t\t\tvar ref278 = new ActionReference();\r\n\t\t\t\tvar idChnl = cTID( \"Chnl\" );\r\n\t\t\t\tvar idMsk = cTID( \"Msk \" );\r\n\t\t\t\tref278.putEnumerated( idChnl, idChnl, idMsk );\r\n\t\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\t\tref278.putIdentifier( idLyr, idFrom  );\r\n\t\t\tdesc381.putReference( idUsng, ref278 );\r\n\t\t\tvar idDplc = cTID( \"Dplc\" );\r\n\t\t\tdesc381.putBoolean( idDplc, true );\r\n\t\texecuteAction( idMk, desc381, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction disableVectorMask(id){\r\n\t\tvar idsetd = charIDToTypeID( \"setd\" );\r\n\t\t\tvar desc1320 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref703 = new ActionReference();\r\n\t\t\t\tvar idLyr = charIDToTypeID( \"Lyr \" );\r\n\t\t\t\tref703.putIdentifier( idLyr, id);\r\n\t\t\tdesc1320.putReference( idnull, ref703 );\r\n\t\t\tvar idT = charIDToTypeID( \"T   \" );\r\n\t\t\t\tvar desc1321 = new ActionDescriptor();\r\n\t\t\t\tvar idvectorMaskEnabled = stringIDToTypeID( \"vectorMaskEnabled\" );\r\n\t\t\t\tdesc1321.putBoolean( idvectorMaskEnabled, false );\r\n\t\t\tdesc1320.putObject( idT, idLyr, desc1321 );\r\n\t\texecuteAction( idsetd, desc1320, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction disableMask(id){\r\n\t\tvar idsetd = charIDToTypeID( \"setd\" );\r\n\t\t\tvar desc1327 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref707 = new ActionReference();\r\n\t\t\t\tvar idLyr = charIDToTypeID( \"Lyr \" );\r\n\t\t\t\tref707.putIdentifier( idLyr, id);\r\n\t\t\tdesc1327.putReference( idnull, ref707 );\r\n\t\t\tvar idT = charIDToTypeID( \"T   \" );\r\n\t\t\t\tvar desc1328 = new ActionDescriptor();\r\n\t\t\t\tvar idUsrM = charIDToTypeID( \"UsrM\" );\r\n\t\t\t\tdesc1328.putBoolean( idUsrM, false );\r\n\t\t\tdesc1327.putObject( idT, idLyr, desc1328 );\r\n\t\texecuteAction( idsetd, desc1327, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction moveLayerOrder(toIndex, fromID){\r\n\t\tvar idmove = cTID( \"move\" );\r\n\t\t\tvar desc594 = new ActionDescriptor();\r\n\t\t\tvar idnull = cTID( \"null\" );\r\n\t\t\t\tvar ref449 = new ActionReference();\r\n\t\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\t\tvar idOrdn = cTID( \"Ordn\" );\r\n\t\t\t\tvar idTrgt = cTID( \"Trgt\" );\r\n\t\t\t\tref449.putEnumerated( idLyr, idOrdn, idTrgt );\r\n\t\t\tdesc594.putReference( idnull, ref449 );\r\n\t\t\tvar idT = cTID( \"T   \" );\r\n\t\t\t\tvar ref450 = new ActionReference();\r\n\t\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\t\tref450.putIndex( idLyr, toIndex);\r\n\t\t\tdesc594.putReference( idT, ref450 );\r\n\t\t\tvar idAdjs = cTID( \"Adjs\" );\r\n\t\t\tdesc594.putBoolean( idAdjs, false );\r\n\t\t\tvar idVrsn = cTID( \"Vrsn\" );\r\n\t\t\tdesc594.putInteger( idVrsn, 5 );\r\n\t\t\tvar idLyrI = cTID( \"LyrI\" );\r\n\t\t\t\tvar list253 = new ActionList();\r\n\t\t\t\tlist253.putInteger( fromID );\r\n\t\t\tdesc594.putList( idLyrI, list253 );\r\n\t\t\r\n\t\ttry{\r\n\t\t\texecuteAction( idmove, desc594, DialogModes.NO );\r\n\t\t}catch(e){\r\n\t\t\talert(e.message);\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\t// A helper function for debugging\r\n\t// It also helps the user see what is going on\r\n\t// if you turn it off for this example you\r\n\t// get a flashing cursor for a number time\r\n\tfunction WaitForRedraw()\r\n\t{\r\n\t\tvar eventWait = cTID(\"Wait\")\r\n\t\tvar enumRedrawComplete = cTID(\"RdCm\")\r\n\t\tvar typeState = cTID(\"Stte\")\r\n\t\tvar keyState = cTID(\"Stte\")\r\n\t\tvar desc = new ActionDescriptor()\r\n\t\tdesc.putEnumerated(keyState, typeState, enumRedrawComplete)\r\n\t\texecuteAction(eventWait, desc, DialogModes.NO)\r\n\t}\r\n\r\n\tfunction filterValidLayers(indexList){\r\n\t\tvar result = [];\r\n\t\t\r\n\t\tfor(var i = 0, len=indexList.length; i < len; i++){\r\n\t\t\tvar notLinkMissing = true;\r\n\t\t\r\n\t\t\tvar desc = getLayerDescriptorByID(indexList[i]);\r\n\t\t\t\r\n\t\t\tvar isSmartObjectLayer = desc.getInteger(sTID('layerKind')) == 5;\r\n\t\t\t\r\n\t\t\tif(isSmartObjectLayer){\r\n\t\t\t\tvar notProtectAll = !desc.getObjectValue(sTID('layerLocking')).getBoolean(sTID('protectAll'));\r\n\t\t\t\tvar notProtectPosition = !desc.getObjectValue(sTID('layerLocking')).getBoolean(sTID('protectPosition'));\r\n\t\t\t\tvar notVector = desc.getObjectValue(sTID('smartObject')).getEnumerationValue(sTID('placed')) === sTID(\"rasterizeContent\");\r\n\t\t\t\tvar hasKeyLinkMissing = desc.getObjectValue(sTID('smartObject')).hasKey(sTID('linkMissing'));\r\n\t\t\t\t\r\n\t\t\t\tif(hasKeyLinkMissing){\r\n\t\t\t\t\tnotLinkMissing = !desc.getObjectValue(sTID('smartObject')).getBoolean(sTID('linkMissing'));\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\tif(notProtectAll && notProtectPosition && notVector && notLinkMissing){\r\n\t\t\t\t\tresult.push(indexList[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction collapseFolder(){\r\n\t\tvar idsetd = charIDToTypeID( \"setd\" );\r\n\t\t\tvar desc2 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref1 = new ActionReference();\r\n\t\t\t\tvar idPrpr = charIDToTypeID( \"Prpr\" );\r\n\t\t\t\tvar idTxtS = stringIDToTypeID( \"layerSectionExpanded\" );\r\n\t\t\t\tref1.putProperty( idPrpr, idTxtS );\r\n\t\t\t\tvar idLyr = charIDToTypeID( \"Lyr \" );\r\n\t\t\t\tvar idOrdn = charIDToTypeID( \"Ordn\" );\r\n\t\t\t\tvar idTrgt = charIDToTypeID( \"Trgt\" );\r\n\t\t\t\tref1.putEnumerated( idLyr, idOrdn, idTrgt );\r\n\t\t\tdesc2.putReference( idnull, ref1 );\r\n\t\t\tvar idT = charIDToTypeID( \"T   \" );\r\n\t\t\tdesc2.putBoolean( charIDToTypeID( \"T   \" ), false );\r\n\t\t\tdesc2.putBoolean( stringIDToTypeID( \"recursive\" ), true );\r\n\t\texecuteAction( idsetd, desc2, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction translate(x,y){\r\n\t\tvar desc = new LxActionDescriptor();\r\n\t\tdesc.lxRefLayer();\r\n\t\tvar descTo = new LxActionDescriptor();\r\n\t\tdescTo.putUnitDouble(\"horizontal\", \"pixelsUnit\", x);\r\n\t\tdescTo.putUnitDouble(\"vertical\", \"pixelsUnit\", y);\r\n\t\tdesc.putObject(\"to\",\"offset\", descTo);\r\n\t\t\r\n\t\ttry{\r\n\t\t\texecuteAction( \"move\", desc);\r\n\t\t}catch(e){\r\n\t\t\t// e.g. empty bounding box... no pixel to transform \r\n\t\t}\r\n\t}\r\n\r\n\tfunction calculateScaleRatio(width, height, soPoints){\r\n\t\tvar soInnerPerimeter = (width*2 + height*2);\r\n\t\tvar soDeformedPerimeter = 0;\r\n\t\t\r\n\t\tvar leftTopX = soPoints.getDouble(0);\r\n\t\tvar leftTopY = soPoints.getDouble(1);\r\n\t\tvar rightTopX = soPoints.getDouble(2) - leftTopX;\r\n\t\tvar rightTopY = soPoints.getDouble(3) - leftTopY;\r\n\t\tvar rightBottomX = soPoints.getDouble(4) - leftTopX;\r\n\t\tvar rightBottomY = soPoints.getDouble(5) - leftTopY;\r\n\t\tvar leftBottomX = soPoints.getDouble(6) - leftTopX;\r\n\t\tvar leftBottomY = soPoints.getDouble(7) - leftTopY;\r\n\t\tleftTopX = 0;\r\n\t\tleftTopY = 0;\r\n\t\t\r\n\t\tsoDeformedPerimeter += edgeLength (leftTopX, leftTopY, rightTopX, rightTopY);\r\n\t\tsoDeformedPerimeter += edgeLength (rightTopX, rightTopY, rightBottomX, rightBottomY);\r\n\t\tsoDeformedPerimeter += edgeLength (rightBottomX, rightBottomY, leftBottomX, leftBottomY);\r\n\t\tsoDeformedPerimeter += edgeLength (leftBottomX, leftBottomY, leftTopX, leftTopY);\r\n\t\t\r\n\t\tfunction edgeLength (xa, ya, xb, yb){\r\n\t\t\treturn Math.sqrt( Math.pow(xb - xa, 2) + Math.pow(yb - ya,2));\r\n\t\t}\r\n\t\t\r\n\t\tvar result = (soDeformedPerimeter / soInnerPerimeter) * 100;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction doRectangleToQuadrilateral(width, height, cornerPoints){\r\n\t\tvar right = width, bottom = height;\r\n\t\tvar quadRect = new ActionList();\r\n\t\t\r\n\t\tquadRect.putUnitDouble(charIDToTypeID('#Pxl'),0); //leftTop\r\n\t\tquadRect.putUnitDouble(charIDToTypeID('#Pxl'),0);\r\n\r\n\t\tquadRect.putUnitDouble(charIDToTypeID('#Pxl'),right); //rightBottom\r\n\t\tquadRect.putUnitDouble(charIDToTypeID('#Pxl'),bottom);\r\n\t\t\r\n\t\tfunction transform(quadRect, points, rightBottomX, rightBottomY){\r\n\t\t\tvar args = new ActionDescriptor();\r\n\t\t\tvar quadCorners = new ActionList();\r\n\t\t\t\r\n\t\t\tquadCorners.putUnitDouble( charIDToTypeID('#Pxl'), points.leftTop.x);   //left top\r\n\t\t\tquadCorners.putUnitDouble( charIDToTypeID('#Pxl'), points.leftTop.y);\r\n\t\t\tquadCorners.putUnitDouble( charIDToTypeID('#Pxl'), points.rightTop.x);   //right top\r\n\t\t\tquadCorners.putUnitDouble( charIDToTypeID('#Pxl'), points.rightTop.y);\r\n\t\t\tquadCorners.putUnitDouble( charIDToTypeID('#Pxl'), rightBottomX || points.rightBottom.x);         //right bottom\r\n\t\t\tquadCorners.putUnitDouble( charIDToTypeID('#Pxl'), rightBottomY || points.rightBottom.y); \r\n\t\t\tquadCorners.putUnitDouble( charIDToTypeID('#Pxl'), points.leftBottom.x);   //left bottom\r\n\t\t\tquadCorners.putUnitDouble( charIDToTypeID('#Pxl'), points.leftBottom.y);\r\n\r\n\t\t\targs.putList( stringIDToTypeID(\"rectangle\"), quadRect );\r\n\t\t\targs.putList( stringIDToTypeID(\"quadrilateral\"), quadCorners );\r\n\r\n\t\t\texecuteAction( charIDToTypeID('Trnf'), args );\r\n\t\t}\r\n\t\r\n\t\ttry{\r\n\t\t\ttransform(quadRect, cornerPoints);\r\n\t\t}catch(e){\r\n\t\t\t// we can't do only parallelograms if smartObject content contains text layers or vector smart objects\r\n\t\t\tvar rightBottomX = cornerPoints.leftBottom.x + (cornerPoints.rightTop.x - cornerPoints.leftTop.x);\r\n\t\t\tvar rightBottomY = cornerPoints.leftBottom.y + (cornerPoints.rightTop.y - cornerPoints.leftTop.y);\r\n\t\t\t\r\n\t\t\ttry{\r\n\t\t\t\ttransform(quadRect, cornerPoints, rightBottomX, rightBottomY);\r\n\t\t\t}catch(e){\r\n\t\t\t\t/* e.g. empty bounding box... no pixel to transform */\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction canCopyPasteStyle(desc){\r\n\t\tvar result = desc.hasKey(stringIDToTypeID('layerEffects')) || desc.getEnumerationValue(stringIDToTypeID('mode')) !== stringIDToTypeID(\"normal\") || desc.getInteger(stringIDToTypeID('opacity')) !== 255 || desc.getInteger(stringIDToTypeID('fillOpacity')) !==255;\r\n\t\treturn result;\r\n\t}\r\n\r\n\r\n\tfunction deselectPath(){\r\n\t\tvar idDslc = charIDToTypeID( \"Dslc\" );\r\n\t\t\tvar desc1797 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref990 = new ActionReference();\r\n\t\t\t\tvar idPath = charIDToTypeID( \"Path\" );\r\n\t\t\t\tvar idOrdn = charIDToTypeID( \"Ordn\" );\r\n\t\t\t\tvar idTrgt = charIDToTypeID( \"Trgt\" );\r\n\t\t\t\tref990.putEnumerated( idPath, idOrdn, idTrgt );\r\n\t\t\tdesc1797.putReference( idnull, ref990 );\r\n\t\texecuteAction( idDslc, desc1797, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction ungroupSelectedLayer(){\r\n\t\tvar idungroupLayersEvent = stringIDToTypeID( \"ungroupLayersEvent\" );\r\n\t\tvar desc204 = new ActionDescriptor();\r\n\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\tvar ref118 = new ActionReference();\r\n\t\t\tvar idLyr = charIDToTypeID( \"Lyr \" );\r\n\t\t\tvar idOrdn = charIDToTypeID( \"Ordn\" );\r\n\t\t\tvar idTrgt = charIDToTypeID( \"Trgt\" );\r\n\t\t\tref118.putEnumerated( idLyr, idOrdn, idTrgt );\r\n\t\tdesc204.putReference( idnull, ref118 );\r\n\t\texecuteAction( idungroupLayersEvent, desc204, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction selectPixels(left, top, width, height){\r\n\t\tvar idsetd = charIDToTypeID( \"setd\" );\r\n\t\t\tvar desc683 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref276 = new ActionReference();\r\n\t\t\t\tvar idChnl = charIDToTypeID( \"Chnl\" );\r\n\t\t\t\tvar idfsel = charIDToTypeID( \"fsel\" );\r\n\t\t\t\tref276.putProperty( idChnl, idfsel );\r\n\t\t\tdesc683.putReference( idnull, ref276 );\r\n\t\t\tvar idT = charIDToTypeID( \"T   \" );\r\n\t\t\t\tvar desc684 = new ActionDescriptor();\r\n\t\t\t\tvar idTop = charIDToTypeID( \"Top \" );\r\n\t\t\t\tvar idPxl = charIDToTypeID( \"#Pxl\" );\r\n\t\t\t\tdesc684.putUnitDouble( idTop, idPxl, top );\r\n\t\t\t\tvar idLeft = charIDToTypeID( \"Left\" );\r\n\t\t\t\tvar idPxl = charIDToTypeID( \"#Pxl\" );\r\n\t\t\t\tdesc684.putUnitDouble( idLeft, idPxl, left );\r\n\t\t\t\tvar idBtom = charIDToTypeID( \"Btom\" );\r\n\t\t\t\tvar idPxl = charIDToTypeID( \"#Pxl\" );\r\n\t\t\t\tdesc684.putUnitDouble( idBtom, idPxl, top+height );\r\n\t\t\t\tvar idRght = charIDToTypeID( \"Rght\" );\r\n\t\t\t\tvar idPxl = charIDToTypeID( \"#Pxl\" );\r\n\t\t\t\tdesc684.putUnitDouble( idRght, idPxl, left+width );\r\n\t\t\tvar idRctn = charIDToTypeID( \"Rctn\" );\r\n\t\t\tdesc683.putObject( idT, idRctn, desc684 );\r\n\t\texecuteAction( idsetd, desc683, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction preventFromArtboardMessUp(){\r\n\t\tvar desc = new LxActionDescriptor();\r\n\t\tdesc.lxRefLayer();\r\n\t\tdesc.putBoolean( \"autoNestEnabled\" , false );\r\n\t\tdesc.putBoolean( \"autoExpandEnabled\" , false );\r\n\t\tdesc.putBoolean( \"autoPositionEnabled\" , false );\t\t\r\n\t\texecuteAction( \"editArtboardEvent\", desc);\r\n\t}\r\n\r\n\tfunction revertArtboardsSettings(){\r\n\t\tvar desc = new LxActionDescriptor();\r\n\t\tdesc.lxRefLayer();\r\n\t\tdesc.putBoolean( \"autoNestEnabled\" , artboardsSettings.autoNestEnabled );\r\n\t\tdesc.putBoolean( \"autoExpandEnabled\" , artboardsSettings.autoExpandEnabled );\r\n\t\tdesc.putBoolean( \"autoPositionEnabled\" , artboardsSettings.autoPositionEnabled );\t\t\r\n\t\texecuteAction( \"editArtboardEvent\", desc);\r\n\t}\r\n\r\n\tfunction deselectPixels(){\r\n\t\tvar idsetd = charIDToTypeID( \"setd\" );\r\n\t\t\tvar desc1000 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref414 = new ActionReference();\r\n\t\t\t\tvar idChnl = charIDToTypeID( \"Chnl\" );\r\n\t\t\t\tvar idfsel = charIDToTypeID( \"fsel\" );\r\n\t\t\t\tref414.putProperty( idChnl, idfsel );\r\n\t\t\tdesc1000.putReference( idnull, ref414 );\r\n\t\t\tvar idT = charIDToTypeID( \"T   \" );\r\n\t\t\tvar idOrdn = charIDToTypeID( \"Ordn\" );\r\n\t\t\tvar idNone = charIDToTypeID( \"None\" );\r\n\t\t\tdesc1000.putEnumerated( idT, idOrdn, idNone );\r\n\t\texecuteAction( idsetd, desc1000, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction createMask(){\r\n\t\tvar idMk = charIDToTypeID( \"Mk  \" );\r\n\t\t\tvar desc685 = new ActionDescriptor();\r\n\t\t\tvar idNw = charIDToTypeID( \"Nw  \" );\r\n\t\t\tvar idChnl = charIDToTypeID( \"Chnl\" );\r\n\t\t\tdesc685.putClass( idNw, idChnl );\r\n\t\t\tvar idAt = charIDToTypeID( \"At  \" );\r\n\t\t\t\tvar ref277 = new ActionReference();\r\n\t\t\t\tvar idChnl = charIDToTypeID( \"Chnl\" );\r\n\t\t\t\tvar idChnl = charIDToTypeID( \"Chnl\" );\r\n\t\t\t\tvar idMsk = charIDToTypeID( \"Msk \" );\r\n\t\t\t\tref277.putEnumerated( idChnl, idChnl, idMsk );\r\n\t\t\tdesc685.putReference( idAt, ref277 );\r\n\t\t\tvar idUsng = charIDToTypeID( \"Usng\" );\r\n\t\t\tvar idUsrM = charIDToTypeID( \"UsrM\" );\r\n\t\t\tvar idRvlS = charIDToTypeID( \"RvlS\" );\r\n\t\t\tdesc685.putEnumerated( idUsng, idUsrM, idRvlS );\r\n\t\texecuteAction( idMk, desc685, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction setColorTag(pointer, type, color){\r\n\t\tvar idsetd = charIDToTypeID( \"setd\" );\r\n\t\t\tvar desc149 = new LxActionDescriptor();\r\n\t\t\tdesc149.lxRefLayer(pointer,type);\r\n\t\t\t\tvar desc150 = new LxActionDescriptor();\r\n\t\t\t\tdesc150.putEnumerated( \"Clr \", \"Clr \", color );\r\n\t\t\tdesc149.putObject( \"T   \", \"Lyr \", desc150 );\r\n\t\texecuteAction( idsetd, desc149, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction undo(){\r\n\t\tvar idslct = charIDToTypeID( \"slct\" );\r\n\t\t\tvar desc485 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref182 = new ActionReference();\r\n\t\t\t\tvar idHstS = charIDToTypeID( \"HstS\" );\r\n\t\t\t\tvar idOrdn = charIDToTypeID( \"Ordn\" );\r\n\t\t\t\tvar idPrvs = charIDToTypeID( \"Prvs\" );\r\n\t\t\t\tref182.putEnumerated( idHstS, idOrdn, idPrvs );\r\n\t\t\tdesc485.putReference( idnull, ref182 );\r\n\t\texecuteAction( idslct, desc485, DialogModes.NO );\r\n\t}\r\n\r\n\t// that's not photoshop comps. That is my custom overview\r\n\tfunction getCompsCount(obj){\r\n\t\tvar size = 0, key;\r\n\t\tfor (key in obj) {\r\n\t\t\tif (obj.hasOwnProperty(key) && (key !== \"file\" || key !== \"windowMethod\")) size++;\r\n\t\t}\r\n\t\treturn size;\r\n\t}\r\n\r\n\t// not tested on Mac. I don't know if cloud files are always synced. Workaround is embeding SO into document.\r\n\tfunction getCloudFilePath(soDesc){\r\n\t\tvar lookUpFile = new File(Folder.userData + \"/Adobe/Creative Cloud Libraries/LIBS/librarylookupfile\");\r\n\t\tif(!lookUpFile.exists)\r\n\t\t{\r\n\t\t\tthrow \"Error! Lookup file for cloud assests not found. Try embed smart objects first.\";\r\n\t\t}\r\n\r\n\t\tvar assetUrl = soDesc.getObjectValue(stringIDToTypeID('smartObject')).getObjectValue(stringIDToTypeID('link')).getString(stringIDToTypeID('elementReference'));\r\n\t\tvar urlEnd = assetUrl.split(\"/adobe-libraries/\")[1];\r\n\t\tvar library = urlEnd.split(\";node=\")[0];\r\n\t\tvar item = urlEnd.split(\";node=\")[1];\r\n\r\n\t\tlookUpFile.open('r');\r\n\t\tvar str = \"\";\r\n\t\twhile(!lookUpFile.eof)\r\n\t\tstr += lookUpFile.readln();\r\n\t\tlookUpFile.close();\r\n\t\t\r\n\t\tvar lookUpObj = eval(\"(\"+str+\")\");\r\n\t\tvar pathToSo = lookUpObj.libraries[library].elements[item].reps[0].path;\r\n\t\tif(!pathToSo)throw \"Couldn't find path to temp file of could smart objects. Try embed smart objects first.\";\r\n\t\t\r\n\t\treturn pathToSo;\r\n\t}\r\n\r\n\tfunction renameLayer(id, name){\r\n\t\tvar idsetd = charIDToTypeID( \"setd\" );\r\n\t\tvar desc573 = new ActionDescriptor();\r\n\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\tvar ref322 = new ActionReference();\r\n\t\t\tvar idLyr = charIDToTypeID( \"Lyr \" );\r\n\t\t\tref322.putIdentifier( idLyr, id );\r\n\t\tdesc573.putReference( idnull, ref322 );\r\n\t\tvar idT = charIDToTypeID( \"T   \" );\r\n\t\t\tvar desc574 = new ActionDescriptor();\r\n\t\t\tvar idNm = charIDToTypeID( \"Nm  \" );\r\n\t\t\tdesc574.putString( idNm, name );\r\n\t\tvar idLyr = charIDToTypeID( \"Lyr \" );\r\n\t\tdesc573.putObject( idT, idLyr, desc574 );\r\n\t\texecuteAction( idsetd, desc573, DialogModes.NO );\r\n\t}\r\n\r\n\t// here we utilize generator plugin\r\n\tfunction getLayerCompsData(){\r\n\t\tvar docRef = new ActionReference();  \r\n\t\tvar desc = new ActionDescriptor();  \r\n\t\tvar JSONid = stringIDToTypeID(\"json\");  \r\n\t\tdocRef.putProperty(charIDToTypeID('Prpr'), JSONid);  \r\n\t\tdocRef.putEnumerated(stringIDToTypeID(\"document\"), charIDToTypeID('Ordn'), charIDToTypeID('Trgt'));  \r\n\t\tdesc.putReference(charIDToTypeID('null'), docRef);  \r\n\t\tdesc.putBoolean(stringIDToTypeID(\"compInfo\"), true);  // just return the Layer Comp settings  \r\n\t\tdesc.putBoolean(stringIDToTypeID( \"getCompLayerSettings\" ), false); // return Layer Comp settings for each layer  \r\n\t\tvar result = executeAction(charIDToTypeID( \"getd\" ), desc, DialogModes.NO).getString(JSONid);  \r\n\t\tresult = eval(\"(\"+result+\")\");\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t// data input is object from generator plugin\r\n\tfunction getActiveComp(data){\r\n\t\tif(data.comps){\r\n\t\t\tvar comps = data.comps;\r\n\t\t\tfor(var i = 0, len = comps.length; i < len ; i++){\r\n\t\t\t\tvar activeComp = comps[i];\r\n\t\t\t\tif(activeComp.hasOwnProperty(\"applied\") && activeComp.applied === true){\r\n\t\t\t\t\treturn activeComp.id;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tfunction selectDocument(documentID){\r\n\t\tvar idslct = charIDToTypeID( \"slct\" );\r\n\t\t\tvar desc2664 = new ActionDescriptor();\r\n\t\t\t\tvar ref1382 = new ActionReference();\r\n\t\t\t\tvar idDcmn = charIDToTypeID( \"Dcmn\" );\r\n\t\t\t\tref1382.putIdentifier( idDcmn, documentID );\r\n\t\t\tdesc2664.putReference( charIDToTypeID( \"null\" ), ref1382 );\r\n\t\texecuteAction( idslct, desc2664, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction isPathSelected(){\r\n\t\tvar ref = new ActionReference();   \r\n\t\tref.putProperty(charIDToTypeID( \"Prpr\" ), stringIDToTypeID(\"targetPathIndex\"));  \r\n\t\tref.putEnumerated( charIDToTypeID(\"Dcmn\"), charIDToTypeID(\"Ordn\"), charIDToTypeID(\"Trgt\") );    \r\n\t\tvar desc = executeActionGet(ref);   \r\n\t\tvar targetPathIndex = desc.getDouble(stringIDToTypeID (\"targetPathIndex\"));\r\n\t\tvar isSelected = targetPathIndex !== -1;\r\n\t\treturn isSelected;\r\n\t}\r\n\r\n\tfunction makeHistorySnapshot(snapshotName){\r\n\t\tvar idMk = charIDToTypeID( \"Mk  \" );\r\n\t\t\tvar desc11 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref5 = new ActionReference();\r\n\t\t\t\tvar idSnpS = charIDToTypeID( \"SnpS\" );\r\n\t\t\t\tref5.putClass( idSnpS );\r\n\t\t\tdesc11.putReference( idnull, ref5 );\r\n\t\t\tvar idFrom = charIDToTypeID( \"From\" );\r\n\t\t\t\tvar ref6 = new ActionReference();\r\n\t\t\t\tvar idHstS = charIDToTypeID( \"HstS\" );\r\n\t\t\t\tvar idCrnH = charIDToTypeID( \"CrnH\" );\r\n\t\t\t\tref6.putProperty( idHstS, idCrnH );\r\n\t\t\tdesc11.putReference( idFrom, ref6 );\r\n\t\t\tvar idNm = charIDToTypeID( \"Nm  \" );\r\n\t\t\tdesc11.putString( idNm, snapshotName );\r\n\t\t\tvar idUsng = charIDToTypeID( \"Usng\" );\r\n\t\t\tvar idHstS = charIDToTypeID( \"HstS\" );\r\n\t\t\tvar idFllD = charIDToTypeID( \"FllD\" );\r\n\t\t\tdesc11.putEnumerated( idUsng, idHstS, idFllD );\r\n\t\texecuteAction( idMk, desc11, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction removeHistorySnapshot(snapshotName){\r\n\t\tvar idDlt = charIDToTypeID( \"Dlt \" );\r\n\t\t\tvar desc35 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref23 = new ActionReference();\r\n\t\t\t\tvar idSnpS = charIDToTypeID( \"SnpS\" );\r\n\t\t\t\tref23.putName( idSnpS, snapshotName );\r\n\t\t\tdesc35.putReference( idnull, ref23 );\r\n\t\texecuteAction( idDlt, desc35, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction restoreFromSnapshot(snapshotName){\r\n\t\tvar idslct = charIDToTypeID( \"slct\" );\r\n\t\t\tvar desc36 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref24 = new ActionReference();\r\n\t\t\t\tvar idSnpS = charIDToTypeID(\"SnpS\");\r\n\t\t\t\tref24.putName( idSnpS, snapshotName );\r\n\t\t\tdesc36.putReference( idnull, ref24 );\r\n\t\texecuteAction( idslct, desc36, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction getArtboardSettings(){\r\n\t\tartboardDesc = lx.getDocumentProperty(\"artboards\");\r\n\t\t\t\r\n\t\tvar result = { \r\n\t\t\tautoNestEnabled: artboardDesc.getBoolean(\"autoNestEnabled\"),\r\n\t\t\tautoExpandEnabled: artboardDesc.getBoolean(\"autoExpandEnabled\"),\r\n\t\t\tautoPositionEnabled: artboardDesc.getBoolean(\"autoPositionEnabled\")\r\n\t\t};\t\t\t\r\n\t\t\t\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction isVectorMaskEnabled(){  \r\n\t\tvar lastIndex = docMaster.pathItems.length;  \r\n\t\t  \r\n\t\t// if there is no item mask can be disabled or not even exists  \r\n\t\t// so you could want check for existing vector mask before your call this function  \r\n\t\tif(lastIndex===0){return false}  \r\n\t\t  \r\n\t\t// vector mask should be last in paths list. If is not selected then it has \"normal\" kind. So we select last path.  \r\n\t\tvar desc = new ActionDescriptor();  \r\n\t\tvar ref = new ActionReference();  \r\n\t\tref.putIndex( charIDToTypeID( \"Path\" ), lastIndex );  \r\n\t\tdesc.putReference( charIDToTypeID( \"null\" ), ref );  \r\n\t\texecuteAction( charIDToTypeID( \"slct\" ), desc, DialogModes.NO ); \r\n\t  \r\n\t\t// now we check which kind is most bottom path  \r\n\t\tvar lastPathInList = docMaster.pathItems[lastIndex-1];  \r\n\t\tvar isVectorMaskEnabled = lastPathInList.kind === PathKind.VECTORMASK;  \r\n\t\treturn isVectorMaskEnabled;  \r\n\t\t\r\n\t\t// another method is trying to get path with reference and this reference has vector mask property\r\n\t}  \r\n}\r\n\r\n///////////////////\r\n//  SCALE STYLES\r\n///////////////////\r\n\r\nfunction scaleSelectedLayersStyle (scaleFactorPercent, selectedLayers){\r\n\t// YOU CAN ADJUST SCRIPT TO FIT YOUR NEEDS. POSSIBLE VALUES ARE \"TRUE\" OR \"FALSE\"\r\n\t// You might thing that I am noob because this code is to complicate. But this also scale shape styles not only layer effects.\r\n\tstyleSettings = settings.styleScaleSettings\r\n\r\n\t// performance - don't even select shape layer if we won't change shape styles\r\n\tstyleSettings[\"dontScaleShape\"] = (!styleSettings.scaleShapeStrokeWidth && !styleSettings.scaleShapePatternFill && !styleSettings.scaleShapeGradientFill && !styleSettings.scaleShapeStrokeGradient && !styleSettings.scaleShapeStrokePattern);\r\n\r\n\tmain();\r\n\r\n\tfunction main(){\r\n\t\tvar layersWithStyle = filterLayersWithStyle(selectedLayers);\r\n\t\tvar layersWithShape = filterLayersWithShape(selectedLayers);\r\n\t\tscaleFactorPercent = round2(scaleFactorPercent);\r\n\t\t\r\n\t\tif(scaleFactorPercent === 100){return} // skip effect scaling if nothing would change\r\n\t\t\r\n\t\t\r\n\t\tfor(var i = 0, prgs, cancel = false, len = selectedLayers.length; i < len; i++){\r\n\t\t\t\r\n\t\t\tif(!prgs){\r\n\t\t\t\tprgs=PltProgress(len, \"Styles scaling...\");\r\n\t\t\t\tprgs.show();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar index = selectedLayers[i];\r\n\t\t\tvar hasStyle = layersWithStyle.indexOf(index) >= 0;\r\n\t\t\tvar hasShape = layersWithShape.indexOf(index) >= 0;\r\n\t\t\tvar desc;\r\n\t\t\t\r\n\t\t\tif(hasStyle || hasShape){\r\n\t\t\t\tdesc = getLayerDescriptor (index);\r\n\t\t\t\tsetSelectedLayer (index);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(hasStyle){\r\n\t\t\t\tcancel = scaleStyles(scaleFactorPercent);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(hasShape){\r\n\t\t\t\tvar shapeProperties = {\r\n\t\t\t\t\tscaleRatio: scaleFactorPercent/100,\r\n\t\t\t\t\tstrokeWidth: getStrokeWidth(desc),\r\n\t\t\t\t\t\r\n\t\t\t\t\tshapePatternScale: getShapePatternScale(desc),\r\n\t\t\t\t\tshapeGradientScale: getShapeGradientScale(desc),\r\n\t\t\t\t\t\r\n\t\t\t\t\tshapeStrokeGradientScale: getShapeStrokeGradientScale(desc),\r\n\t\t\t\t\tshapeStrokePatternScale: getShapeStrokePatternScale(desc)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar strokeDesc = changeStrokeDesc( desc.getObjectValue(stringIDToTypeID('AGMStrokeStyleInfo')), shapeProperties);\r\n\t\t\t\tvar fillDesc = changeFillDesc(desc.getList(stringIDToTypeID('adjustment')).getObjectValue(0), shapeProperties);\r\n\t\t\t\tvar fillKey = getFillKey(fillDesc);\r\n\t\t\t\t\r\n\t\t\t\tcancel = applyShapeDescriptor (index, fillDesc, strokeDesc, fillKey);\r\n\t\t\t}\r\n\t\t\tif(cancel){return;}\r\n\t\t\tcancel = prgs.update(i,(\"Styles scaling: \"+i+\" layers from \" + len));\r\n\t\t\tif(cancel){return;}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getFillKey(fillDesc){\r\n\t\tvar fillKey;\r\n\t\t\r\n\t\tif(fillDesc.hasKey(stringIDToTypeID(\"pattern\"))){\r\n\t\t\tfillKey = stringIDToTypeID(\"patternLayer\");\r\n\t\t} else if(fillDesc.hasKey(stringIDToTypeID(\"gradient\"))){\r\n\t\t\tfillKey = stringIDToTypeID(\"gradientLayer\");\r\n\t\t} else {\r\n\t\t\tfillKey = stringIDToTypeID(\"solidColorLayer\");\r\n\t\t}\r\n\r\n\t\treturn fillKey;\r\n\t}\r\n\r\n\r\n\tfunction scaleStyles(value){\r\n\t\ttry{\r\n\t\t\tvar idscaleEffectsEvent = stringIDToTypeID( \"scaleEffectsEvent\" );\r\n\t\t\t\tvar desc66 = new ActionDescriptor();\r\n\t\t\t\tvar idScl = charIDToTypeID( \"Scl \" );\r\n\t\t\t\tvar idPrc = charIDToTypeID( \"#Prc\" );\r\n\t\t\t\tdesc66.putUnitDouble( idScl, idPrc, value );\r\n\t\t\texecuteAction( idscaleEffectsEvent, desc66, DialogModes.NO );\r\n\t\t}catch(e){\r\n\t\t\tif (e.number === 8007) { // if not \"User cancelled\"  \r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\t// some layer can have layerEffects descriptor but descriptor is not visible so scale\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction changeFillDesc(desc, props){\r\n\t\tif(props.shapeGradientScale !== false && styleSettings.scaleShapeGradientFill){\r\n\t\t\tdesc.putDouble(stringIDToTypeID('scale'),round2(props.shapeGradientScale * props.scaleRatio));\r\n\t\t}\r\n\t\tif(props.shapePatternScale !== false && styleSettings.scaleShapePatternFill){\r\n\t\t\tdesc.putDouble(stringIDToTypeID('scale'),round2(props.shapePatternScale * props.scaleRatio));\r\n\t\t}\r\n\r\n\t\treturn desc;\r\n\t}\r\n\r\n\tfunction changeStrokeDesc(desc, props){\r\n\t\tif(props.strokeWidth !== false && styleSettings.scaleShapeStrokeWidth){\r\n\t\t\tvar strokeDoubleType = desc.getUnitDoubleType(stringIDToTypeID('strokeStyleLineWidth'));\r\n\t\t\tdesc.putUnitDouble(stringIDToTypeID('strokeStyleLineWidth'), strokeDoubleType ,round2(props.strokeWidth * (props.scaleRatio)));\r\n\t\t\t// putUnitDouble namísto double\r\n\t\t}\r\n\t\t\r\n\t\tif(props.shapeStrokeGradientScale !== false && styleSettings.scaleShapeStrokeGradient){\r\n\t\t\tvar gradientDesc = desc.getObjectValue(stringIDToTypeID('strokeStyleContent'));\r\n\t\t\tgradientDesc.putDouble(stringIDToTypeID('scale'),round2(props.shapeStrokeGradientScale * props.scaleRatio));\r\n\t\t\tdesc.putObject(stringIDToTypeID('strokeStyleContent'),stringIDToTypeID('strokeStyleContent'),gradientDesc);\r\n\t\t}\r\n\t\tif(props.shapeStrokePatternScale !== false && styleSettings.scaleShapeStrokePattern){\r\n\t\t\tvar patternDesc = desc.getObjectValue(stringIDToTypeID('strokeStyleContent'));\r\n\t\t\tpatternDesc.putDouble(stringIDToTypeID('scale'),round2(props.shapeStrokePatternScale * props.scaleRatio));\r\n\t\t\tdesc.putObject(stringIDToTypeID('strokeStyleContent'),stringIDToTypeID('strokeStyleContent'),patternDesc);\r\n\t\t}\r\n\r\n\t\treturn desc;\r\n\t}\r\n\r\n\t//\r\n\t// Function: getSelectedLayers\r\n\t// Usage: creates and array of the currently selected layers\r\n\t// Input: <none> Must have an open document\r\n\t// Return: Array selectedLayers\r\n\tfunction getSelectedLayers() {\r\n\t\tvar selectedLayers = [];\r\n\t\ttry {\r\n\t\t   var backGroundCounter = 1;\r\n\t\t\ttry {\r\n\t\t\t\tvar dummy = app.activeDocument.backgroundLayer;\r\n\t\t\t\tbackGroundCounter = 0;\r\n\t\t\t}\r\n\t\t\tcatch(e){;} //do nothing\r\n\t\t\t\r\n\t\t\tvar ref = new ActionReference();\r\n\t\t\tvar keyTargetLayers = app.stringIDToTypeID( 'targetLayers' );\r\n\t\t\tref.putProperty( app.charIDToTypeID( 'Prpr' ), keyTargetLayers );\r\n\t\t\tref.putEnumerated( app.charIDToTypeID( 'Dcmn' ), app.charIDToTypeID( 'Ordn' ), app.charIDToTypeID( 'Trgt' ) );\r\n\t\t\tvar desc = executeActionGet( ref );\r\n\t\t\tif ( desc.hasKey( keyTargetLayers ) ) {\r\n\t\t\t\tvar layersList = desc.getList( keyTargetLayers );\r\n\t\t\t\tfor ( var i = 0; i < layersList.count; i++) {\r\n\t\t\t\t\tvar listRef = layersList.getReference( i );\r\n\t\t\t\t\tselectedLayers.push( listRef.getIndex() + backGroundCounter );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}catch(e) {\r\n\t\t\t; // do nothing\r\n\t\t}\r\n\t\treturn selectedLayers;\r\n\t}\r\n\r\n\tfunction setSelectedLayers(list){\r\n\t\tsetSelectedLayer(list[0]);\r\n\t\taddSelectedLayer(list);\r\n\t}\r\n\r\n\tfunction setSelectedLayer( layerIndexOrName ) {\r\n\t\ttry {\r\n\t\t\tvar id239 = charIDToTypeID( \"slct\" );\r\n\t\t\tvar desc45 = new ActionDescriptor();\r\n\t\t\tvar id240 = charIDToTypeID( \"null\" );\r\n\t\t\tvar ref43 = new ActionReference();\r\n\t\t\tvar id241 = charIDToTypeID( \"Lyr \" );\r\n\t\t\tif ( typeof layerIndexOrName == \"number\" ) {\r\n\t\t\t\tref43.putIndex( id241, layerIndexOrName );\r\n\t\t\t} else {\r\n\t\t\t\tref43.putName( id241, layerIndexOrName );\r\n\t\t\t}\r\n\t\t\tdesc45.putReference( id240, ref43 );\r\n\t\t\tvar id242 = charIDToTypeID( \"MkVs\" );\r\n\t\t\tdesc45.putBoolean( id242, false );\r\n\t\t\texecuteAction( id239, desc45, DialogModes.NO );\r\n\t\t}catch(e) {\r\n\t\t\talert(e.message); // do nothing\r\n\t\t}\r\n\t}\r\n\r\n\tfunction addSelectedLayer( layerIndexOrName ) {\r\n\t\ttry {\r\n\t\t\tvar len=1;\r\n\t\t\tif( Object.prototype.toString.call( layerIndexOrName ) === '[object Array]' ) {\r\n\t\t\t\tlen = layerIndexOrName.length;\r\n\t\t\t}\r\n\t\t\tfor ( var i = 0;i<len;i++){\r\n\t\t\t\tvar id243 = charIDToTypeID( \"slct\" );\r\n\t\t\t\tvar desc46 = new ActionDescriptor();\r\n\t\t\t\tvar id244 = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref44 = new ActionReference();\r\n\t\t\t\tvar id245 = charIDToTypeID( \"Lyr \" );\r\n\t\t\t\tif ( typeof layerIndexOrName == \"number\" ) {\r\n\t\t\t\t\tref44.putIndex( id245, layerIndexOrName );\r\n\t\t\t\t} \r\n\t\t\t\telse if( Object.prototype.toString.call( layerIndexOrName ) === '[object Array]' ){ //když to je pole\r\n\t\t\t\t\tref44.putIndex( id245, layerIndexOrName[i] );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tref44.putName( id245, layerIndexOrName );\r\n\t\t\t\t}\r\n\t\t\t\tdesc46.putReference( id244, ref44 );\r\n\t\t\t\tvar id246 = stringIDToTypeID( \"selectionModifier\" );\r\n\t\t\t\tvar id247 = stringIDToTypeID( \"selectionModifierType\" );\r\n\t\t\t\tvar id248 = stringIDToTypeID( \"addToSelection\" );\r\n\t\t\t\tdesc46.putEnumerated( id246, id247, id248 );\r\n\t\t\t\tvar id249 = charIDToTypeID( \"MkVs\" );\r\n\t\t\t\tdesc46.putBoolean( id249, false );\r\n\t\t\t\texecuteAction( id243, desc46, DialogModes.NO );\r\n\t\t\t}\r\n\t\t}catch(e) {\r\n\t\t\talert(e.message); // do nothing\r\n\t\t}\r\n\t}\r\n\r\n\tfunction filterLayersWithStyle(list){\r\n\t\tvar result = [];\r\n\t\t\r\n\t\tif(styleSettings.scaleStyle){\r\n\t\t\tfor(var i = 0, len = list.length; i < len; i++){\r\n\t\t\t\tvar index = list[i];\r\n\t\t\t\tvar desc = getLayerDescriptor(index) ;\r\n\t\t\t\tvar hasStyle = desc.hasKey(stringIDToTypeID('layerEffects'));\r\n\t\t\t\tif(hasStyle){\r\n\t\t\t\t\tresult.push(index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction filterLayersWithShape(list){\r\n\t\tvar result = [];\r\n\t\t\r\n\t\tif(styleSettings.dontScaleShape === false){\r\n\t\t\tfor(var i = 0, len = list.length; i < len; i++){\r\n\t\t\t\tvar index = list[i];\r\n\t\t\t\tvar desc = getLayerDescriptor(index);\r\n\t\t\t\tvar shapePatternScale = getShapePatternScale(desc);\r\n\t\t\t\tvar shapeGradientScale = getShapeGradientScale(desc);\r\n\t\t\t\t\r\n\t\t\t\tif(hasStroke(desc) || shapePatternScale !== false || shapeGradientScale !== false){\r\n\t\t\t\t\tresult.push(index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction getStrokeWidth(desc){\r\n\t\tif(!desc.getObjectValue(stringIDToTypeID('AGMStrokeStyleInfo')).hasKey(stringIDToTypeID('strokeStyleLineWidth'))){return false}\r\n\t\t\r\n\t\tvar result = desc.getObjectValue(stringIDToTypeID('AGMStrokeStyleInfo')).getUnitDoubleValue(stringIDToTypeID('strokeStyleLineWidth'));\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction hasStroke(desc){\r\n\t\tvar hasStrokeWidth = desc.hasKey(stringIDToTypeID('AGMStrokeStyleInfo')) && desc.getObjectValue(stringIDToTypeID('AGMStrokeStyleInfo')).hasKey(stringIDToTypeID('strokeStyleLineWidth'));\r\n\t\tvar isShape = desc.getInteger(stringIDToTypeID('layerKind')) === 4;\r\n\t\tvar has = hasStrokeWidth && isShape;\r\n\t\treturn has;\r\n\t}\r\n\r\n\tfunction getShapeStrokeGradientScale(desc){\r\n\t\t\r\n\t\tvar strokeDesc = desc.getObjectValue(stringIDToTypeID('AGMStrokeStyleInfo'));\r\n\t\tvar hasStrokeStyle = strokeDesc.hasKey(stringIDToTypeID('strokeStyleContent'));\r\n\t\tif(!hasStrokeStyle){return false}\r\n\t\t\r\n\t\tvar strokeStyleContentDesc = strokeDesc.getObjectValue(stringIDToTypeID('strokeStyleContent'));\r\n\t\t\r\n\t\tvar isGradient = strokeStyleContentDesc.hasKey(stringIDToTypeID('gradient'));\r\n\t\tif(!isGradient){return false}\r\n\t\t\r\n\t\t// we don't need scale gradient if align with layer is true\r\n\t\tvar isAlignedToLayer = strokeStyleContentDesc.getBoolean(stringIDToTypeID('align'));\r\n\t\tif(isAlignedToLayer){return false}\r\n\t\t\r\n\t\tvar strokeGradientScale = strokeStyleContentDesc.getUnitDoubleValue(stringIDToTypeID('scale'));\r\n\t\t\r\n\t\treturn strokeGradientScale;\r\n\t}\r\n\r\n\r\n\tfunction getShapeStrokePatternScale(desc){\r\n\t\t\r\n\t\tvar strokeDesc = desc.getObjectValue(stringIDToTypeID('AGMStrokeStyleInfo'));\r\n\t\tvar hasStrokeStyle = strokeDesc.hasKey(stringIDToTypeID('strokeStyleContent'));\r\n\t\tif(!hasStrokeStyle){return false}\r\n\t\t\r\n\t\tvar strokeStyleContentDesc = strokeDesc.getObjectValue(stringIDToTypeID('strokeStyleContent'));\r\n\t\t\r\n\t\tvar isPattern = strokeStyleContentDesc.hasKey(stringIDToTypeID('pattern'));\r\n\t\tif(!isPattern){return false}\r\n\t\t\r\n\t\tvar strokePatternScale = strokeStyleContentDesc.getUnitDoubleValue(stringIDToTypeID('scale'));\r\n\t\t\r\n\t\treturn strokePatternScale;\r\n\t}\r\n\r\n\r\n\t// fillKey = typeID\r\n\t// fillDesc = gradientLayer\r\n\t// strokeDesc = descAGMStrokeStyleInfo\r\n\tfunction applyShapeDescriptor(layerIndex, fillDesc, strokeDesc, fillKey){\r\n\t   var idsetd = charIDToTypeID( \"setd\" );\r\n\t\t\tvar desc1176 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref301 = new ActionReference();\r\n\t\t\t\tvar idcontentLayer = stringIDToTypeID( \"contentLayer\" );\r\n\t\t\t\tvar idOrdn = charIDToTypeID( \"Ordn\" );\r\n\t\t\t\tvar idTrgt = charIDToTypeID( \"Trgt\" );\r\n\t\t\t\tref301.putEnumerated( idcontentLayer, idOrdn, idTrgt );\r\n\t\t\t\t//ref301.putIndex(idcontentLayer, layerIndex)\r\n\t\t\tdesc1176.putReference( idnull, ref301 );\r\n\t\t\tvar idT = charIDToTypeID( \"T   \" );\r\n\t\t\t\tvar descShapeStyle = new ActionDescriptor();\r\n\t\t\t\t\r\n\t\t\t\tvar idFlCn = stringIDToTypeID( \"fillContents\" );\r\n\t\t\t\tdescShapeStyle.putObject( idFlCn, fillKey, fillDesc );\r\n\t\t\t\t\r\n\t\t\t\tvar idstrokeStyle = stringIDToTypeID( \"strokeStyle\" );\r\n\t\t\t\tdescShapeStyle.putObject( idstrokeStyle, idstrokeStyle, strokeDesc );\r\n\t\t\t\t\r\n\t\t\tvar idshapeStyle = stringIDToTypeID( \"shapeStyle\" );\r\n\t\t\tdesc1176.putObject( idT, idshapeStyle, descShapeStyle );\r\n\t\ttry{\r\n\t\t\texecuteAction( idsetd, desc1176, DialogModes.NO );\r\n\t\t}catch(e){\r\n\t\t\tif (e.number === 8007) { // if not \"User cancelled\"  \r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tthrow e; \r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction getShapePatternScale(desc){\r\n\t\t// adjustments present\r\n\t\tif(!desc.hasKey(stringIDToTypeID('adjustment'))){return false;}\r\n\t\t\r\n\t\t// patternLayer present\r\n\t\tvar adjustmentList = desc.getList(stringIDToTypeID('adjustment'));\r\n\t\tvar patternLayerPosition = getKeyPositionInActionList(adjustmentList, stringIDToTypeID(\"patternLayer\"));\r\n\t\tif( patternLayerPosition === -1 ){return false}\r\n\t\t\r\n\t\tvar patternDesc = adjustmentList.getObjectValue(patternLayerPosition);\r\n\t\t\r\n\t\t// if everything except scale exists then scale should be 100%\r\n\t\tvar hasScaleKey = patternDesc.hasKey(stringIDToTypeID('scale'));\r\n\t\tif( !hasScaleKey ){return 100}\r\n\t\t\r\n\t\t// get scale value\r\n\t\tvar patternScale = patternDesc.getUnitDoubleValue(stringIDToTypeID('scale'));\r\n\t\treturn patternScale;\r\n\t}\r\n\r\n\tfunction getShapeGradientScale(desc){\r\n\t\t\r\n\t\t// adjustments present\r\n\t\tif(!desc.hasKey(stringIDToTypeID('adjustment'))){return false;}\r\n\t\t\r\n\t\t// patternLayer present\r\n\t\tvar adjustmentList = desc.getList(stringIDToTypeID('adjustment'));\r\n\t\tvar gradientLayerPosition = getKeyPositionInActionList(adjustmentList, stringIDToTypeID(\"gradientLayer\"));\r\n\t\tif( gradientLayerPosition === -1 ){return false}\r\n\t\t\r\n\t\tvar gradientDesc = adjustmentList.getObjectValue(gradientLayerPosition);\r\n\t\t\r\n\t\t// we don't need scale gradient if align with layer is true\r\n\t\tvar hasAlignKey = gradientDesc.hasKey(stringIDToTypeID('align'));\r\n\t\tif( !hasAlignKey ){return false}\r\n\t\t\r\n\t\t// if everything except scale exists then scale should be 100%\r\n\t\tvar hasScaleKey = gradientDesc.hasKey(stringIDToTypeID('scale'));\r\n\t\tif( !hasScaleKey ){return 100}\r\n\t\t\r\n\t\tvar gradientScale = gradientDesc.getUnitDoubleValue(stringIDToTypeID('scale'))\r\n\t\t\r\n\t\treturn gradientScale;\r\n\r\n\t}\r\n\r\n\t// objectType\r\n\t// key = typeID\r\n\tfunction getKeyPositionInActionList(list, key){\r\n\t\tfor (var i = 0, len = list.count; i < len; i++){\r\n\t\t\tvar isKeyFound = list.getObjectType(i) == key;\r\n\t\t\tif(isKeyFound){\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tfunction getLayerDescriptor(index){\r\n\t\tvar ref = new ActionReference();  \r\n\t\tref.putIndex( charIDToTypeID( \"Lyr \" ), index );    \r\n\t\tvar desc = executeActionGet(ref); \r\n\t\treturn desc;\r\n\t}\r\n\r\n\tfunction getLayerIndexByID(id){\r\n\t\tvar backGroundCounter = 0;\r\n\t\t\ttry {\r\n\t\t\t\tvar dummy = app.activeDocument.backgroundLayer;\r\n\t\t\t\tbackGroundCounter = -1;\r\n\t\t\t}\r\n\t\t\tcatch(e){;} //do nothing\r\n\t\t\r\n\t\tvar ref = new ActionReference();  \r\n\t\tref.putProperty(charIDToTypeID( \"Prpr\" ), stringIDToTypeID(\"itemIndex\"));\r\n\t\tref.putIdentifier( charIDToTypeID( \"Lyr \" ), id );    \r\n\t\tvar desc = executeActionGet(ref); \r\n\t\tvar index = desc.getInteger(stringIDToTypeID('itemIndex')) + backGroundCounter;\r\n\t\treturn index;\r\n\t}\r\n\r\n\tfunction round2 (num){\r\n\t\treturn Math.round(num * 100) / 100;\r\n\t}\r\n\t\r\n\tfunction PltProgress(maximum, message) {\r\n\t\tvar obj = {};\r\n\t\tvar win;\r\n\t\tvar closed = false;\r\n\t\tvar max = maximum;\r\n\t\tvar msg = message;\r\n\t  \r\n\t\tobj.show = function() {\r\n\t\t\t var winContructorString = \"\"\"palette{\r\n\t\t\t\ttext:'Progress',\r\n\t\t\t\tmessage:StaticText{text:'\"\"\"+msg+\"\"\"\"',alignment: 'fill'},\r\n\t\t\t\tmyRow: Panel { \r\n\t\t\t\t\torientation: 'row',\r\n\t\t\t\t\tmargins:0,\r\n\t\t\t\t\tproperties:{borderStyle: none}\r\n\t\t\t\t\tpanel:Panel{\r\n\t\t\t\t\t\tmargins:0,\r\n\t\t\t\t\t\tbar:Progressbar{\r\n\t\t\t\t\t\t\tbounds:[20,20,280,31], \r\n\t\t\t\t\t\t\tvalue:0,\r\n\t\t\t\t\t\t\tmaxvalue:\"\"\"+max+\"\"\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcancel:Button{ \r\n\t\t\t\t\t\ttext: 'Cancel', \r\n\t\t\t\t\t\tproperties:{name:'cancel'}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t};\"\"\";\r\n\t\t\t\twin = new Window(winContructorString);\r\n\t\t\t\twin.onClose = function(){\r\n\t\t\t\t\twin.close();\r\n\t\t\t\t\tclosed = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twin.myRow.cancel.onClick = function(){\r\n\t\t\t\t\twin.close();\r\n\t\t\t\t\tclosed = true;\r\n\t\t\t\t}\r\n\t\t\t\twin.show();\r\n\t\t\t\t\r\n\t\t\t\treturn closed;\r\n\t\t};\r\n\t\tobj.hide = function() {\r\n\t\t\tclosed = true;\r\n\t\t\twin.close();\r\n\t\t};\r\n\t\tobj.update = function(step, updateMessage){\r\n\t\t\twin.myRow.panel.bar.value = step;\r\n\t\t\twin.message.text = updateMessage;\r\n\t\t\tif(step === max){closed = true;win.close();}\r\n\t\t\treturn closed;\r\n\t\t}\r\n\t\treturn obj;\r\n\t}\r\n}\r\n\r\nfunction applyPollyFills(){\r\n\t\r\n\tif (!Array.prototype.indexOf) {\r\n\t\t  Array.prototype.indexOf = function(searchElement, fromIndex) {\r\n\t\t\tvar k;\r\n\t\t\tif (this == null) {\r\n\t\t\t  throw new TypeError('\"this\" is null or not defined');\r\n\t\t\t}\r\n\r\n\t\t\tvar o = Object(this);\r\n\t\t\tvar len = o.length >>> 0;\r\n\t\t\tif (len === 0) {\r\n\t\t\t  return -1;\r\n\t\t\t}\r\n\t\t\tvar n = fromIndex | 0;\r\n\t\t\tif (n >= len) {\r\n\t\t\t  return -1;\r\n\t\t\t}\r\n\t\t\tk = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\r\n\t\t\twhile (k < len) {\r\n\t\t\t  if (k in o && o[k] === searchElement) {\r\n\t\t\t\treturn k;\r\n\t\t\t  }\r\n\t\t\t  k++;\r\n\t\t\t}\r\n\t\t\treturn -1;\r\n\t\t  };\r\n\t\t}\r\n\r\n\tif (!Array.prototype.findValueIndex) {\r\n\t\tArray.prototype.findValueIndex = function(value) {\r\n\t\t\tvar o = Object(this);\r\n\t\t\tfor(var i = 0, len = o.length; i < len; i++){\r\n\t\t\t\tif(o[i] == value){\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t}\r\n\t\r\n\tif (!Array.prototype.findIndex) {\r\n\t\tArray.prototype.findIndex = function(predicate) {\r\n\t\t // 1. Let O be ? ToObject(this value).\r\n\t\t  if (this == null) {\r\n\t\t\tthrow new TypeError('\"this\" is null or not defined');\r\n\t\t  }\r\n\r\n\t\t  var o = Object(this);\r\n\r\n\t\t  // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n\t\t  var len = o.length >>> 0;\r\n\r\n\t\t  // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n\t\t  if (typeof predicate !== 'function') {\r\n\t\t\tthrow new TypeError('predicate must be a function');\r\n\t\t  }\r\n\r\n\t\t  // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n\t\t  var thisArg = arguments[1];\r\n\r\n\t\t  // 5. Let k be 0.\r\n\t\t  var k = 0;\r\n\r\n\t\t  // 6. Repeat, while k < len\r\n\t\t  while (k < len) {\r\n\t\t\t// a. Let Pk be ! ToString(k).\r\n\t\t\t// b. Let kValue be ? Get(O, Pk).\r\n\t\t\t// c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n\t\t\t// d. If testResult is true, return k.\r\n\t\t\tvar kValue = o[k];\r\n\t\t\tif (predicate.call(thisArg, kValue, k, o)) {\r\n\t\t\t  return k;\r\n\t\t\t}\r\n\t\t\t// e. Increase k by 1.\r\n\t\t\tk++;\r\n\t\t  }\r\n\r\n\t\t  // 7. Return -1.\r\n\t\t  return -1;\r\n\t\t}\r\n\t}\r\n}"
                },
                "type": {
                  "VarKey": null,
                  "Value": "CUSTOM"
                },
                "ext": {
                  "VarKey": null,
                  "Value": ".jsx"
                },
                "encoding": {
                  "VarKey": null,
                  "Value": "default"
                },
                "runner": {
                  "VarKey": "选中值",
                  "Value": null
                },
                "argTemplate": {
                  "VarKey": null,
                  "Value": "%FILE%"
                },
                "outputEncoding": {
                  "VarKey": null,
                  "Value": "oem"
                },
                "workingDir": {
                  "VarKey": null,
                  "Value": ""
                },
                "runAsAdmin": {
                  "VarKey": null,
                  "Value": "0"
                },
                "waitToExit": {
                  "VarKey": null,
                  "Value": "0"
                }
              },
              "OutputParams": {
                "stdout": null,
                "stdoutOnly": null,
                "stderr": null
              },
              "IfSteps": null,
              "ElseSteps": null,
              "Note": "",
              "Disabled": false,
              "Collapsed": false,
              "DelayMs": 0
            }
          ],
          "ElseSteps": null,
          "Note": "释放智能对象",
          "Disabled": false,
          "Collapsed": true,
          "DelayMs": 0
        },
        {
          "StepRunnerKey": "sys:simpleIf",
          "InputParams": {
            "condition": {
              "VarKey": null,
              "Value": "$= {选中值} == 6"
            }
          },
          "OutputParams": {},
          "IfSteps": [
            {
              "StepRunnerKey": "sys:runScript",
              "InputParams": {
                "script": {
                  "VarKey": null,
                  "Value": "#target photoshop\r\n\r\ns2t = stringIDToTypeID;\r\n\r\n(r = new ActionReference()).putProperty(s2t('property'), p = s2t('targetLayers'));\r\nr.putEnumerated(s2t('document'), s2t('ordinal'), s2t('targetEnum'));\r\nvar sel = executeActionGet(r).hasKey(p) ? executeActionGet(r).getList(p) : null;\r\n\r\n(r = new ActionReference()).putProperty(s2t('property'), p = s2t('hasBackgroundLayer'));\r\nr.putEnumerated(s2t('document'), s2t('ordinal'), s2t('targetEnum'));\r\nvar shift = executeActionGet(r).getBoolean(p) ? 0: 1\r\n\r\nif (sel) {\r\n    for (var i = 0; i < sel.count; i++) {\r\n        (r = new ActionReference()).putIndex(s2t(\"layer\"), sel.getReference(i).getIndex() + shift);\r\n        (d = new ActionDescriptor()).putReference(s2t(\"null\"), r);\r\n        executeAction(s2t(\"select\"), d, DialogModes.NO)\r\n        executeAction(s2t(\"newPlacedLayer\"), undefined, DialogModes.NO);\r\n    }\r\n}"
                },
                "type": {
                  "VarKey": null,
                  "Value": "CUSTOM"
                },
                "ext": {
                  "VarKey": null,
                  "Value": ".jsx"
                },
                "encoding": {
                  "VarKey": null,
                  "Value": "default"
                },
                "runner": {
                  "VarKey": "选中值",
                  "Value": null
                },
                "argTemplate": {
                  "VarKey": null,
                  "Value": "%FILE%"
                },
                "outputEncoding": {
                  "VarKey": null,
                  "Value": "oem"
                },
                "workingDir": {
                  "VarKey": null,
                  "Value": ""
                },
                "runAsAdmin": {
                  "VarKey": null,
                  "Value": "0"
                },
                "waitToExit": {
                  "VarKey": null,
                  "Value": "0"
                }
              },
              "OutputParams": {
                "stdout": null,
                "stdoutOnly": null,
                "stderr": null
              },
              "IfSteps": null,
              "ElseSteps": null,
              "Note": "",
              "Disabled": false,
              "Collapsed": false,
              "DelayMs": 0
            }
          ],
          "ElseSteps": null,
          "Note": "转为智能对象（将选择的图层分别转换为智能对象）",
          "Disabled": false,
          "Collapsed": true,
          "DelayMs": 0
        },
        {
          "StepRunnerKey": "sys:simpleIf",
          "InputParams": {
            "condition": {
              "VarKey": null,
              "Value": "$= {选中值} == 7"
            }
          },
          "OutputParams": {},
          "IfSteps": [
            {
              "StepRunnerKey": "sys:runScript",
              "InputParams": {
                "script": {
                  "VarKey": null,
                  "Value": "#target photoshop \r\n\r\nvar defaultRulerUnits = preferences.rulerUnits; preferences.rulerUnits = Units.PIXELS;\r\nvar doc = app.activeDocument; \r\nvar layers = doc.layers;\r\nvar typeArray = new Array ();\r\nvar isim = new Array();cTID = function(s) { return app.charIDToTypeID(s); }; sTID = function(s) { return app.stringIDToTypeID(s); };\r\n\r\nfunction repeatlastfilter() {    runMenuItem(cTID(\"LstF\"), true);\r\n}  \r\n\r\nfunction checklayermask() {\r\n    try {\r\n        Select_Layermask();\r\n    }\r\n    catch (err) { return }    repeatlastfilter();\r\n    Select_Original_Layer();       \r\n    }\r\n\r\n// MAIN\r\nfunction main()  \r\n{  \r\n    app.bringToFront();  \r\n    var SelectedLayers = getSelectedLayers();  \r\n    for (var i = 0; i < SelectedLayers.length; i++)  \r\n        {  \r\n            doc.activeLayer = SelectedLayers[i];  \r\n\r\n            isim[i] = SelectedLayers[i].name;\r\n            //selectlayer(isim[i]);\r\n            //alert (isim[i]);\r\n            repeatlastfilter();\r\n            checklayermask();\r\n            //doAction(DDActions.selection.text, DDActionSet.selection.text);  \r\n     }\r\n}\r\n\r\n// SELECT ORIGINAL LAYER\r\nfunction Select_Original_Layer(enabled, withDialog) {\r\n  \r\n    if (enabled != undefined && !enabled)\r\n      return;\r\n    var dialogMode = (withDialog ? DialogModes.ALL : DialogModes.NO);\r\n    var desc1 = new ActionDescriptor();\r\n    var ref1 = new ActionReference();    ref1.putEnumerated(cTID('Chnl'), cTID('Chnl'), sTID(\"RGB\"));    desc1.putReference(cTID('null'), ref1);    desc1.putBoolean(cTID('MkVs'), false);    executeAction(cTID('slct'), desc1, dialogMode);\r\n  };\r\n\r\n\r\n// SELECT LAYER MASK\r\nfunction Select_Layermask(enabled, withDialog) {\r\n    if (enabled != undefined && !enabled) \r\n    return;\r\n    var dialogMode = (withDialog ? DialogModes.ALL : DialogModes.NO);\r\n    var desc1 = new ActionDescriptor();\r\n    var ref1 = new ActionReference();    ref1.putEnumerated(cTID('Chnl'), cTID('Chnl'), cTID('Msk '));    desc1.putReference(cTID('null'), ref1);    desc1.putBoolean(cTID('MkVs'), false);    executeAction(cTID('slct'), desc1, dialogMode);\r\n};\r\n\r\n\r\n// GET SELECTED LAYERS\r\nfunction getSelectedLayers()  \r\n{  \r\n  var resultLayers=new Array();  \r\n  try{  \r\n    var descGrp = new ActionDescriptor();  \r\n    var refGrp = new ActionReference();  \r\n    refGrp.putEnumerated(cTID( \"Lyr \" ),cTID( \"Ordn\" ),cTID( \"Trgt\" ));  \r\n    descGrp.putReference(cTID( \"null\" ), refGrp );  \r\n    executeAction( sTID( \"groupLayersEvent\" ), descGrp, DialogModes.NO );  \r\n    for (var ix=0;ix<app.activeDocument.activeLayer.layers.length;ix++){resultLayers.push(app.activeDocument.activeLayer.layers[ix])}  \r\n    var desc5 = new ActionDescriptor();  \r\n    var ref2 = new ActionReference();  \r\n    ref2.putEnumerated( cTID( \"HstS\" ), cTID( \"Ordn\" ), cTID( \"Prvs\" ) );  \r\n    desc5.putReference( cTID( \"null\" ), ref2 );  \r\n    executeAction( cTID( \"slct\" ), desc5, DialogModes.NO );  \r\n  } catch (err) { }  \r\n  return resultLayers;  \r\n}     \r\n\r\nmain();"
                },
                "type": {
                  "VarKey": null,
                  "Value": "CUSTOM"
                },
                "ext": {
                  "VarKey": null,
                  "Value": ".jsx"
                },
                "encoding": {
                  "VarKey": null,
                  "Value": "default"
                },
                "runner": {
                  "VarKey": "选中值",
                  "Value": null
                },
                "argTemplate": {
                  "VarKey": null,
                  "Value": "%FILE%"
                },
                "outputEncoding": {
                  "VarKey": null,
                  "Value": "oem"
                },
                "workingDir": {
                  "VarKey": null,
                  "Value": ""
                },
                "runAsAdmin": {
                  "VarKey": null,
                  "Value": "0"
                },
                "waitToExit": {
                  "VarKey": null,
                  "Value": "0"
                }
              },
              "OutputParams": {
                "stdout": null,
                "stdoutOnly": null,
                "stderr": null
              },
              "IfSteps": null,
              "ElseSteps": null,
              "Note": "",
              "Disabled": false,
              "Collapsed": false,
              "DelayMs": 0
            }
          ],
          "ElseSteps": null,
          "Note": "智能滤镜（对选择的图层执行上一次的滤镜）",
          "Disabled": false,
          "Collapsed": true,
          "DelayMs": 0
        },
        {
          "StepRunnerKey": "sys:simpleIf",
          "InputParams": {
            "condition": {
              "VarKey": null,
              "Value": "$= {选中值} == 8"
            }
          },
          "OutputParams": {},
          "IfSteps": [
            {
              "StepRunnerKey": "sys:runScript",
              "InputParams": {
                "script": {
                  "VarKey": null,
                  "Value": "// apply active selection as layer masks to selected layers;\r\n// 2020, use it at your own risk;\r\nif(app.documents.length != 0) {\r\napplyLayerMasksToLayers();\r\n};\r\n////// apply layer masks to selected layers //////\r\nfunction applyLayerMasksToLayers(){\r\nvar theLayers = getSelectedLayersIdx();\r\nvar selection = hasSelection();\r\nif (selection == true) {app.activeDocument.selection.deselect()};\r\nfor(i = 0; i < theLayers.length; i++){\r\nselectLayerByIndex(theLayers[i], false);\r\n// remove existing mask;\r\nif (hasLayerMask (theLayers[i]) == true) {\r\nvar desc8 = new ActionDescriptor();\r\nvar ref5 = new ActionReference();\r\nvar idchannel = stringIDToTypeID( \"channel\" );\r\nref5.putEnumerated( idchannel, idchannel, stringIDToTypeID( \"mask\" ) );\r\ndesc8.putReference( stringIDToTypeID( \"null\" ), ref5 );\r\nexecuteAction( stringIDToTypeID( \"delete\" ), desc8, DialogModes.NO );\r\n};\r\n// load selection;\r\n   reselect ();\r\n// apply layer mask;\r\nif (selection == true) {makeLayerMask('RvlS')}\r\nelse {makeLayerMask('RvlA')};\r\n}\r\n};\r\n////// by paul mr //////\r\nfunction getSelectedLayersIdx(){ \r\n    var selectedLayers = new Array; \r\n    var ref = new ActionReference(); \r\n    ref.putEnumerated( charIDToTypeID(\"Dcmn\"), charIDToTypeID(\"Ordn\"), charIDToTypeID(\"Trgt\") ); \r\n    var desc = executeActionGet(ref); \r\n    if( desc.hasKey( stringIDToTypeID( 'targetLayers' ) ) ){ \r\n       desc = desc.getList( stringIDToTypeID( 'targetLayers' )); \r\n        var c = desc.count \r\n        var selectedLayers = new Array(); \r\n        for(var i=0;i<c;i++){ \r\n          try{ \r\n             activeDocument.backgroundLayer; \r\n             selectedLayers.push(  desc.getReference( i ).getIndex() ); \r\n          }catch(e){ \r\n             selectedLayers.push(  desc.getReference( i ).getIndex()+1 ); \r\n          } \r\n        } \r\n     }else{ \r\n       var ref = new ActionReference(); \r\n       ref.putProperty( charIDToTypeID(\"Prpr\") , charIDToTypeID( \"ItmI\" )); \r\n       ref.putEnumerated( charIDToTypeID(\"Lyr \"), charIDToTypeID(\"Ordn\"), charIDToTypeID(\"Trgt\") ); \r\n       try{ \r\n          activeDocument.backgroundLayer; \r\n          selectedLayers.push( executeActionGet(ref).getInteger(charIDToTypeID( \"ItmI\" ))-1); \r\n       }catch(e){ \r\n          selectedLayers.push( executeActionGet(ref).getInteger(charIDToTypeID( \"ItmI\" ))); \r\n       } \r\n    } \r\n    return selectedLayers; \r\n};\r\n////// by mike hale, via paul riggott //////\r\nfunction selectLayerByIndex(index,add){ \r\nadd = undefined ? add = false:add \r\nvar ref = new ActionReference();\r\nref.putIndex(charIDToTypeID(\"Lyr \"), index);\r\nvar desc = new ActionDescriptor();\r\n  desc.putReference(charIDToTypeID(\"null\"), ref );\r\n     if(add) desc.putEnumerated( stringIDToTypeID( \"selectionModifier\" ), stringIDToTypeID( \"selectionModifierType\" ), stringIDToTypeID( \"addToSelection\" ) ); \r\n    desc.putBoolean( charIDToTypeID( \"MkVs\" ), false ); \r\n try{\r\n  executeAction(charIDToTypeID(\"slct\"), desc, DialogModes.NO );\r\n}catch(e){\r\nalert(e.message); \r\n}\r\n};\r\n////// add layer mask //////\r\nfunction makeLayerMask(maskType) {\r\ntry {\r\nif( maskType == undefined) maskType = 'RvlA' ; //from selection\r\n// =======================================================\r\nvar idMk = charIDToTypeID( \"Mk  \" );\r\nvar desc3 = new ActionDescriptor();\r\nvar idNw = charIDToTypeID( \"Nw  \" );\r\nvar idChnl = charIDToTypeID( \"Chnl\" );\r\ndesc3.putClass( idNw, idChnl );\r\nvar idAt = charIDToTypeID( \"At  \" );\r\nvar ref1 = new ActionReference();\r\nvar idChnl = charIDToTypeID( \"Chnl\" );\r\nvar idChnl = charIDToTypeID( \"Chnl\" );\r\nvar idMsk = charIDToTypeID( \"Msk \" );\r\nref1.putEnumerated( idChnl, idChnl, idMsk );\r\ndesc3.putReference( idAt, ref1 );\r\nvar idUsng = charIDToTypeID( \"Usng\" );\r\nvar idUsrM = charIDToTypeID( \"UsrM\" );\r\nvar idRvlA = charIDToTypeID(maskType);\r\ndesc3.putEnumerated( idUsng, idUsrM, idRvlA );\r\nexecuteAction( idMk, desc3, DialogModes.NO );\r\n} catch (e) {return false};\r\n};\r\n////// check for selection //////\r\nfunction hasSelection(){\r\nvar ref10 = new ActionReference();\r\nref10.putProperty(stringIDToTypeID(\"property\"), stringIDToTypeID(\"selection\"));\r\nref10.putEnumerated( charIDToTypeID( \"Dcmn\" ), charIDToTypeID( \"Ordn\" ), charIDToTypeID( \"Trgt\" ) );\r\nvar docDesc = executeActionGet(ref10);\r\nreturn docDesc.hasKey(stringIDToTypeID(\"selection\"));\r\n};\r\n////// reselect //////\r\nfunction reselect () {\r\ntry {\r\nvar idsetd = charIDToTypeID( \"setd\" );\r\nvar desc7 = new ActionDescriptor();\r\nvar idnull = charIDToTypeID( \"null\" );\r\nvar ref2 = new ActionReference();\r\nvar idChnl = charIDToTypeID( \"Chnl\" );\r\nvar idfsel = charIDToTypeID( \"fsel\" );\r\nref2.putProperty( idChnl, idfsel );\r\ndesc7.putReference( idnull, ref2 );\r\nvar idT = charIDToTypeID( \"T   \" );\r\nvar idOrdn = charIDToTypeID( \"Ordn\" );\r\nvar idPrvs = charIDToTypeID( \"Prvs\" );\r\ndesc7.putEnumerated( idT, idOrdn, idPrvs );\r\nexecuteAction( idsetd, desc7, DialogModes.NO );\r\n} catch (e) {return false}\r\n};\r\n////// has layer mask //////\r\nfunction hasLayerMask (theIndex) {  \r\nvar m_Dsc01, m_Ref01;  \r\nm_Ref01 = new ActionReference();  \r\nm_Ref01.putIndex(charIDToTypeID(\"Lyr \"), theIndex);  \r\n//m_Ref01.putEnumerated(sTID(\"layer\"), cTID(\"Ordn\"), cTID(\"Trgt\"));  \r\nm_Dsc01 = executeActionGet(m_Ref01);  \r\nreturn m_Dsc01.hasKey(charIDToTypeID(\"Usrs\"));  \r\n};"
                },
                "type": {
                  "VarKey": null,
                  "Value": "CUSTOM"
                },
                "ext": {
                  "VarKey": null,
                  "Value": ".jsx"
                },
                "encoding": {
                  "VarKey": null,
                  "Value": "default"
                },
                "runner": {
                  "VarKey": "选中值",
                  "Value": null
                },
                "argTemplate": {
                  "VarKey": null,
                  "Value": "%FILE%"
                },
                "outputEncoding": {
                  "VarKey": null,
                  "Value": "oem"
                },
                "workingDir": {
                  "VarKey": null,
                  "Value": ""
                },
                "runAsAdmin": {
                  "VarKey": null,
                  "Value": "0"
                },
                "waitToExit": {
                  "VarKey": null,
                  "Value": "0"
                }
              },
              "OutputParams": {
                "stdout": null,
                "stdoutOnly": null,
                "stderr": null
              },
              "IfSteps": null,
              "ElseSteps": null,
              "Note": "",
              "Disabled": false,
              "Collapsed": false,
              "DelayMs": 0
            }
          ],
          "ElseSteps": null,
          "Note": "选区蒙版（对选择的图层设置选区蒙版）",
          "Disabled": false,
          "Collapsed": true,
          "DelayMs": 0
        },
        {
          "StepRunnerKey": "sys:simpleIf",
          "InputParams": {
            "condition": {
              "VarKey": null,
              "Value": "$= {选中值} == 11"
            }
          },
          "OutputParams": {},
          "IfSteps": [
            {
              "StepRunnerKey": "sys:runScript",
              "InputParams": {
                "script": {
                  "VarKey": null,
                  "Value": "app.activeDocument.suspendHistory(\"Script\", \"f()\");\r\n\r\nfunction f(){\r\n\tvar doc = activeDocument;\r\n\tvar adj_layer = doc.activeLayer;\r\n\tvar parent = adj_layer.parent;\r\n\tfor (var n = 0; n < parent.layers.length; n++)\r\n\t\t{\r\n\t\tif (parent.layers[n] == adj_layer)\r\n\t\t\t{\r\n\t\t\tfor (++n; n < parent.layers.length; n++)\r\n\t\t\t\t{\r\n\t\t\t\tif (parent.layers[n].typename == \"LayerSet\")\r\n\t\t\t\t\t{\r\n\t\t\t\t\tvar set = parent.layers[n];\r\n\t\t\t\t\tfor (var i = set.artLayers.length-1; i >= 0; i--){\r\n\t\t\t\t\t\t var layer = adj_layer.duplicate(set.artLayers[i], ElementPlacement.PLACEBEFORE);\r\n\t\t\t\t\t\t doc.activeLayer = layer;\r\n                            var idGrpL = charIDToTypeID( \"GrpL\" );\r\n                            var desc3731 = new ActionDescriptor();  var idnull = charIDToTypeID( \"null\" ); var ref320 = new ActionReference(); var idLyr = charIDToTypeID( \"Lyr \" ); var idOrdn = charIDToTypeID( \"Ordn\" ); var idTrgt = charIDToTypeID( \"Trgt\" );  ref320.putEnumerated( idLyr, idOrdn, idTrgt );  desc3731.putReference( idnull, ref320 );executeAction( idGrpL, desc3731, DialogModes.NO );\r\n \t\t\t\t\t\texecuteAction(stringIDToTypeID(\"mergeLayersNew\"), undefined, DialogModes.NO);\r\n\t\t\t\t\t\t}\r\n                      adj_layer.remove();\r\n                      return;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n}\r\n"
                },
                "type": {
                  "VarKey": null,
                  "Value": "CUSTOM"
                },
                "ext": {
                  "VarKey": null,
                  "Value": ".jsx"
                },
                "encoding": {
                  "VarKey": null,
                  "Value": "default"
                },
                "runner": {
                  "VarKey": "选中值",
                  "Value": null
                },
                "argTemplate": {
                  "VarKey": null,
                  "Value": "%FILE%"
                },
                "outputEncoding": {
                  "VarKey": null,
                  "Value": "oem"
                },
                "workingDir": {
                  "VarKey": null,
                  "Value": ""
                },
                "runAsAdmin": {
                  "VarKey": null,
                  "Value": "0"
                },
                "waitToExit": {
                  "VarKey": null,
                  "Value": "0"
                }
              },
              "OutputParams": {
                "stdout": null,
                "stdoutOnly": null,
                "stderr": null
              },
              "IfSteps": null,
              "ElseSteps": null,
              "Note": "",
              "Disabled": false,
              "Collapsed": false,
              "DelayMs": 0
            }
          ],
          "ElseSteps": null,
          "Note": "组剪切蒙版应用到层",
          "Disabled": false,
          "Collapsed": true,
          "DelayMs": 0
        }
      ],
      "SubPrograms": null,
      "TemplateId": null,
      "TemplateRevision": 0,
      "UseServerVersion": null,
      "IsProtected": null,
      "SharedId": null,
      "ShareTimeUtc": null
    }
  ],
  "Variables": [
    {
      "Key": "procName",
      "Type": 0,
      "Desc": "",
      "DefaultValue": "",
      "SaveState": false,
      "IsInput": false,
      "IsOutput": false,
      "ParamName": "",
      "InputParamInfo": null,
      "OutputParamInfo": null,
      "TableDef": null,
      "CustomType": null,
      "Group": null
    },
    {
      "Key": "list",
      "Type": 4,
      "Desc": "",
      "DefaultValue": "导出层|1\r\n分离层|2\r\n删除空层|3\r\n删除隐藏层|4\r\n\r\n转智能对象(将选择的图层分别转为智能对象)|6\r\n解智能对象|5\r\n\r\n文本编辑|7\r\n批量置入|8\r\n形状到AI|13\r\n路径到形状|16\r\n\r\n折叠组(折叠所有已展开的组)|10\r\n垂直长图(将多种图片垂直堆叠在一起)|12\r\nPS瘦身|14\r\nPS瘦身++|15",
      "SaveState": false,
      "IsInput": false,
      "IsOutput": false,
      "ParamName": "",
      "InputParamInfo": null,
      "OutputParamInfo": null,
      "TableDef": null,
      "CustomType": null,
      "Group": null
    },
    {
      "Key": "path",
      "Type": 0,
      "Desc": "",
      "DefaultValue": "",
      "SaveState": false,
      "IsInput": false,
      "IsOutput": false,
      "ParamName": "",
      "InputParamInfo": null,
      "OutputParamInfo": null,
      "TableDef": null,
      "CustomType": null,
      "Group": null
    },
    {
      "Key": "选中值",
      "Type": 12,
      "Desc": "默认的文本变量",
      "DefaultValue": "",
      "SaveState": false,
      "IsInput": false,
      "IsOutput": false,
      "ParamName": "",
      "InputParamInfo": null,
      "OutputParamInfo": null,
      "TableDef": null,
      "CustomType": null,
      "Group": null
    },
    {
      "Key": "isSuccess",
      "Type": 2,
      "Desc": "",
      "DefaultValue": "",
      "SaveState": false,
      "IsInput": false,
      "IsOutput": false,
      "ParamName": "",
      "InputParamInfo": null,
      "OutputParamInfo": null,
      "TableDef": null,
      "CustomType": null,
      "Group": null
    },
    {
      "Key": "保存地址",
      "Type": 0,
      "Desc": "",
      "DefaultValue": "",
      "SaveState": true,
      "IsInput": false,
      "IsOutput": false,
      "ParamName": "",
      "InputParamInfo": null,
      "OutputParamInfo": null,
      "TableDef": null,
      "CustomType": null,
      "Group": null
    },
    {
      "Key": "jpg质量",
      "Type": 12,
      "Desc": "",
      "DefaultValue": "8",
      "SaveState": true,
      "IsInput": false,
      "IsOutput": false,
      "ParamName": "",
      "InputParamInfo": null,
      "OutputParamInfo": null,
      "TableDef": null,
      "CustomType": null,
      "Group": ""
    },
    {
      "Key": "容差",
      "Type": 0,
      "Desc": "默认的文本变量",
      "DefaultValue": "1",
      "SaveState": true,
      "IsInput": false,
      "IsOutput": false,
      "ParamName": "",
      "InputParamInfo": null,
      "OutputParamInfo": null,
      "TableDef": null,
      "CustomType": null,
      "Group": null
    }
  ],
  "Steps": [
    {
      "StepRunnerKey": "sys:getActiveProcessInfo",
      "InputParams": {
        "stopIfFail": {
          "VarKey": null,
          "Value": "1"
        }
      },
      "OutputParams": {
        "path": null,
        "procName": "procName",
        "pid": null,
        "isSuccess": null
      },
      "IfSteps": null,
      "ElseSteps": null,
      "Note": "",
      "Disabled": false,
      "Collapsed": false,
      "DelayMs": 0
    },
    {
      "StepRunnerKey": "sys:simpleIf",
      "InputParams": {
        "condition": {
          "VarKey": null,
          "Value": "$= {quicker_in_param} == \"设置\""
        }
      },
      "OutputParams": {},
      "IfSteps": [
        {
          "StepRunnerKey": "sys:form",
          "InputParams": {
            "operation": {
              "VarKey": null,
              "Value": "variables"
            },
            "title": {
              "VarKey": null,
              "Value": "设置"
            },
            "formDef": {
              "VarKey": null,
              "Value": "{\"Fields\":[{\"FieldKey\":\"保存地址\",\"DictVarType\":null,\"Label\":\"默认保存地址\",\"HelpText\":\"\",\"HelpLink\":null,\"InputMethod\":1,\"SelectionItems\":\"\",\"IsRequired\":false,\"MinValue\":\"\",\"MaxValue\":\"\",\"Pattern\":\"\",\"InputWidth\":\"\",\"MaxLength\":0,\"ImeState\":null,\"TextTools\":\"SelectSingleFolder\",\"ExtraSettings\":null,\"VisibleExpression\":\"\",\"DefaultValue\":null,\"ColumnWidth\":0.0,\"OnlyDate\":false,\"ReadOnly\":false,\"Group\":\"\"},{\"FieldKey\":\"jpg质量\",\"DictVarType\":null,\"Label\":\"JPG质量\",\"HelpText\":\"0 代表最低质量（文件最小） , 9代表最高质量（文件最大）\",\"HelpLink\":null,\"InputMethod\":4,\"SelectionItems\":\"\",\"IsRequired\":false,\"MinValue\":\"0\",\"MaxValue\":\"9\",\"Pattern\":\"\",\"InputWidth\":\"\",\"MaxLength\":0,\"ImeState\":null,\"TextTools\":\"\",\"ExtraSettings\":\"\",\"VisibleExpression\":\"\",\"DefaultValue\":null,\"ColumnWidth\":0.0,\"OnlyDate\":false,\"ReadOnly\":false,\"Group\":\"\"},{\"FieldKey\":\"容差\",\"DictVarType\":null,\"Label\":\"容差\",\"HelpText\":\"转路径的容差\",\"HelpLink\":null,\"InputMethod\":1,\"SelectionItems\":\"\",\"IsRequired\":false,\"MinValue\":\"\",\"MaxValue\":\"\",\"Pattern\":\"\",\"InputWidth\":\"\",\"MaxLength\":0,\"ImeState\":null,\"TextTools\":\"\",\"ExtraSettings\":\"\",\"VisibleExpression\":\"\",\"DefaultValue\":null,\"ColumnWidth\":0.0,\"OnlyDate\":false,\"ReadOnly\":false,\"Group\":\"\"}]}"
            },
            "help": {
              "VarKey": null,
              "Value": ""
            },
            "titleColumnWidth": {
              "VarKey": null,
              "Value": "100"
            },
            "windowWidth": {
              "VarKey": null,
              "Value": "500"
            },
            "windowHeight": {
              "VarKey": null,
              "Value": "0"
            },
            "restoreFocus": {
              "VarKey": null,
              "Value": "0"
            },
            "topMost": {
              "VarKey": null,
              "Value": "true"
            },
            "disableEnterSubmit": {
              "VarKey": null,
              "Value": "0"
            },
            "stopIfFail": {
              "VarKey": null,
              "Value": "0"
            },
            "markdownhelp": {
              "VarKey": null,
              "Value": ""
            },
            "defaultInputWidth": {
              "VarKey": null,
              "Value": "0"
            },
            "confirm": {
              "VarKey": null,
              "Value": ""
            },
            "customButtons": {
              "VarKey": null,
              "Value": ""
            },
            "selectedGroup": {
              "VarKey": null,
              "Value": ""
            },
            "winLocation": {
              "VarKey": null,
              "Value": "CenterScreen"
            },
            "winSize": {
              "VarKey": null,
              "Value": ""
            }
          },
          "OutputParams": {
            "isSuccess": "isSuccess",
            "button": null,
            "selectedGroup": null,
            "errMessage": null
          },
          "IfSteps": null,
          "ElseSteps": null,
          "Note": "",
          "Disabled": false,
          "Collapsed": false,
          "DelayMs": 0
        },
        {
          "StepRunnerKey": "sys:stop",
          "InputParams": {
            "method": {
              "VarKey": null,
              "Value": "default"
            },
            "isError": {
              "VarKey": null,
              "Value": "0"
            },
            "return": {
              "VarKey": null,
              "Value": ""
            },
            "showMessage": {
              "VarKey": null,
              "Value": ""
            }
          },
          "OutputParams": {},
          "IfSteps": null,
          "ElseSteps": null,
          "Note": "",
          "Disabled": false,
          "Collapsed": false,
          "DelayMs": 0
        }
      ],
      "ElseSteps": null,
      "Note": "",
      "Disabled": false,
      "Collapsed": true,
      "DelayMs": 0
    },
    {
      "StepRunnerKey": "sys:if",
      "InputParams": {
        "condition": {
          "VarKey": null,
          "Value": "$= {procName}.Contains(@\"Photoshop\")"
        }
      },
      "OutputParams": {},
      "IfSteps": [
        {
          "StepRunnerKey": "sys:repeat",
          "InputParams": {
            "count": {
              "VarKey": null,
              "Value": "-1"
            },
            "stopCondition": {
              "VarKey": null,
              "Value": ""
            },
            "startIndex": {
              "VarKey": null,
              "Value": "0"
            },
            "repeatDelayMs": {
              "VarKey": null,
              "Value": "1"
            }
          },
          "OutputParams": {
            "count": null
          },
          "IfSteps": [
            {
              "StepRunnerKey": "sys:custompanel",
              "InputParams": {
                "operation": {
                  "VarKey": null,
                  "Value": "show_fixed_panel_wait_close"
                },
                "operationData": {
                  "VarKey": "list",
                  "Value": null
                },
                "defaultOperation": {
                  "VarKey": null,
                  "Value": ""
                },
                "spacingStr": {
                  "VarKey": null,
                  "Value": "2"
                },
                "buttonPadding": {
                  "VarKey": null,
                  "Value": "5,5"
                },
                "columnCount": {
                  "VarKey": null,
                  "Value": "2"
                },
                "columnWidth": {
                  "VarKey": null,
                  "Value": "0"
                },
                "groupMode": {
                  "VarKey": null,
                  "Value": "columns"
                },
                "selectGroup": {
                  "VarKey": null,
                  "Value": ""
                },
                "title": {
                  "VarKey": null,
                  "Value": "脚本"
                },
                "windowId": {
                  "VarKey": null,
                  "Value": ""
                },
                "stopIfFail": {
                  "VarKey": null,
                  "Value": "1"
                },
                "buttonContextMenuData": {
                  "VarKey": null,
                  "Value": ""
                },
                "winLocation": {
                  "VarKey": null,
                  "Value": "CenterScreen"
                },
                "winSize": {
                  "VarKey": null,
                  "Value": "200,280"
                },
                "saveState": {
                  "VarKey": null,
                  "Value": "1"
                },
                "horzAlign": {
                  "VarKey": null,
                  "Value": "Center"
                },
                "bgColor": {
                  "VarKey": null,
                  "Value": "#FF535353"
                },
                "btnColor": {
                  "VarKey": null,
                  "Value": "#FF535353"
                },
                "btnBorderColor": {
                  "VarKey": null,
                  "Value": "#FF424242"
                },
                "fontColor": {
                  "VarKey": null,
                  "Value": "#FFDDDDDD"
                },
                "fontsize": {
                  "VarKey": null,
                  "Value": "11"
                },
                "iconsize": {
                  "VarKey": null,
                  "Value": "50"
                },
                "contextMenuData": {
                  "VarKey": null,
                  "Value": ""
                },
                "bindProc": {
                  "VarKey": null,
                  "Value": ""
                },
                "autoCollapse": {
                  "VarKey": null,
                  "Value": "0"
                }
              },
              "OutputParams": {
                "isSuccess": null,
                "selectedItemData": "选中值",
                "selectedItem": null,
                "currentGroup": null,
                "buttonItemData": null,
                "buttonItem": null,
                "errMessage": null
              },
              "IfSteps": null,
              "ElseSteps": null,
              "Note": "",
              "Disabled": false,
              "Collapsed": false,
              "DelayMs": 0
            },
            {
              "StepRunnerKey": "sys:group",
              "InputParams": {
                "skipErr": {
                  "VarKey": null,
                  "Value": "0"
                },
                "skipWhenDebugging": {
                  "VarKey": null,
                  "Value": "0"
                },
                "useMultiThread": {
                  "VarKey": null,
                  "Value": "0"
                },
                "waitAny": {
                  "VarKey": null,
                  "Value": "0"
                }
              },
              "OutputParams": {
                "isSuccess": null,
                "errorMessage": null
              },
              "IfSteps": [
                {
                  "StepRunnerKey": "sys:getActiveProcessInfo",
                  "InputParams": {
                    "stopIfFail": {
                      "VarKey": null,
                      "Value": "1"
                    }
                  },
                  "OutputParams": {
                    "path": "path",
                    "procName": null,
                    "pid": null,
                    "isSuccess": null
                  },
                  "IfSteps": null,
                  "ElseSteps": null,
                  "Note": "",
                  "Disabled": false,
                  "Collapsed": false,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$$ {选中值} == 1"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:strReplace",
                      "InputParams": {
                        "type": {
                          "VarKey": null,
                          "Value": "single"
                        },
                        "input": {
                          "VarKey": "保存地址",
                          "Value": null
                        },
                        "old": {
                          "VarKey": null,
                          "Value": "\\"
                        },
                        "new": {
                          "VarKey": null,
                          "Value": "/"
                        },
                        "escapeOld": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "replaceEscapes": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "useRegex": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "ignoreCase": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "singleLine": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "multiLine": {
                          "VarKey": null,
                          "Value": "false"
                        }
                      },
                      "OutputParams": {
                        "output": "保存地址"
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    },
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Photoshop.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "$$\r\n// Save Selected Layers with Trim (Preserving Selection)  \r\n// This script saves all currently selected layers as separate files, trimming transparent pixels, and preserves the original layer selection  \r\n\r\n#target photoshop  \r\n\r\nfunction saveSelectedLayers() {  \r\n    if (app.documents.length === 0) {  \r\n        alert(\"No document open!\");  \r\n        return;  \r\n    }  \r\n\r\n    var doc = app.activeDocument;  \r\n    var originalSelection = getSelectedLayersIndexes();  \r\n    var selectedLayers = getSelectedLayers(doc);  \r\n\r\n    if (selectedLayers.length === 0) {  \r\n        alert(\"No layers selected!\");  \r\n        return;  \r\n    }  \r\n\r\n    // Set desktop as default save folder path\r\n    var defaultFolderPath = \"{保存地址}\" + \"/Output\";\r\n    var saveFolder = new Folder(defaultFolderPath);\r\n    if (!saveFolder.exists) {\r\n        saveFolder.create();\r\n    }\r\n\r\n    for (var i = 0; i < selectedLayers.length; i++) {  \r\n        var layer = selectedLayers[i];  \r\n        var fileName = layer.name.replace(/[:\\/\\\\*\\?\\\"\\<\\>\\|]/g, \"_\") + \".png\";  \r\n        var saveFile = new File(saveFolder + \"/\" + fileName);  \r\n\r\n        try {  \r\n            saveLayerAsPNG(doc, layer, saveFile);  \r\n        } catch (e) {  \r\n            alert(\"Error saving layer '\" + layer.name + \"': \" + e);  \r\n        }  \r\n    }  \r\n\r\n    // Restore original layer selection  \r\n    selectLayersByIndexes(originalSelection);  \r\n}  \r\n\r\nfunction getSelectedLayersIndexes() {  \r\n    var selectedLayers = new Array;  \r\n    var ref = new ActionReference();  \r\n    ref.putEnumerated(charIDToTypeID(\"Dcmn\"), charIDToTypeID(\"Ordn\"), charIDToTypeID(\"Trgt\"));  \r\n    var desc = executeActionGet(ref);  \r\n    if (desc.hasKey(stringIDToTypeID('targetLayers'))) {  \r\n        desc = desc.getList(stringIDToTypeID('targetLayers'));  \r\n        var c = desc.count;  \r\n        for (var i = 0; i < c; i++) {  \r\n            try {  \r\n                activeDocument.backgroundLayer;  \r\n                selectedLayers.push(desc.getReference(i).getIndex());  \r\n            } catch (e) {  \r\n                selectedLayers.push(desc.getReference(i).getIndex() + 1);  \r\n            }  \r\n        }  \r\n    } else {  \r\n        var ref = new ActionReference();  \r\n        ref.putProperty(charIDToTypeID(\"Prpr\"), charIDToTypeID(\"ItmI\"));  \r\n        ref.putEnumerated(charIDToTypeID(\"Lyr \"), charIDToTypeID(\"Ordn\"), charIDToTypeID(\"Trgt\"));  \r\n        try {  \r\n            activeDocument.backgroundLayer;  \r\n            selectedLayers.push(executeActionGet(ref).getInteger(charIDToTypeID(\"ItmI\")) - 1);  \r\n        } catch (e) {  \r\n            selectedLayers.push(executeActionGet(ref).getInteger(charIDToTypeID(\"ItmI\")));  \r\n        }  \r\n    }  \r\n    return selectedLayers;  \r\n}  \r\n\r\nfunction selectLayersByIndexes(indexes) {  \r\n    var desc = new ActionDescriptor();  \r\n    var ref = new ActionReference();  \r\n    for (var i = 0; i < indexes.length; i++) {  \r\n        ref.putIndex(charIDToTypeID(\"Lyr \"), indexes[i]);  \r\n    }  \r\n    desc.putReference(charIDToTypeID(\"null\"), ref);  \r\n    executeAction(charIDToTypeID(\"slct\"), desc, DialogModes.NO);  \r\n}  \r\n\r\nfunction getSelectedLayers(doc) {  \r\n    var selectedLayers = [];  \r\n    try {  \r\n        var idGrp = stringIDToTypeID(\"groupLayersEvent\");  \r\n        var descGrp = new ActionDescriptor();  \r\n        var refGrp = new ActionReference();  \r\n        refGrp.putEnumerated(charIDToTypeID(\"Lyr \"), charIDToTypeID(\"Ordn\"), charIDToTypeID(\"Trgt\"));  \r\n        descGrp.putReference(charIDToTypeID(\"null\"), refGrp);  \r\n        executeAction(idGrp, descGrp, DialogModes.NO);  \r\n        var resultLayers = app.activeDocument.activeLayer.layers;  \r\n        for (var i = 0; i < resultLayers.length; i++) {  \r\n            selectedLayers.push(resultLayers[i]);  \r\n        }  \r\n        // Undo the grouping  \r\n        app.activeDocument.activeHistoryState = app.activeDocument.historyStates[app.activeDocument.historyStates.length-2];  \r\n    } catch (e) {  \r\n        // If no multiple layers are selected, return the active layer  \r\n        selectedLayers.push(doc.activeLayer);  \r\n    }  \r\n    return selectedLayers;  \r\n}  \r\n\r\nfunction saveLayerAsPNG(doc, layer, file) {  \r\n    // Store current layer visibility  \r\n    var layerVisibility = [];  \r\n    for (var i = 0; i < doc.layers.length; i++) {  \r\n        layerVisibility.push(doc.layers[i].visible);  \r\n        doc.layers[i].visible = false;  \r\n    }  \r\n\r\n    // Make the target layer visible  \r\n    layer.visible = true;  \r\n\r\n    // Trim transparent pixels  \r\n    doc.trim(TrimType.TRANSPARENT);  \r\n\r\n    // Save the layer with compression settings\r\n    var pngSaveOptions = new PNGSaveOptions();  \r\n    pngSaveOptions.interlaced = false;  \r\n    pngSaveOptions.compression = {jpg质量}; // 设置PNG压缩级别 (0-9)\r\n    doc.saveAs(file, pngSaveOptions, true, Extension.LOWERCASE);  \r\n\r\n    // Restore document to its original state  \r\n    doc.activeHistoryState = doc.historyStates[doc.historyStates.length-2];  \r\n\r\n    // Restore layer visibility  \r\n    for (var i = 0; i < doc.layers.length; i++) {  \r\n        doc.layers[i].visible = layerVisibility[i];  \r\n    }  \r\n}  \r\n\r\ntry {  \r\n    saveSelectedLayers();  \r\n} catch (e) {  \r\n    alert(\"An error occurred: \" + e);  \r\n}"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "导出层",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 2"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Photoshop.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "//  photoshopscripts.wordpress.com\r\n\r\n////////////////////////////////////\r\n//       Split to Layers 1.0      //\r\n//       2012, David Jensen       //\r\n//                                //\r\n//         With help from         //\r\n//   pfaffenbichler and xbytor    //\r\n//        at ps-scripts.com       //\r\n////////////////////////////////////\r\n\r\n#target photoshop\r\n\r\n//更改以下5个值中的任何一个以自定义脚本的默认选项:\r\n\r\nvar showOptionsDialog = true; //设置为false以禁用对用户的提示.\r\nvar tolerance = 0;            // 将被忽略的透明像素的最大间隙。还设置默认值\r\nvar confirmThreshold = 20;    // 如果脚本要生成大量层，请提示用户确认这是正常的\r\nvar suffix = \"_\";           // 将此添加到新层的层名称中。设置为“”，不添加任何内容。\r\nvar addCount = true;          // 在每个新层的末尾添加一个数字\r\n\r\n\r\n///////////////////////////////////////\r\n///////////////////////////////////////\r\n///////////////////////////////////////\r\n///////////////////////////////////////\r\n///////////////////////////////////////\r\nvar layerNamePreview=activeDocument.activeLayer.name + suffix;\r\nif (addCount === true){\r\n    layerNamePreview += \"1\";\r\n}\r\n\r\nvar originalRulerUnits = app.preferences.rulerUnits;\r\napp.preferences.rulerUnits = Units.POINTS;\r\n\r\nbounds = activeDocument.activeLayer.bounds\r\nvar emptyLayer=false;\r\nif (Number(bounds[0]) == 0 && Number(bounds[1]) == 0 && Number(bounds[2]) == 0 && Number(bounds[3]) == 0) {emptyLayer = true};\r\n\r\ntry{\r\n    if (activeDocument.activeLayer.kind != undefined && activeDocument.activeLayer.isBackgroundLayer == false && emptyLayer == false){\r\n        activeDocument.suspendHistory(\"Separate\", \"main()\");\r\n    }else{\r\n        alert( \"没有选择支持的图层类型.\");\r\n    }\r\n}catch(err){\r\n    alert(err)\r\n}\r\n\r\napp.preferences.rulerUnits = originalRulerUnits;\r\n\r\nfunction main() {\r\n        \r\n    var ok=createDialog();\r\n    if (ok===2){\r\n        activeDocument.selection.deselect()\r\n        return false;\r\n    }\r\n    baseLayer=activeDocument.activeLayer;\r\n    activeDocument.quickMaskMode = false;\r\n    activeDocument.selection.deselect()\r\n    var layerName = activeDocument.activeLayer.name\r\n    //如果无法进行选择，请停止运行脚本\r\n  \r\n \r\n    var idCpTL = charIDToTypeID(\"CpTL\");\r\n    executeAction(idCpTL, undefined, DialogModes.NO);\r\n    \r\n    activeDocument.activeLayer.rasterize(RasterizeType.ENTIRELAYER)\r\n    try{\r\n        var idDlt = charIDToTypeID( \"Dlt \" );\r\n        var desc120 = new ActionDescriptor();\r\n        var idnull = charIDToTypeID( \"null\" );\r\n        var ref112 = new ActionReference();\r\n        var idChnl = charIDToTypeID( \"Chnl\" );\r\n        var idChnl = charIDToTypeID( \"Chnl\" );\r\n        var idMsk = charIDToTypeID( \"Msk \" );\r\n        ref112.putEnumerated( idChnl, idChnl, idMsk );\r\n        desc120.putReference( idnull, ref112 );\r\n        var idAply = charIDToTypeID( \"Aply\" );\r\n        desc120.putBoolean( idAply, true );\r\n        executeAction( idDlt, desc120, DialogModes.NO );\r\n    }catch(e){}\r\n    \r\n    \r\n    \r\n    activeDocument.activeLayer.name = layerName\r\n\r\n    baseLayer=activeDocument.activeLayer\r\n\r\n\r\n    \r\n    makeSelection()\r\n\r\n    var idMk = charIDToTypeID(\"Mk  \");\r\n    var desc642 = new ActionDescriptor();\r\n    var idNw = charIDToTypeID(\"Nw  \");\r\n    var idDcmn = charIDToTypeID(\"Dcmn\");\r\n    desc642.putClass(idNw, idDcmn);\r\n    var idUsng = charIDToTypeID(\"Usng\");\r\n    var ref535 = new ActionReference();\r\n    var idChnl = charIDToTypeID(\"Chnl\");\r\n    var idOrdn = charIDToTypeID(\"Ordn\");\r\n    var idTrgt = charIDToTypeID(\"Trgt\");\r\n    ref535.putEnumerated(idChnl, idOrdn, idTrgt);\r\n    desc642.putReference(idUsng, ref535);\r\n    executeAction(idMk, desc642, DialogModes.NO);\r\n\r\n    newDoc = activeDocument\r\n    // =======================================================\r\n    activeDocument.resizeImage(\"200%\", \"200%\", undefined, ResampleMethod.NEARESTNEIGHBOR)\r\n\r\n    // =======================================================\r\n    var idsetd = charIDToTypeID(\"setd\");\r\n    var desc934 = new ActionDescriptor();\r\n    var idnull = charIDToTypeID(\"null\");\r\n    var ref535 = new ActionReference();\r\n    var idChnl = charIDToTypeID(\"Chnl\");\r\n    var idfsel = charIDToTypeID(\"fsel\");\r\n    ref535.putProperty(idChnl, idfsel);\r\n    desc934.putReference(idnull, ref535);\r\n    var idT = charIDToTypeID(\"T   \");\r\n    var ref536 = new ActionReference();\r\n    var idChnl = charIDToTypeID(\"Chnl\");\r\n    var idOrdn = charIDToTypeID(\"Ordn\");\r\n    var idTrgt = charIDToTypeID(\"Trgt\");\r\n    ref536.putEnumerated(idChnl, idOrdn, idTrgt);\r\n    desc934.putReference(idT, ref536);\r\n    executeAction(idsetd, desc934, DialogModes.NO);\r\n\r\n\r\n    var idMk = charIDToTypeID(\"Mk  \");\r\n    var desc403 = new ActionDescriptor();\r\n    var idnull = charIDToTypeID(\"null\");\r\n    var ref288 = new ActionReference();\r\n    var idPath = charIDToTypeID(\"Path\");\r\n    ref288.putClass(idPath);\r\n    desc403.putReference(idnull, ref288);\r\n    var idFrom = charIDToTypeID(\"From\");\r\n    var ref289 = new ActionReference();\r\n    var idcsel = charIDToTypeID(\"csel\");\r\n    var idfsel = charIDToTypeID(\"fsel\");\r\n    var idfsel = charIDToTypeID(\"fsel\");\r\n    ref289.putProperty(idcsel, idfsel);\r\n    desc403.putReference(idFrom, ref289);\r\n    var idTlrn = charIDToTypeID(\"Tlrn\");\r\n    var idPxl = charIDToTypeID(\"#Pxl\");\r\n    desc403.putUnitDouble(idTlrn, idPxl, 0.500000);\r\n    executeAction(idMk, desc403, DialogModes.NO);\r\n    \r\n    var subPathsLength = activeDocument.pathItems[0].subPathItems.length\r\n    \r\n    if (subPathsLength>confirmThreshold){\r\n        var answer = confirm(\"Up to \"+subPathsLength+ \" layers will be created. Would you like to continue?\",true)\r\n        if (answer === false){\r\n            newDoc.close(SaveOptions.DONOTSAVECHANGES);\r\n            activeDocument.quickMaskMode = false;\r\n            activeDocument.selection.deselect();\r\n            return 0;\r\n        }\r\n    \r\n    }\r\n\r\n    // =======================================================\r\n    activeDocument.resizeImage(\"50%\", \"50%\", undefined, ResampleMethod.NEARESTNEIGHBOR)\r\n\r\n    var pathInfo = collectPathInfoFromDesc(activeDocument, activeDocument.pathItems[activeDocument.pathItems.length - 1])\r\n    \r\n    // =======================================================\r\n    newDoc.close(SaveOptions.DONOTSAVECHANGES)\r\n\r\n    // =======================================================\r\n    activeDocument.quickMaskMode = false\r\n\r\n    // =======================================================\r\n    //制作频道\r\n    // =======================================================\r\n    var idMk = charIDToTypeID(\"Mk  \");\r\n    var desc6 = new ActionDescriptor();\r\n    var idNw = charIDToTypeID(\"Nw  \");\r\n    var desc7 = new ActionDescriptor();\r\n    var idNm = charIDToTypeID(\"Nm  \");\r\n    desc7.putString(idNm, \"ContiguityMask\");\r\n    var idClrI = charIDToTypeID(\"ClrI\");\r\n    var idMskI = charIDToTypeID(\"MskI\");\r\n    var idMskA = charIDToTypeID(\"MskA\");\r\n    desc7.putEnumerated(idClrI, idMskI, idMskA);\r\n    var idClr = charIDToTypeID(\"Clr \");\r\n    var desc8 = new ActionDescriptor();\r\n    var idRd = charIDToTypeID(\"Rd  \");\r\n    desc8.putDouble(idRd, 255.000000);\r\n    var idGrn = charIDToTypeID(\"Grn \");\r\n    desc8.putDouble(idGrn, 0.000000);\r\n    var idBl = charIDToTypeID(\"Bl  \");\r\n    desc8.putDouble(idBl, 0.000000);\r\n    var idRGBC = charIDToTypeID(\"RGBC\");\r\n    desc7.putObject(idClr, idRGBC, desc8);\r\n    var idOpct = charIDToTypeID(\"Opct\");\r\n    desc7.putInteger(idOpct, 50);\r\n    var idChnl = charIDToTypeID(\"Chnl\");\r\n    desc6.putObject(idNw, idChnl, desc7);\r\n    var idUsng = charIDToTypeID(\"Usng\");\r\n    var ref5 = new ActionReference();\r\n    var idChnl = charIDToTypeID(\"Chnl\");\r\n    var idfsel = charIDToTypeID(\"fsel\");\r\n    ref5.putProperty(idChnl, idfsel);\r\n    desc6.putReference(idUsng, ref5);\r\n    executeAction(idMk, desc6, DialogModes.NO);\r\n\r\n\r\n    var layerCount = 1\r\n    for (i = 0; i < subPathsLength; i++) {\r\n        //deselect\r\n        var idsetd = charIDToTypeID(\"setd\");\r\n        var desc279 = new ActionDescriptor();\r\n        var idnull = charIDToTypeID(\"null\");\r\n        var ref137 = new ActionReference();\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idfsel = charIDToTypeID(\"fsel\");\r\n        ref137.putProperty(idChnl, idfsel);\r\n        desc279.putReference(idnull, ref137);\r\n        var idT = charIDToTypeID(\"T   \");\r\n        var idOrdn = charIDToTypeID(\"Ordn\");\r\n        var idNone = charIDToTypeID(\"None\");\r\n        desc279.putEnumerated(idT, idOrdn, idNone);\r\n        executeAction(idsetd, desc279, DialogModes.NO);\r\n        ///select alpha channel\r\n        var idslct = charIDToTypeID(\"slct\");\r\n        var desc315 = new ActionDescriptor();\r\n        var idnull = charIDToTypeID(\"null\");\r\n        var ref175 = new ActionReference();\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        ref175.putName(idChnl, \"ContiguityMask\");\r\n        desc315.putReference(idnull, ref175);\r\n        executeAction(idslct, desc315, DialogModes.NO);\r\n        //use magic wand\r\n        var idsetd = charIDToTypeID(\"setd\");\r\n        var desc263 = new ActionDescriptor();\r\n        var idnull = charIDToTypeID(\"null\");\r\n        var ref123 = new ActionReference();\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idfsel = charIDToTypeID(\"fsel\");\r\n        ref123.putProperty(idChnl, idfsel);\r\n        desc263.putReference(idnull, ref123);\r\n        var idT = charIDToTypeID(\"T   \");\r\n        var desc264 = new ActionDescriptor();\r\n        var idHrzn = charIDToTypeID(\"Hrzn\");\r\n        var idRlt = charIDToTypeID(\"#Rlt\");\r\n        desc264.putUnitDouble(idHrzn, idRlt, pathInfo[i][0][0]);\r\n        var idVrtc = charIDToTypeID(\"Vrtc\");\r\n        var idRlt = charIDToTypeID(\"#Rlt\");\r\n\r\n        desc264.putUnitDouble(idVrtc, idRlt, pathInfo[i][0][1]);\r\n        var idPnt = charIDToTypeID(\"Pnt \");\r\n        desc263.putObject(idT, idPnt, desc264);\r\n        var idTlrn = charIDToTypeID(\"Tlrn\");\r\n        desc263.putInteger(idTlrn, 1);\r\n        executeAction(idsetd, desc263, DialogModes.NO);\r\n\r\n        var idslct = charIDToTypeID(\"slct\");\r\n        var desc346 = new ActionDescriptor();\r\n        var idnull = charIDToTypeID(\"null\");\r\n        var ref205 = new ActionReference();\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idRGB = charIDToTypeID(\"RGB \");\r\n        ref205.putEnumerated(idChnl, idChnl, idRGB);\r\n        desc346.putReference(idnull, ref205);\r\n        var idMkVs = charIDToTypeID(\"MkVs\");\r\n        desc346.putBoolean(idMkVs, false);\r\n        executeAction(idslct, desc346, DialogModes.NO);\r\n\r\n\r\n\r\n\r\n        try {\r\n            // =======================================================\r\n            var idCpTL = charIDToTypeID(\"CpTL\");\r\n            executeAction(idCpTL, undefined, DialogModes.NO);\r\n\r\n            try {\r\n                var idrasterizeLayer = stringIDToTypeID(\"rasterizeLayer\");\r\n                var desc924 = new ActionDescriptor();\r\n                var idnull = charIDToTypeID(\"null\");\r\n                var ref721 = new ActionReference();\r\n                var idLyr = charIDToTypeID(\"Lyr \");\r\n                var idOrdn = charIDToTypeID(\"Ordn\");\r\n                var idTrgt = charIDToTypeID(\"Trgt\");\r\n                ref721.putEnumerated(idLyr, idOrdn, idTrgt);\r\n                desc924.putReference(idnull, ref721);\r\n                var idWhat = charIDToTypeID(\"What\");\r\n                var idrasterizeItem = stringIDToTypeID(\"rasterizeItem\");\r\n                var idvectorMask = stringIDToTypeID(\"vectorMask\");\r\n                desc924.putEnumerated(idWhat, idrasterizeItem, idvectorMask);\r\n                executeAction(idrasterizeLayer, desc924, DialogModes.NO);\r\n            } catch (err) {}\r\n\r\n            try {\r\n                var idIntr = charIDToTypeID(\"Intr\");\r\n                var desc864 = new ActionDescriptor();\r\n                var idnull = charIDToTypeID(\"null\");\r\n                var ref658 = new ActionReference();\r\n                var idChnl = charIDToTypeID(\"Chnl\");\r\n                var idOrdn = charIDToTypeID(\"Ordn\");\r\n                var idTrgt = charIDToTypeID(\"Trgt\");\r\n                ref658.putEnumerated(idChnl, idOrdn, idTrgt);\r\n                desc864.putReference(idnull, ref658);\r\n                var idWith = charIDToTypeID(\"With\");\r\n                var ref659 = new ActionReference();\r\n                var idChnl = charIDToTypeID(\"Chnl\");\r\n                var idfsel = charIDToTypeID(\"fsel\");\r\n                ref659.putProperty(idChnl, idfsel);\r\n                desc864.putReference(idWith, ref659);\r\n                executeAction(idIntr, desc864, DialogModes.NO);\r\n\r\n                // =======================================================\r\n                var idDlt = charIDToTypeID(\"Dlt \");\r\n                var desc865 = new ActionDescriptor();\r\n                var idnull = charIDToTypeID(\"null\");\r\n                var ref660 = new ActionReference();\r\n                var idChnl = charIDToTypeID(\"Chnl\");\r\n                var idOrdn = charIDToTypeID(\"Ordn\");\r\n                var idTrgt = charIDToTypeID(\"Trgt\");\r\n                ref660.putEnumerated(idChnl, idOrdn, idTrgt);\r\n                desc865.putReference(idnull, ref660);\r\n                executeAction(idDlt, desc865, DialogModes.NO);\r\n\r\n                // =======================================================\r\n                var idMk = charIDToTypeID(\"Mk  \");\r\n                var desc866 = new ActionDescriptor();\r\n                var idNw = charIDToTypeID(\"Nw  \");\r\n                var idChnl = charIDToTypeID(\"Chnl\");\r\n                desc866.putClass(idNw, idChnl);\r\n                var idAt = charIDToTypeID(\"At  \");\r\n                var ref661 = new ActionReference();\r\n                var idChnl = charIDToTypeID(\"Chnl\");\r\n                var idChnl = charIDToTypeID(\"Chnl\");\r\n                var idMsk = charIDToTypeID(\"Msk \");\r\n                ref661.putEnumerated(idChnl, idChnl, idMsk);\r\n                desc866.putReference(idAt, ref661);\r\n                var idUsng = charIDToTypeID(\"Usng\");\r\n                var idUsrM = charIDToTypeID(\"UsrM\");\r\n                var idRvlS = charIDToTypeID(\"RvlS\");\r\n                desc866.putEnumerated(idUsng, idUsrM, idRvlS);\r\n                executeAction(idMk, desc866, DialogModes.NO);\r\n\r\n            } catch (err) {}\r\n            \r\n            var finalSuffix=suffix;\r\n            if (addCount===true)finalSuffix += layerCount;\r\n\r\n\r\n            activeDocument.activeLayer.name = layerName + finalSuffix;\r\n            layerCount++;\r\n            \r\n            \r\n            activeDocument.activeLayer=baseLayer;\r\n        } catch (e) {}\r\n    }\r\n    var idsetd = charIDToTypeID(\"setd\");\r\n    var desc1045 = new ActionDescriptor();\r\n    var idnull = charIDToTypeID(\"null\");\r\n    var ref578 = new ActionReference();\r\n    var idChnl = charIDToTypeID(\"Chnl\");\r\n    var idfsel = charIDToTypeID(\"fsel\");\r\n    ref578.putProperty(idChnl, idfsel);\r\n    desc1045.putReference(idnull, ref578);\r\n    var idT = charIDToTypeID(\"T   \");\r\n    var idOrdn = charIDToTypeID(\"Ordn\");\r\n    var idNone = charIDToTypeID(\"None\");\r\n    desc1045.putEnumerated(idT, idOrdn, idNone);\r\n    executeAction(idsetd, desc1045, DialogModes.NO);\r\n\r\n    // =======================================================\r\n    var idDlt = charIDToTypeID(\"Dlt \");\r\n    var desc694 = new ActionDescriptor();\r\n    var idnull = charIDToTypeID(\"null\");\r\n    var ref323 = new ActionReference();\r\n    var idChnl = charIDToTypeID(\"Chnl\");\r\n    ref323.putName(idChnl, \"ContiguityMask\");\r\n    desc694.putReference(idnull, ref323);\r\n    executeAction(idDlt, desc694, DialogModes.NO);\r\n\r\n    \r\n    activeDocument.activeLayer.remove();\r\n    \r\n\r\n\r\n    var idHd = charIDToTypeID(\"Hd  \");\r\n    var desc736 = new ActionDescriptor();\r\n    var idnull = charIDToTypeID(\"null\");\r\n    var list22 = new ActionList();\r\n    var ref541 = new ActionReference();\r\n    var idLyr = charIDToTypeID(\"Lyr \");\r\n    var idOrdn = charIDToTypeID(\"Ordn\");\r\n    var idTrgt = charIDToTypeID(\"Trgt\");\r\n    ref541.putEnumerated(idLyr, idOrdn, idTrgt);\r\n    list22.putReference(ref541);\r\n    desc736.putList(idnull, list22);\r\n    executeAction(idHd, desc736, DialogModes.NO);\r\n\r\n}\r\n\r\n//   pfaffenbichler and xbytor    //\r\n//        at ps-scripts.com       //\r\n//      created this function     //\r\nfunction collectPathInfoFromDesc(myDocument, thePath) {\r\n    var myDocument = app.activeDocument;\r\n\r\n    // 基于Xbytor的stdlib函数;\r\n    var ref = new ActionReference();\r\n    for (var l = 0; l < myDocument.pathItems.length; l++) {\r\n        var thisPath = myDocument.pathItems[l];\r\n        if (thisPath == thePath && thisPath.name == \"Work Path\") {\r\n            ref.putProperty(cTID(\"Path\"), cTID(\"WrPt\"));\r\n        };\r\n        if (thisPath == thePath && thisPath.name != \"Work Path\" && thisPath.kind != PathKind.VECTORMASK) {\r\n            ref.putIndex(cTID(\"Path\"), l + 1);\r\n        };\r\n        if (thisPath == thePath && thisPath.kind == PathKind.VECTORMASK) {\r\n            var idPath = charIDToTypeID(\"Path\");\r\n            var idPath = charIDToTypeID(\"Path\");\r\n            var idvectorMask = stringIDToTypeID(\"vectorMask\");\r\n            ref.putEnumerated(idPath, idPath, idvectorMask);\r\n        };\r\n    };\r\n    var desc = app.executeActionGet(ref);\r\n    var pname = desc.getString(cTID('PthN'));\r\n    // 创建新数组;\r\n    var theArray = new Array;\r\n    var pathComponents = desc.getObjectValue(cTID(\"PthC\")).getList(sTID('pathComponents'));\r\n    // 对于子路径;\r\n    for (var m = 0; m < pathComponents.count; m++) {\r\n        var listKey = pathComponents.getObjectValue(m).getList(sTID(\"subpathListKey\"));\r\n        // 子路径计数;\r\n        for (var n = 0; n < listKey.count; n++) {\r\n            var points = listKey.getObjectValue(n).getList(sTID('points'));\r\n            // 获得第一点;\r\n            var anchorObj = points.getObjectValue(0).getObjectValue(sTID(\"anchor\"));\r\n            var anchor = [anchorObj.getUnitDoubleValue(sTID('horizontal')), anchorObj.getUnitDoubleValue(sTID('vertical'))];\r\n            var thisPoint = [anchor];\r\n            theArray.push(thisPoint);\r\n        };\r\n    };\r\n    // by xbytor, thanks to him;\r\n\r\n\r\n    function cTID(s) {\r\n        return cTID[s] || cTID[s] = app.charIDToTypeID(s);\r\n    };\r\n\r\n    function sTID(s) {\r\n        return sTID[s] || sTID[s] = app.stringIDToTypeID(s);\r\n    };\r\n    // 重置;\r\n    return theArray;\r\n};\r\n\r\n\r\nfunction makePreviewSelection(){\r\n    makeSelection()    \r\n    app.refresh()\r\n    activeDocument.quickMaskMode = false;\r\n}\r\n\r\nfunction makeSelection(){\r\n    try{\r\n    \r\n        var idsetd = charIDToTypeID(\"setd\");\r\n        var desc922 = new ActionDescriptor();\r\n        var idnull = charIDToTypeID(\"null\");\r\n        var ref529 = new ActionReference();\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idfsel = charIDToTypeID(\"fsel\");\r\n        ref529.putProperty(idChnl, idfsel);\r\n        desc922.putReference(idnull, ref529);\r\n        var idT = charIDToTypeID(\"T   \");\r\n        var ref530 = new ActionReference();\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idTrsp = charIDToTypeID(\"Trsp\");\r\n        ref530.putEnumerated(idChnl, idChnl, idTrsp);\r\n        desc922.putReference(idT, ref530);\r\n        executeAction(idsetd, desc922, DialogModes.NO);\r\n\r\n    } catch (err) {\r\n        return false;\r\n    }\r\n\r\n\r\n    try {\r\n        var idIntr = charIDToTypeID(\"Intr\");\r\n        var desc846 = new ActionDescriptor();\r\n        var idnull = charIDToTypeID(\"null\");\r\n        var ref639 = new ActionReference();\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idMsk = charIDToTypeID(\"Msk \");\r\n        ref639.putEnumerated(idChnl, idChnl, idMsk);\r\n        desc846.putReference(idnull, ref639);\r\n        var idWith = charIDToTypeID(\"With\");\r\n        var ref640 = new ActionReference();\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idfsel = charIDToTypeID(\"fsel\");\r\n        ref640.putProperty(idChnl, idfsel);\r\n        desc846.putReference(idWith, ref640);\r\n        executeAction(idIntr, desc846, DialogModes.NO);\r\n\r\n\r\n    } catch (err) {}\r\n\r\n    try {\r\n        // =======================================================\r\n        var idIntW = charIDToTypeID(\"IntW\");\r\n        var desc787 = new ActionDescriptor();\r\n        var idnull = charIDToTypeID(\"null\");\r\n        var ref572 = new ActionReference();\r\n        var idChnl = charIDToTypeID(\"Chnl\");\r\n        var idfsel = charIDToTypeID(\"fsel\");\r\n        ref572.putProperty(idChnl, idfsel);\r\n        desc787.putReference(idnull, ref572);\r\n        var idT = charIDToTypeID(\"T   \");\r\n        var ref573 = new ActionReference();\r\n        var idPath = charIDToTypeID(\"Path\");\r\n        var idPath = charIDToTypeID(\"Path\");\r\n        var idvectorMask = stringIDToTypeID(\"vectorMask\");\r\n        ref573.putEnumerated(idPath, idPath, idvectorMask);\r\n        var idLyr = charIDToTypeID(\"Lyr \");\r\n        var idOrdn = charIDToTypeID(\"Ordn\");\r\n        var idTrgt = charIDToTypeID(\"Trgt\");\r\n        ref573.putEnumerated(idLyr, idOrdn, idTrgt);\r\n        desc787.putReference(idT, ref573);\r\n        var idVrsn = charIDToTypeID(\"Vrsn\");\r\n        desc787.putInteger(idVrsn, 1);\r\n        var idvectorMaskParams = stringIDToTypeID(\"vectorMaskParams\");\r\n        desc787.putBoolean(idvectorMaskParams, true);\r\n        executeAction(idIntW, desc787, DialogModes.NO);\r\n    } catch (err) {}\r\n\r\n\r\n\r\n    if (tolerance >= 2) {\r\n\r\n        activeDocument.selection.expand(Math.floor(tolerance / 2))\r\n\r\n    }\r\n\r\n\r\n    activeDocument.quickMaskMode = true;\r\n\r\n\r\n    var idThrs = charIDToTypeID(\"Thrs\");\r\n    var desc479 = new ActionDescriptor();\r\n    var idLvl = charIDToTypeID(\"Lvl \");\r\n    desc479.putInteger(idLvl, 1);\r\n    executeAction(idThrs, desc479, DialogModes.NO);\r\n\r\n\r\n\r\n    if (tolerance % 2 == 1) {\r\n\r\n        var idMtnB = charIDToTypeID(\"MtnB\");\r\n        var desc213 = new ActionDescriptor();\r\n        var idAngl = charIDToTypeID(\"Angl\");\r\n        desc213.putInteger(idAngl, 0);\r\n        var idDstn = charIDToTypeID(\"Dstn\");\r\n        var idPxl = charIDToTypeID(\"#Pxl\");\r\n        desc213.putUnitDouble(idDstn, idPxl, 1.000000);\r\n        executeAction(idMtnB, desc213, DialogModes.NO);\r\n\r\n        // =======================================================\r\n        var idMtnB = charIDToTypeID(\"MtnB\");\r\n        var desc214 = new ActionDescriptor();\r\n        var idAngl = charIDToTypeID(\"Angl\");\r\n        desc214.putInteger(idAngl, 90);\r\n        var idDstn = charIDToTypeID(\"Dstn\");\r\n        var idPxl = charIDToTypeID(\"#Pxl\");\r\n        desc214.putUnitDouble(idDstn, idPxl, 1.000000);\r\n        executeAction(idMtnB, desc214, DialogModes.NO);\r\n\r\n\r\n        // =======================================================\r\n        var idThrs = charIDToTypeID(\"Thrs\");\r\n        var desc215 = new ActionDescriptor();\r\n        var idLvl = charIDToTypeID(\"Lvl \");\r\n        desc215.putInteger(idLvl, 1);\r\n        executeAction(idThrs, desc215, DialogModes.NO);\r\n    }\r\n}   \r\n\r\nfunction createDialog(){\r\n        \r\n    var dlg = new Window('dialog', '图层分离器');\r\n    dlg.alignChildren ='left';\r\n\r\n    dlg.gap = dlg.add('group')\r\n    dlg.gap.orientation= 'row';\r\n    dlg.gap.txt=dlg.gap.add('statictext', undefined,'间隙大于时拆分');\r\n    dlg.gap.input=dlg.gap.add('edittext', undefined,tolerance);\r\n        dlg.gap.input.preferredSize = [20,20];\r\n    dlg.gap.txt2=dlg.gap.add('statictext', undefined,'像素');\r\n    dlg.gap.btnPreview= dlg.gap.add('button', undefined,'预览');\r\n        dlg.gap.btnPreview.preferredSize = [55,20]\r\n    \r\n    dlg.naming = dlg.add('panel',undefined,'图层命名') \r\n    dlg.naming.alignChildren ='left';\r\n        dlg.naming.suffix = dlg.naming.add('group')\r\n        dlg.naming.suffix.orientation= 'row';\r\n        dlg.naming.suffix.txt=dlg.naming.suffix.add('statictext', undefined,'后缀:');\r\n        dlg.naming.suffix.input=dlg.naming.suffix.add('edittext', undefined,suffix);\r\n            dlg.naming.suffix.input.preferredSize = [60,20];\r\n\r\n        dlg.naming.suffix.chkbox = dlg.naming.suffix.add('checkbox', undefined, '添加数字')\r\n            dlg.naming.suffix.chkbox.value=addCount;\r\n        \r\n        dlg.naming.txtPreview = dlg.naming.add('statictext', undefined, layerNamePreview)\r\n            dlg.naming.txtPreview.preferredSize = [200,20];\r\n        \r\n    dlg.btnPnl= dlg.add('group');\r\n    dlg.btnPnl.alignment ='right';\r\n    dlg.btnPnl.okBtn = dlg.btnPnl.add('button', undefined, '确定', {name:'ok'});\r\n        dlg.btnPnl.okBtn.active=true;\r\n    dlg.btnPnl.cancelBtn = dlg.btnPnl.add('button', undefined, '取消', {name:'cancel'});\r\n      \r\n    dlg.naming.suffix.input.onChanging= function(){\r\n        layerNamePreview=activeDocument.activeLayer.name + dlg.naming.suffix.input.text\r\n        if (dlg.naming.suffix.chkbox.value === true){\r\n            layerNamePreview += \"1\"\r\n        }\r\n        dlg.naming.txtPreview.text =layerNamePreview\r\n    }\r\n    dlg.naming.suffix.chkbox.onClick = function(){\r\n        layerNamePreview=activeDocument.activeLayer.name + dlg.naming.suffix.input.text\r\n        if (dlg.naming.suffix.chkbox.value === true){\r\n            layerNamePreview += \"1\"\r\n        }\r\n        dlg.naming.txtPreview.text = layerNamePreview;\r\n    }\r\n\r\n    \r\n        \r\n    \r\n    dlg.gap.input.onChanging = function() {\r\n        if (parseInt(dlg.gap.input.text) == 1){\r\n            dlg.gap.txt2.text = '像素'\r\n        }else{\r\n            dlg.gap.txt2.text = '像素'\r\n        }\r\n        tolerance = parseInt (dlg.gap.input.text)\r\n    }\r\n\r\n    dlg.gap.btnPreview.onClick = function() {\r\n        makePreviewSelection()   \r\n    }\r\n    \r\n    x=dlg.show(); \r\n    \r\n    tolerance = parseInt (dlg.gap.input.text)\r\n    suffix = dlg.naming.suffix.input.text\r\n    addCount=dlg.naming.suffix.chkbox.value\r\n    \r\n    return x;\r\n}\r\n"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "分离图层",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 3"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Photoshop.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "\r\n/*\r\n<javascriptresource>\r\n<name>[M] Delete all empty layers faster v1.1</name>\r\n<enableinfo>true</enableinfo>\r\n<category>Magic</category>\r\n</javascriptresource>\r\n*/\r\n\r\n/* \r\n    Version History:\r\n    1.1: (30. 4. 2017)\r\n    - removed JAM \"framework\"\r\n    - big code cleaning\r\n    - better performance. Up to 9× faster than version 1.0\r\n    - keeps selected layers\r\n    - improved compatibility - works with CS6 and higher\r\n    - fixed layers and groups counter\r\n    - progressbar can now show deleting progress\r\n    - fixed - if clipped layers was attached to empty locked layer then visibility was turned off. (script shouldn't remove locked layers)\r\n\r\n    1.0: (19. 5. 2016)\r\n    - Initial release.\r\n    \r\n*/\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// Do not look down here. If you try to understand my code, you will waste a lot of time. \r\n// This code is optimized for performance with low level AM code and no recursion.\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n/*\r\nTROUBLE SHOOTING:\r\n    - deleting layers according layerID may not work properly if they are not sorted by layerIndex\r\n    \r\nTODO:\r\n    -\r\n*/\r\n\r\n#target Photoshop\r\napp.bringToFront();\r\n\r\n//$.level = 1;\r\n\r\nvar psVersion=app.version.split('.')[0];\r\ncTID = function(s) { return cTID[s] || (cTID[s] = charIDToTypeID(s)); };\r\nsTID = function(s) { return stringIDToTypeID(s); }; \r\n\r\n// caching precalculated typeID numbers for saving a bit miliseconds\r\nvar TID = {\r\n    idPrpr: charIDToTypeID( \"Prpr\" ),\r\n    idBounds: stringIDToTypeID( \"bounds\" ),\r\n    idLyr: charIDToTypeID( \"Lyr \" ),\r\n    top: stringIDToTypeID('top'),\r\n    bottom: stringIDToTypeID('bottom'),\r\n    layerLocking: stringIDToTypeID( \"layerLocking\" ),\r\n    protectAll: stringIDToTypeID('protectAll'),\r\n    layerID: stringIDToTypeID( \"layerID\" ),\r\n    group: stringIDToTypeID( \"group\" ),\r\n    layerSection: stringIDToTypeID( \"layerSection\" ),\r\n    textKey: stringIDToTypeID( \"textKey\" ),\r\n    idNull: charIDToTypeID( \"null\" ),\r\n    idDlt: charIDToTypeID( \"Dlt \" )\r\n    \r\n    \r\n}\r\n\r\napp.activeDocument.suspendHistory(\"Delete all empty layers faster\", \"initialize()\");\r\n\r\nfunction initialize(){\r\n    try {\r\n        if(app.documents.length < 1){\r\n            alert(\"You must have a document open.\");\r\n            return;\r\n        }\r\n        main();\r\n        \r\n    } catch(e) {\r\n        alert(\"Deleting layers failed. \"+e);\r\n    \treturn 'cancel';\r\n    }\r\n}\r\n\r\nfunction main() {\r\n    \r\n    var layerCount = getLayersCount();\r\n    \r\n    function getLayersCount(){\r\n        var ref = new ActionReference(); \r\n        ref.putProperty(charIDToTypeID( \"Prpr\" ), stringIDToTypeID(\"numberOfLayers\"));\r\n        ref.putEnumerated( charIDToTypeID(\"Dcmn\"), charIDToTypeID(\"Ordn\"), charIDToTypeID(\"Trgt\") );  \r\n        var desc = executeActionGet(ref); \r\n        var numberOfLayers = desc.getDouble(stringIDToTypeID (\"numberOfLayers\"));\r\n        return numberOfLayers;\r\n    }\r\n    if(layerCount <= 1){\r\n        alert(\"The document must have more layers.\");\r\n        return;\r\n    }\r\n    var deleteList = [];\r\n    var hideList = [];\r\n    var tr = [];\r\n    var maximalDepth=0;\r\n    var regularLayersCount=0;\r\n    var groupLayersCount=0; \r\n    var removeRegularLayersCount=0;\r\n    var removeGroupLayersCount=0;\r\n    \r\n    if(psVersion < 16){\r\n        analyze();\r\n    }else{\r\n        app.doProgress(\"Layers scanning...\",\"analyze()\");\r\n    }\r\n    \r\n    function analyze(){\r\n        for (var layerIndex = layerCount, stepsInside=0; layerIndex > 0; layerIndex--){ // stepsInside = how deep I am in folder structure\r\n            if(psVersion > 16){\r\n                var canContinue = app.doProgressSegmentTask(1,layerCount-layerIndex,layerCount,\"segmentTask()\");\r\n                if(!canContinue) return;\r\n            }else{\r\n                segmentTask();\r\n            }\r\n        \r\n            function segmentTask(){\r\n                var nullHeight = hasNullHeight(layerIndex);\r\n                var locked = isLocked (layerIndex);\r\n                var id = getLayerId(layerIndex);\r\n                var layerType = getLayerType(layerIndex);\r\n                var isClipped = getIsClipped(layerIndex); // isClipped = cliped layer\r\n                var isTextLayerEmpty = hasEmptyTextContent(layerIndex);\r\n                var shouldRemove;\r\n                var depth;\r\n                \r\n                //regular layer\r\n                if(layerType=='item'){\r\n                    regularLayersCount++;\r\n                    depth = stepsInside+1;\r\n                    \r\n                    if((nullHeight || isTextLayerEmpty) && !locked){\r\n                        shouldRemove = true;\r\n                    }else{\r\n                        shouldRemove = false;\r\n                    }\r\n                }\r\n                //group end - closing (invisible) layer\r\n                else if(layerType=='end'){\r\n                    depth = stepsInside;\r\n                    shouldRemove = false;\r\n                    stepsInside--;\r\n                }\r\n                //group start - opening layer\r\n                else if(layerType=='start'){\r\n                   stepsInside++;\r\n                   groupLayersCount++;\r\n                   depth = stepsInside;\r\n                   shouldRemove = true;\r\n                }\r\n            \r\n                if(depth>maximalDepth){\r\n                    maximalDepth = depth;\r\n                }\r\n            \r\n                var layerInfo = {\r\n                    depth: depth,\r\n                    layerType: layerType,\r\n                    itemIndex: layerIndex,\r\n                    itemID: id,\r\n                    remove: shouldRemove,\r\n                    locked: locked,\r\n                    isClipped: isClipped\r\n                }\r\n            \r\n                tr.push (layerInfo);\r\n            }\r\n        }\r\n    }\r\n    \r\n    treatLockedLayers();\r\n    addItemsToDeleteList();\r\n    \r\n    if (deleteList && deleteList.length) { // if there is something to delete\r\n        \r\n        // if layer which we want delete has cliping mask, then we hide clipping mask layers\r\n        if (hideList && hideList.length) {\r\n            hideMulti(hideList);\r\n        }\r\n        \r\n        deleteMulti(deleteList);\r\n        var bgCount = hasBackground ();\r\n        alert(\r\n            \"已移除 \"+removeRegularLayersCount+\" 个图层和 \"+removeGroupLayersCount+\" 个组.\\n\"+\r\n            \"现在的内容包含 \"+(regularLayersCount-removeRegularLayersCount+bgCount)+\" 个图层和 \"+(groupLayersCount-removeGroupLayersCount)+\" 个组.\\n\"+\r\n            \"(画板作为组)\"\r\n        );\r\n    }\r\n    else{\r\n        alert(\"没有可删除的空图层.\");\r\n    }\r\n    \r\n    \r\n    function treatLockedLayers(){\r\n        var max = maximalDepth;\r\n        var len = tr.length;\r\n        \r\n        for(var j = 1; j < max;max--){ // j = 1 protože úroven nula bude mít nastavené mazání z podmínek uvnitř cyklu a itemy mě nezajímají\r\n            for(var i = 0; i < len;i++){\r\n                var lyr = tr[i];\r\n                \r\n                if(lyr.depth === max){\r\n                    var parent = getParent(i);\r\n                    \r\n                    if (lyr.layerType==\"item\" && !lyr.remove){ // don't remove classic layer\r\n                        tr[parent].remove = false;\r\n                    }\r\n                    if(lyr.locked && lyr.layerType == \"start\"){ // locked parent group\r\n                        tr[parent].remove = false;\r\n                    }\r\n                    if(!lyr.remove && lyr.layerType == \"start\"){ // don't remove parent folder if children folder shouldn't be deleted\r\n                        tr[parent].remove = false;\r\n                    }\r\n                }\r\n            }  \r\n        }\r\n    \r\n        for(var j = 0; j < len; j++){ // browse once all layers and if parrent group is locked then it excludes all child from delete list\r\n            if (tr[j].locked && tr[j].layerType==\"start\"){\r\n                var initialDepthLevel = tr[j].depth;\r\n                j++;\r\n                while(initialDepthLevel < tr[j].depth){\r\n                    tr[j].remove = false;\r\n                    j++;\r\n                }\r\n            }\r\n        }\r\n    \r\n        for(var j = 0; j < len; j++){ // don't mess up cliping mask layers\r\n            var lyr = tr[j];\r\n            if (lyr.isClipped){\r\n                var tempList=[];\r\n                while(tr[j].isClipped){\r\n                    tempList.push(tr[j].itemIndex);           \r\n                    j++;\r\n                }\r\n                if(tr[j].remove && !tr[j].locked){\r\n                    hideList = hideList.concat(tempList);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function addItemsToDeleteList(){\r\n        for (var j = 0, len = tr.length;j<len;j++){\r\n            var lyr = tr[j];\r\n            if(lyr.remove && !lyr.locked){\r\n                deleteList.push(lyr.itemID);\r\n                \r\n                if(lyr.layerType==\"start\"){\r\n                    removeGroupLayersCount++;\r\n                }else{\r\n                    removeRegularLayersCount++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function getParent(p){ //pomocná funkce, která najde děcku rodiče\r\n        for (var i = p-1; i > 0; i--){\r\n            if(tr[i].depth==tr[p].depth-1){\r\n                return i;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction hasNullHeight(index){\r\n    var ref = new ActionReference();\r\n    ref.putProperty( TID.idPrpr, TID.idBounds );\r\n    ref.putIndex( TID.idLyr, index );\r\n    var desc = executeActionGet(ref);\r\n    var bounds = desc.getObjectValue(TID.idBounds);\r\n    var top = bounds.getDouble(TID.top);\r\n    var bottom = bounds.getDouble(TID.bottom);\r\n    \r\n    var nullHeight = top===bottom;\r\n    return nullHeight;\r\n}\r\n\r\nfunction isLocked(index){\r\n    var ref = new ActionReference();\r\n    ref.putProperty( TID.idPrpr, TID.layerLocking );\r\n    ref.putIndex( TID.idLyr, index );\r\n    var desc = executeActionGet(ref);\r\n    var descLocking = desc.getObjectValue(TID.layerLocking);\r\n    var locked = descLocking.getBoolean(TID.protectAll);\r\n    \r\n    return locked;\r\n}\r\n\r\nfunction getLayerId(index){\r\n    var ref = new ActionReference();\r\n    ref.putProperty( TID.idPrpr, TID.layerID );\r\n    ref.putIndex( TID.idLyr, index );\r\n    var desc = executeActionGet(ref);\r\n    var id = desc.getInteger(TID.layerID);\r\n    \r\n    return id;\r\n}\r\n\r\nfunction getIsClipped(index){\r\n    var ref = new ActionReference();\r\n    ref.putProperty( TID.idPrpr, TID.group );\r\n    ref.putIndex( TID.idLyr, index );\r\n    var desc = executeActionGet(ref);\r\n    var group = desc.getBoolean(TID.group);\r\n    \r\n    return group;\r\n}\r\n\r\nfunction getLayerType(index){\r\n    var ref = new ActionReference();\r\n    ref.putProperty( TID.idPrpr, TID.layerSection );\r\n    ref.putIndex( TID.idLyr, index );\r\n    var desc = executeActionGet(ref);\r\n    var type = desc.getEnumerationValue(TID.layerSection);\r\n    type = typeIDToStringID(type);\r\n    \r\n    switch(type){\r\n        case 'layerSectionEnd':\r\n            return 'end';\r\n        case 'layerSectionStart':\r\n            return 'start';\r\n        case 'layerSectionContent':\r\n            return 'item';\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\n\r\nfunction hasEmptyTextContent(index){\r\n var ref = new ActionReference();\r\n    ref.putProperty( TID.idPrpr, TID.textKey );\r\n    ref.putIndex( TID.idLyr, index );\r\n    var textKey = executeActionGet(ref);\r\n    \r\n    var isTextLayer = textKey.hasKey(TID.textKey);\r\n    if(!isTextLayer){\r\n        return false;\r\n    }\r\n    var textKey = textKey.getObjectValue(TID.textKey);\r\n    var contentString = textKey.getString(TID.textKey);\r\n    var result = contentString === \"\";\r\n    return result;   \r\n}\r\n\r\n\r\nfunction hideMulti(list){ \r\n    var idHd = charIDToTypeID( \"Hd  \" );\r\n        var desc19 = new ActionDescriptor();\r\n            var list9 = new ActionList();\r\n            for(var i = 0, len = list.length; i < len; i++){\r\n                var ref = new ActionReference();\r\n                ref.putIndex( TID.idLyr, list[i] );\r\n                list9.putReference( ref );\r\n            }\r\n        desc19.putList( TID.idNull, list9 );\r\n    executeAction( idHd, desc19, DialogModes.NO );\r\n}\r\n\r\n\r\nfunction deleteMulti (list){\r\n    function progressTask(){\r\n        for(var i = list.length-1, len = i; i >= 0; i--){\r\n            if(psVersion > 16){\r\n                if(i%5===0){ // fast updating takes time. Update text for every five layer\r\n                    app.changeProgressText(\"I am removing layers. Removed: \"+(len-i)+\" layers from \"+len+\"\");\r\n                }\r\n                var canContinue = app.doProgressSubTask(len-i,len,\"segmentTask(\"+list[i]+\")\");\r\n                if(!canContinue) return;\r\n            }else{\r\n                segmentTask(list[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    function segmentTask(id){\r\n        var desc13 = new ActionDescriptor();\r\n        var layerRef = new ActionReference();\r\n        layerRef.putIdentifier( TID.idLyr, id );\r\n        desc13.putReference( TID.idNull, layerRef );\r\n        executeAction( TID.idDlt, desc13, DialogModes.NO );\r\n    }\r\n\r\n    if(psVersion > 16){\r\n        app.doProgress(\"I am removing layers, give me a moment please.\",\"progressTask()\");\r\n    }else{\r\n        progressTask();\r\n    }\r\n}\r\n\r\nfunction hasBackground(){\r\n    try {\r\n        var dummy = app.activeDocument.backgroundLayer;\r\n        return 1;\r\n    }\r\n    catch(e){\r\n        return 0;\r\n    } \r\n}"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "删除空图层",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 4"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Photoshop.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "#target photoshop\r\napp.bringToFront();\r\n\r\nif (app.documents.length > 0) {\r\n    var doc = app.activeDocument;\r\n    var layersDeleted = 0;\r\n\r\n    // Function to recursively delete hidden layers\r\n    function deleteHiddenLayers(layerSet) {\r\n        for (var i = layerSet.layers.length - 1; i >= 0; i--) {\r\n            var layer = layerSet.layers[i];\r\n            if (layer.typename == \"ArtLayer\") {\r\n                if (layer.visible == false) {\r\n                    layer.remove();\r\n                    layersDeleted++;\r\n                }\r\n            } else if (layer.typename == \"LayerSet\") {\r\n                // Recursively delete hidden layers in layer sets (groups)\r\n                deleteHiddenLayers(layer);\r\n                // If the group is empty after deletion, delete the group\r\n                if (layer.layers.length == 0) {\r\n                    layer.remove();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Start from the top-level document layers\r\n    deleteHiddenLayers(doc);\r\n\r\n    if (layersDeleted > 0) {\r\n        alert(\"删除 \" + layersDeleted + \" 个隐藏图层.\");\r\n    } else {\r\n        alert(\"没有隐藏图层\");\r\n    }\r\n} else {\r\n    alert(\"没有打开的文档.\");\r\n}\r\n"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "删除隐藏图层",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 5"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Photoshop.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "var settings = {\r\n\t\tdeleteOriginalObject: true, // Smart object is hidden if false. \r\n\t\tscaleAllLayerEffects: true, // Only if smart object has another size than its content. Size must be proportional.\r\n\t\tresizeContent: true, // Scale extracted content. Only widht and height.\r\n\t\tpreserveSmartObjectProperties: true, // Creates group from content if true. Group will have vector mask, style, blending of smart object. Bitmap mask hides overleaping pixels.\r\n\t\tclearSmartObjectContent: true, // Delete hidden layers inside smart object\r\n\t\thidePixelsOutsideSoCanvas: true, // Option not fix pixels outside smart object canvas. Creates always bitmap mask on group. \"preserveSmartObjectProperties\" must be set to true\r\n\t\tdontGroupSOContent: false,\r\n\t\tstyleScaleSettings:{\r\n\t\t\tscaleStyle: true,\r\n\t\t\tscaleShapeStrokeWidth: true,\r\n\t\t\tscaleShapePatternFill: true,\r\n\t\t\tscaleShapeGradientFill: true, //only if gradient is not aligned with layer\r\n\t\t\tscaleShapeStrokeGradient: true, //only if gradient is not aligned with layer\r\n\t\t\tscaleShapeStrokePattern: true\r\n\t\t}\r\n\t}\r\n\r\n\r\n#target Photoshop\r\n\r\n\tCH = function(c) { return CH [c] || (CH [c] = charIDToTypeID(c)); };\r\n\tST = function(s) { return ST [s] || (ST [s] = stringIDToTypeID(s)); }; \r\n\tIDtoCH = function(id) {return typeIDToCharID(id);};\r\n\tIDtoST = function(id) {return typeIDToStringID(id);};\r\n\tCHtoST = function(c) {return IDtoST(CH(c));};\r\n\tSTtoCH = function(s) {return IDtoCH(ST(s));};\r\n\r\n\tfunction LxActionDescriptor(desc){\r\n\t\tthis.version = 1;\r\n\t\t\r\n\t\tif(desc){\r\n\t\t\tthis._desc = desc\r\n\t\t}else{\r\n\t\t\tthis._desc = new ActionDescriptor();\r\n\t\t}\r\n\r\n\t\t//check if I will need to update properties\r\n\t\tthis.count = this._desc.count;\r\n\t\tthis.typename = this._desc.typename;\r\n\t\tthis.clear = function (){this._desc.clear()};\r\n\t\tthis.erase = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tthis._desc.erase(key);\r\n\t\t};\r\n\t\tthis.fromStream = function (value){this._desc.fromStream(value)};\r\n\t\t\r\n\t\t// get data\r\n\t\tthis.getBoolean = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getBoolean(key);\r\n\t\t};\r\n\t\tthis.getClass = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getClass(key);\r\n\t\t};\r\n\t\tthis.getData = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getData(key);\r\n\t\t};\r\n\t\tthis.getDouble = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getDouble(key);\r\n\t\t};\r\n\t\tthis.getEnumerationType = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getEnumerationType(key);\r\n\t\t};\r\n\t\tthis.getEnumerationValue = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getEnumerationValue(key);\r\n\t\t};\r\n\t\tthis.getInteger = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getInteger(key);\r\n\t\t};\r\n\t\tthis.getLargeInteger = function (key){\r\n\t\t\treturn this._desc.getLargeInteger(key);\r\n\t\t};\r\n\t\tthis.getList = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tvar result = new LxActionList(this._desc.getList(key));\r\n\t\t\treturn result;\r\n\t\t};\r\n\t\tthis.getObjectType = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getObjectType(key);\r\n\t\t};\r\n\t\tthis.getObjectValue = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getObjectValue(key);\r\n\t\t};\r\n\t\tthis.getPath = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getPath(key);\r\n\t\t};\r\n\t\tthis.getReference = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getReference(key);\r\n\t\t};\r\n\t\tthis.getString = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getString(key);\r\n\t\t};\r\n\t\tthis.getType = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getType(key);\r\n\t\t};\r\n\t\tthis.getUnitDoubleType = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getUnitDoubleType(key);\r\n\t\t};\r\n\t\tthis.getUnitDoubleValue = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.getUnitDoubleValue(key);\r\n\t\t};\r\n\t\t// end of get data\r\n\r\n\t\tthis.hasKey = function (key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.hasKey(key);\r\n\t\t};\r\n\t\tthis.isEqual = function (desc){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\treturn this._desc.isEqual(desc);\r\n\t\t};\r\n\r\n\t\t//// put data\r\n\t\tthis.putBoolean = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tthis._desc.putBoolean(key, value);\r\n\t\t};\r\n\t   this.putClass = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tvalue = lexicon.resolveId(key);\r\n\t\t\tthis._desc.putClass(key, value);\r\n\t\t};\r\n\t\tthis.putData = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tthis._desc.putData(key, value);\r\n\t\t};\r\n\t\tthis.putDouble = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tthis._desc.putDouble(key, value);\r\n\t\t};\r\n\t\tthis.putEnumerated = function (key, enumType ,value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tenumType = lexicon.resolveId(enumType);\r\n\t\t\tvalue = lexicon.resolveId(value);\r\n\t\t\tthis._desc.putEnumerated(key,enumType,value);\r\n\t\t};\r\n\t\tthis.putInteger = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tthis._desc.putInteger(key, value);\r\n\t\t};\r\n\t\tthis.putLargeInteger = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tthis._desc.putLargeInteger(key, value);\r\n\t\t};\r\n\t\tthis.putList = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tthis._desc.putList(key, value);\r\n\t\t};\r\n\t\tthis.putObject = function (key, classID , value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tclassID = lexicon.resolveId(classID);\r\n\t\t\tif(value._desc){\r\n\t\t\t\tvalue = value._desc;\r\n\t\t\t}\r\n\t\t\tthis._desc.putObject(key, classID, value);\r\n\t\t};\r\n\t\tthis.putPath = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tthis._desc.putPath(key, value);\r\n\t\t};\r\n\t\tthis.putReference = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tif(value._ref){\r\n\t\t\t   value = value._ref; \r\n\t\t\t}\r\n\t\t\tthis._desc.putReference(key, value);\r\n\t\t};\r\n\t\tthis.putString = function (key, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tthis._desc.putString(key, value);\r\n\t\t};\r\n\t\tthis.putUnitDouble = function (key, unitID, value){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tunitID = lexicon.resolveId(unitID);\r\n\t\t\tthis._desc.putUnitDouble(key, unitID, value);\r\n\t\t};\r\n\r\n\t\t// end of put data\r\n\t\tthis.toStream = function (){\r\n\t\t\treturn this._desc.toStream();\r\n\t\t}; \r\n\r\n\t\t// custom functions\r\n\t\tthis.getValue = function(key){\r\n\t\t\tkey = lexicon.resolveId(key);\r\n\t\t\tvar type = this._desc.getType( key ).toString();\r\n\t\t\treturn lexicon._getValue(this._desc, type, key);\r\n\t\t};\r\n\t\r\n\t\tthis.toJSONString = function(){\r\n\t\t\treturn lexicon.descriptorToJSON(this._desc);\r\n\t\t}\r\n\t\r\n\t\tthis.toJSObject = function(){\r\n\t\t\treturn eval(\"(\"+this.toJSONString()+\")\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tfunction LxActionList(list){\r\n\t\tthis.version = 1;\r\n\t\t\r\n\t\tif(list){\r\n\t\t\tthis._list = list\r\n\t\t}else{\r\n\t\t\tthis._list = new ActionDescriptor();\r\n\t\t}\r\n\r\n\t\t//check if I will need to update properties\r\n\t\tthis.count = this._list.count;\r\n\t\tthis.typename = this._list.typename;\r\n\t\tthis.clear = function (){this._list.clear()};\r\n\t   \r\n\t\t\r\n\t\t\r\n\t\t// get data\r\n\t\tthis.getBoolean = function (position){\r\n\t\t\treturn this._list.getBoolean(position);\r\n\t\t};\r\n\t\tthis.getClass = function (position){\r\n\t\t\treturn this._list.getClass(position);\r\n\t\t};\r\n\t\tthis.getData = function (position){\r\n\t\t\treturn this._list.getData(position);\r\n\t\t};\r\n\t\tthis.getDouble = function (position){\r\n\t\t\treturn this._list.getDouble(position);\r\n\t\t};\r\n\t\tthis.getEnumerationType = function (position){\r\n\t\t\treturn this._list.getEnumerationType(position);\r\n\t\t};\r\n\t\tthis.getEnumerationValue = function (position){\r\n\t\t\treturn this._list.getEnumerationValue(position);\r\n\t\t};\r\n\t\tthis.getInteger = function (position){\r\n\t\t\treturn this._list.getInteger(position);\r\n\t\t};\r\n\t\tthis.getLargeInteger = function (position){\r\n\t\t\treturn this._list.getLargeInteger(position);\r\n\t\t};\r\n\t\tthis.getList = function (position){\r\n\t\t\tvar result = new LxActionList(this._list.getList(position));\r\n\t\t\treturn result;\r\n\t\t};\r\n\t\tthis.getObjectType = function (position){\r\n\t\t\treturn this._list.getObjectType(position);\r\n\t\t};\r\n\t\tthis.getObjectValue = function (position){\r\n\t\t\tvar result = new LxActionDescriptor(this._list.getObjectValue(position));\r\n\t\t\treturn result;\r\n\t\t};\r\n\t\tthis.getPath = function (position){\r\n\t\t\treturn this._list.getPath(position);\r\n\t\t};\r\n\t\tthis.getReference = function (position){\r\n\t\t\tvar result = new LxActionReference(this._list.getReference(position));\r\n\t\t\treturn result;\r\n\t\t};\r\n\t\tthis.getString = function (position){\r\n\t\t\treturn this._list.getString(position);\r\n\t\t};\r\n\t\tthis.getType = function (position){\r\n\t\t\treturn this._list.getType(position);\r\n\t\t};\r\n\t\tthis.getUnitDoubleType = function (position){\r\n\t\t\treturn this._list.getUnitDoubleType(position);\r\n\t\t};\r\n\t\tthis.getUnitDoubleValue = function (position){\r\n\t\t\treturn this._list.getUnitDoubleValue(position);\r\n\t\t};\r\n\t\t// end of get data\r\n\r\n\t\t//// put data\r\n\t\tthis.putBoolean = function (value){\r\n\t\t\tthis._list.putBoolean(value);\r\n\t\t};\r\n\t\tthis.putClass = function (value){\r\n\t\t\tvalue = lexicon.resolveId(position);\r\n\t\t\tthis._list.putClass(value);\r\n\t\t};\r\n\t\tthis.putData = function (value){\r\n\t\t\tthis._list.putData(value);\r\n\t\t};\r\n\t\tthis.putDouble = function (value){\r\n\t\t\tthis._list.putDouble(value);\r\n\t\t};\r\n\t\tthis.putEnumerated = function (enumType ,value){\r\n\t\t\tenumType = lexicon.resolveId(enumType);\r\n\t\t\tvalue = lexicon.resolveId(value);\r\n\t\t\tthis._list.putEnumerated(enumType,value);\r\n\t\t};\r\n\t\tthis.putInteger = function (value){\r\n\t\t\tthis._list.putInteger(value);\r\n\t\t};\r\n\t\tthis.putLargeInteger = function (value){\r\n\t\t\tthis._list.putLargeInteger(value);\r\n\t\t};\r\n\t\tthis.putList = function (value){\r\n\t\t\tif(value._list){\r\n\t\t\t\tvalue = value._list;\r\n\t\t\t}\r\n\t\t\tthis._list.putList(value);\r\n\t\t};\r\n\t\tthis.putObject = function (classID , value){\r\n\t\t\tif(value._desc){\r\n\t\t\t\tvalue = value._desc;\r\n\t\t\t}\r\n\t\t\tclassID = lexicon.resolveId(classID);\r\n\t\t\tthis._list.putObject(classID, value._desc);\r\n\t\t};\r\n\t\tthis.putPath = function (value){\r\n\t\t\tthis._list.putPath(value);\r\n\t\t};\r\n\t\tthis.putReference = function (value){\r\n\t\t\tif(value._ref){\r\n\t\t\t   value = value._ref; \r\n\t\t\t}\r\n\t\t\tthis._list.putReference(value);\r\n\t\t};\r\n\t\tthis.putString = function (value){\r\n\t\t\tthis._list.putString(value);\r\n\t\t};\r\n\t\tthis.putUnitDouble = function (unitID, value){\r\n\t\t\tunitID = lexicon.resolveId(unitID);\r\n\t\t\tthis._list.putUnitDouble(unitID, value);\r\n\t\t};\r\n\r\n\t\t// custom functions\r\n\t\tthis.getValue = function(position){\r\n\t\t\tvar type = this._list.getType( position ).toString();\r\n\t\t\tlexicon._getValue(this._list, type, position);\r\n\t\t};\r\n\r\n\t\tthis.forEach = function(itemFunction){\r\n\t\t\tfor(var i = 0, len = this._list.count; i < len; i++){\r\n\t\t\t\titemFunction(i);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction LxActionReference(ref){\r\n\t\tthis.version = 1;\r\n\t\t\r\n\t\tif(ref){\r\n\t\t\tthis._ref = ref\r\n\t\t}else{\r\n\t\t\tthis._ref = new ActionReference();\r\n\t\t}\r\n\r\n\t\tthis.typename = this._ref.typename;\r\n\t\tthis.getContainer = function(){return this._ref.getContainer()}\r\n\t\tthis.getDesiredClass = function(){return this._ref.getDesiredClass()}\r\n\t\tthis.getEnumeratedType = function(){return this._ref.getEnumeratedType()}\r\n\t\tthis.getEnumeratedValue = function(){return this._ref.getEnumeratedValue()}\r\n\t\tthis.getForm = function(){return this._ref.getForm()}\r\n\t\tthis.getIdentifier = function(){return this._ref.getIdentifier()}\r\n\t\tthis.getIndex = function(){return this._ref.getIndex()}\r\n\t\tthis.getName = function(){return this._ref.getName()}\r\n\t\tthis.getOffset = function(){return this._ref.getOffset()}\r\n\t\tthis.getProperty = function(){return this._ref.getProperty()} //typeID\r\n\t\t\r\n\t\tthis.putClass = function(classId){\r\n\t\t\tclassId = lexicon.resolveId(classId);\r\n\t\t\tthis._ref.putClass(classId)\r\n\t\t}\r\n\t\tthis.putEnumerated = function(classId, enumType, value){\r\n\t\t\tclassId = lexicon.resolveId(classId);\r\n\t\t\tenumType = lexicon.resolveId(enumType);\r\n\t\t\tvalue = lexicon.resolveId(value);\r\n\t\t\tthis._ref.putEnumerated(classId, enumType, value)\r\n\t\t}\r\n\t\tthis.putIdentifier = function(classId, value){\r\n\t\t\tclassId = lexicon.resolveId(classId);\r\n\t\t\tthis._ref.putIdentifier(classId, value)\r\n\t\t}\r\n\t\tthis.putIndex = function(classId, value){\r\n\t\t\tclassId = lexicon.resolveId(classId);\r\n\t\t\tthis._ref.putIndex(classId, value)\r\n\t\t}\r\n\t\tthis.putName = function(classId, value){\r\n\t\t\tclassId = lexicon.resolveId(classId);\r\n\t\t\tthis._ref.putName(classId, value)\r\n\t\t}\r\n\t\tthis.putOffset = function(classId, value){\r\n\t\t\tclassId = lexicon.resolveId(classId);\r\n\t\t\tthis._ref.putOffset(classId, value)\r\n\t\t}\r\n\t\tthis.putProperty = function(classId, value){\r\n\t\t\tclassId = lexicon.resolveId(classId);\r\n\t\t\tvalue = lexicon.resolveId(value);\r\n\t\t\tthis._ref.putProperty(classId, value)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tLexicon.prototype._getValue = function( theDesc, descType, position ) {\r\n\t\tswitch( descType ) {\r\n\t\t\tcase 'DescValueType.BOOLEANTYPE':  \r\n\t\t\t\treturn theDesc.getBoolean( position );  \r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.CLASSTYPE':  \r\n\t\t\t\treturn theDesc.getClass( position );  \r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.DOUBLETYPE':  \r\n\t\t\t\treturn theDesc.getDouble( position );  \r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.ENUMERATEDTYPE':  \r\n\t\t\t\treturn typeIDToStringID(theDesc.getEnumerationValue( position ));  \r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.INTEGERTYPE':  \r\n\t\t\t\treturn theDesc.getInteger( position );  \r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.LISTTYPE':  \r\n\t\t\t\t var result = new LxActionList(theDesc.getList( position ));\r\n\t\t\t\treturn result;  \r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.OBJECTTYPE':\r\n\t\t\t\t var result = new LxActionDescriptor (theDesc.getObjectValue( position ));\r\n\t\t\t\treturn result;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.REFERENCETYPE':\r\n\t\t\t\t var result = new LxActionReference (theDesc.getReference( position ));\r\n\t\t\t\treturn result;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.STRINGTYPE':\r\n\t\t\t\tvar str = '';\r\n\t\t\t\treturn str + theDesc.getString( position );  \r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.UNITDOUBLE':  \r\n\t\t\t\treturn theDesc.getUnitDoubleValue( position );  \r\n\t\t\t\tbreak;        \r\n\r\n\t\t\tcase 'DescValueType.ALIASTYPE':  \r\n\t\t\t\treturn decodeURI(theDesc.getPath( position ));\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DescValueType.RAWTYPE':  \r\n\t\t\t\treturn theDesc.getData( position ).substring( 0, this.descParams.maxRawLimit );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ReferenceFormType.CLASSTYPE':\r\n\t\t\t\treturn theDesc.getDesiredClass();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ReferenceFormType.ENUMERATED':\r\n\t\t\t\tvar enumeratedID = theDesc.getEnumeratedValue();\r\n\t\t\t\treturn this._getBestName( enumeratedID );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ReferenceFormType.IDENTIFIER':\r\n\t\t\t\treturn theDesc.getIdentifier();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ReferenceFormType.INDEX':\r\n\t\t\t\treturn theDesc.getIndex();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ReferenceFormType.NAME':\r\n\t\t\t\tvar str = '';\r\n\t\t\t\treturn str + theDesc.getName();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ReferenceFormType.OFFSET':\r\n\t\t\t\treturn theDesc.getOffset();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ReferenceFormType.PROPERTY':\r\n\t\t\t\tvar propertyID = theDesc.getProperty();\r\n\t\t\t\treturn this._getBestName( propertyID );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;  \r\n\t\t};\r\n\t};\r\n\r\n\tLxActionReference.prototype.toString = function (){\r\n\t\treturn '[LxActionReference]';\r\n\t}\r\n\r\n\tLxActionList.prototype.toString = function (){\r\n\t\treturn '[LxActionList]';\r\n\t}\r\n\r\n\tLxActionDescriptor.prototype.toString = function (){\r\n\t\treturn '[LxActionDescriptor]';\r\n\t}\r\n\r\n\tLxActionDescriptor.prototype.valueOf = function (){\r\n\t\treturn this._desc;\r\n\t}\r\n\r\n\r\n\r\n\tfunction Lexicon() {\r\n\t\tthis.version = 1;\r\n\t\tthis.settings = {\r\n\t\t\tdebugMode : false\r\n\t\t}\r\n\t};\r\n\r\n\tfunction LayerContext(pointer, type){\r\n\t\tvar _descLocking, _backgroundCounter, _documentLayersCount;\r\n\t\t\r\n\t\t// init\r\n\t\t\r\n\t\tthis.init = function(){\r\n\t\t\t_descLocking = new LxActionDescriptor( lexicon.getLayerDescriptor (pointer, type, \"layerLocking\").getObjectValue('layerLocking'));\r\n\t\t\t_backgroundCounter = lexicon.existsBackgroundLayer() ? -1 : 0;\r\n\t\t\t_documentLayersCount = lexicon.getDocumentLayersCount();\r\n\t\t\t\r\n\t\t\tthis.layerID = lexicon.getLayerDescriptor (pointer, type, \"layerID\").getInteger(\"layerID\");\r\n\t\t\tthis.itemIndex = lexicon.getLayerDescriptor (pointer, type, \"itemIndex\").getInteger(\"itemIndex\") + _backgroundCounter;\r\n\t\t\tthis.layerLocking = {\r\n\t\t\t\tprotectAll: _descLocking.getBoolean(\"protectAll\"),\r\n\t\t\t\tprotectArtboardAutonest: _descLocking.getBoolean(\"protectArtboardAutonest\"),\r\n\t\t\t\tprotectComposite: _descLocking.getBoolean(\"protectComposite\"),\r\n\t\t\t\tprotectPosition: _descLocking.getBoolean(\"protectPosition\"),\r\n\t\t\t\tprotectTransparency: _descLocking.getBoolean(\"protectTransparency\")\r\n\t\t\t};\r\n\t\t\tthis.name = lexicon.getLayerDescriptor (pointer, type, \"name\").getString(\"name\");\r\n\t\t\tthis.visible = lexicon.getLayerDescriptor (pointer, type, \"visible\").getBoolean(\"visible\");\r\n\t\t\tthis.indexInGroup = 0; //in same level\r\n\t\t\tthis.absoluteIndexInGroup = 0;\r\n\t\t\tthis.layerSection = typeIDToStringID(lexicon.getLayerDescriptor (pointer, type, \"layerSection\").getEnumerationValue('layerSection'));\r\n\t\t\tthis.isGroup = (this.layerSection === \"layerSectionStart\" || this.layerSection === \"layerSectionEnd\");\r\n\t\t\tthis.groupBounds = null;\r\n\t\t\tthis.getGroupBounds = null;\r\n\t\t\tthis.isParentLocked = null;\r\n\t\t\tthis.isParentInvisible = null;\r\n\t\t\tthis.setDomLayer = null;\r\n\t\t\tthis.isParentDocument = false;\r\n\t\t\tthis.parentItemIndex = null;\r\n\t\t\tthis._setIndexInGroup ();\r\n\t\t\tif(this.isGroup){\r\n\t\t\t\tthis._setGroupLength ();\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tthis.reinit = function(){\r\n\t\t\tpointer = this.layerID;\r\n\t\t\ttype = \"id\";\r\n\t\t\tthis.init();\r\n\t\t}\r\n\t\t\r\n\t\tthis._setIndexInGroup = function(){\r\n\t\t\tvar indexInGroup = 0, absoluteIndexInGroup = 0, i = this.itemIndex, level = 0;\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tfor(i; ((i <= _documentLayersCount) && (level <= 0)); i++){  \r\n\t\t\t\t///* debug */ $.writeln(lexicon.getLayerDescriptor (i, null, \"name\").getString('name'));$.writeln(level);\r\n\t\t\t\tvar layerSection = typeIDToStringID(lexicon.getLayerDescriptor (i, null, \"layerSection\").getEnumerationValue('layerSection'));\r\n\t\t\t\tif(layerSection===\"layerSectionStart\" && this.itemIndex !== i){  \r\n\t\t\t\t\tlevel++;  \r\n\t\t\t\t}  \r\n\t\t\t\telse if(layerSection===\"layerSectionEnd\"){  \r\n\t\t\t\t\tlevel--;\r\n\t\t\t\t}  \r\n\t\t\t\tif(level == 0 && layerSection!==\"layerSectionEnd\" && this.itemIndex !== i){\r\n\t\t\t\t\tindexInGroup++; // first item in DOM group begins with zero... so we don't count layer itself\r\n\t\t\t\t}\r\n\t\t\t\tif(level <= 0){\r\n\t\t\t\t\tabsoluteIndexInGroup++; // this value is for getting new action descriptor in linear list. So we need to count everything\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar a = 0;\r\n\t\t\t//$.writeln(i);\r\n\t\t\tthis.absoluteIndexInGroup = absoluteIndexInGroup;\r\n\t\t\tthis.indexInGroup = indexInGroup;\r\n\t\t\ttry{\r\n\t\t\t\t// fail if next layer doesn't exists. So it means that we reached most top layer\r\n\t\t\t\tvar dummmy = lexicon.getLayerDescriptor (i, null, \"name\");\r\n\t\t\t}catch(e){\r\n\t\t\t\tthis.isParentDocument = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tthis._setGroupLength = function(){\r\n\t\t\tvar length = 0; // DOM like\r\n\t\t\tvar lengthAbsolute = 0; // DOM like with folders ends\r\n\t\t\tvar deepLength = 0; // with nested without folders ends\r\n\t\t\tvar deepLengthAbsolute = 0; //all\r\n\t\t\t\r\n\t\t\tfor(var i = this.itemIndex-1, level = 0; (i > 0) && (level >= 0); i--){  \r\n\t\t\t\tvar layerSection = typeIDToStringID(lexicon.getLayerDescriptor (i, null, \"layerSection\").getEnumerationValue('layerSection'));\r\n\t\t\t\t\r\n\t\t\t\tdeepLengthAbsolute++;\r\n\t\t\t\t\r\n\t\t\t\tif(layerSection===\"layerSectionEnd\"){  \r\n\t\t\t\t\tlevel--;\r\n\t\t\t\t} \r\n\t\t\t\t\r\n\t\t\t\tif(level == 0){\r\n\t\t\t\t\tlengthAbsolute++;\r\n\t\t\t\t\tif(layerSection!==\"layerSectionEnd\"){\r\n\t\t\t\t\t\tlength++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(layerSection===\"layerSectionStart\"){  \r\n\t\t\t\t\tlevel++;  \r\n\t\t\t\t\tdeepLength++;\r\n\t\t\t\t}  \r\n\t\t\t\t \r\n\t\t\t\tif(layerSection===\"layerSectionContent\"){\r\n\t\t\t\t\tdeepLength++;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tthis.length = length;\r\n\t\t\tthis.lengthAbsolute = lengthAbsolute; // DOM li\r\n\t\t\tthis.deepLength = deepLength; // with neste\r\n\t\t\tthis.deepLengthAbsolute = deepLengthAbsolute; //all\r\n\t\t\t\r\n\t\t}\r\n\t\r\n\t\tthis.getContentPointers = function(type,ignoreGroupEnds){\r\n\t\t\tif(this.isGroup){\r\n\t\t\t\tvar len = this.itemIndex - this.deepLengthAbsolute - 1;\r\n\t\t\t\tvar result = [];\r\n\t\t\t\t\r\n\t\t\t\tfor(var i = this.itemIndex - 1; i > len; i--){\r\n\t\t\t\t\tvar pointer;\r\n\t\t\t\t\tif(!type){\r\n\t\t\t\t\t\tpointer = i;\r\n\t\t\t\t\t}else if(type.toLowerCase() === \"id\"){\r\n\t\t\t\t\t\tpointer = lexicon.convertLayerIndexToId(i);\r\n\t\t\t\t\t}else if(type.toLowerCase() === \"name\"){\r\n\t\t\t\t\t\tpointer = lexicon.getLayerDescriptor(i,null,\"name\").getString(\"name\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar notGroupEnd = typeIDToStringID(lexicon.getLayerDescriptor (i, null, \"layerSection\").getEnumerationValue('layerSection')) !== \"layerSectionEnd\";\r\n\t\t\t\t\r\n\t\t\t\t\tif((notGroupEnd && ignoreGroupEnds) || !ignoreGroupEnds){\r\n\t\t\t\t\t\tresult.push(pointer);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn result;\r\n\t\t\t}else{\r\n\t\t\t\tthrow \"Can't get folder content. It's not a group\";\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\t\r\n\t\tthis.init();\r\n\t};\r\n\t   \r\n\t /*  Input\r\n\t\tvalue = reference value:layerIndex, id, name, array\r\n\t\ttype = optional, \"id\" if number is ID    \r\n\t\tpsClass = optional\r\n\t*/\r\n\r\n\tLxActionDescriptor.prototype.lxRef = function(value, psMainClass, type, psClass){\r\n\t\tif(!psClass){\r\n\t\t\tpsClass = \"null\";\r\n\t\t}\r\n\t\tif(value && value.constructor === Array){\r\n\t\t\tthis.putList( psClass, lexicon.ref(psMainClass, value,  type) ); \r\n\t\t} else {\r\n\t\t\tthis.putReference( psClass, lexicon.ref(psMainClass, value, type) ); \r\n\t\t}\r\n\t}\r\n\r\n\tLxActionDescriptor.prototype.lxRefLayer = function(value, type){\r\n\t\tthis.lxRef(value,'Lyr ',type);\r\n\t}\r\n\r\n\tLxActionDescriptor.prototype.lxRefDocument = function(value, type){\r\n\t\tthis.lxRef(value,'Dcmn',type);\r\n\t}\r\n\r\n\tLexicon.prototype.getLayerDescriptor = function(value, type, property){\r\n\t\treturn lexicon.getDescriptor(\"Lyr \", value, type, property);\r\n\t}\r\n\r\n\t/* return value */\r\n\tLexicon.prototype.getDocumentProperty = function (property, pointer, pointerType){\r\n\t\treturn lexicon.getDescriptor(\"Dcmn\", pointer, pointerType, property).getValue(property);\r\n\t}\r\n\r\n\t/* return value */\r\n\tLexicon.prototype.getLayerProperty = function (property, pointer, pointerType){\r\n\t\treturn lexicon.getDescriptor(\"Lyr \", pointer, pointerType, property).getValue(property);\r\n\t}\r\n\r\n\t/* return value */\r\n\tLexicon.prototype.getAppProperty = function (property, pointer, pointerType){\r\n\t\treturn lexicon.getDescriptor(\"capp\", pointer, pointerType, property).getValue(property);\r\n\t}\r\n\r\n\t/* return value */\r\n\tLexicon.prototype.getPathProperty = function (property, pointer, pointerType){\r\n\t\treturn lexicon.getDescriptor(\"Path\", pointer, pointerType, property).getValue(property);\r\n\t}\r\n\r\n\tLexicon.prototype.getDocumentDescriptor = function(value, type, property){\r\n\t\treturn lexicon.getDescriptor(\"Dcmn\", value, type, property);\r\n\t}\r\n\tLexicon.prototype.getDocumentLayersCount = function (value, type){\r\n\t\treturn lexicon.getDescriptor(\"Dcmn\", value, type, \"numberOfLayers\").getInteger(\"numberOfLayers\");\r\n\t}\r\n\r\n\tLexicon.prototype.getDocumentDeepestLevel = function(){\r\n\t\t// this doesn't utilize lexicon features becuase we need performance. We want traverse all layers.\r\n\t\tvar bgCounter = lexicon.existsBackgroundLayer() ? 0 : 1;\r\n\t\tvar currentLevel = 1;\r\n\t\tvar maxLevel = 1;\r\n\t\tvar idLyr = charIDToTypeID( \"Lyr \" ); \r\n\t\tvar idPrp = stringIDToTypeID('property');\r\n\t\tvar idSection = stringIDToTypeID('layerSection');\r\n\t\tvar idStart = stringIDToTypeID(\"layerSectionStart\");\r\n\t\tvar idEnd = stringIDToTypeID(\"layerSectionEnd\");\r\n\t\tvar ref, desc, layerSection;\r\n\t\t\r\n\t\tfor(var i = bgCounter, len = lexicon.getDocumentLayersCount(); i<len ; i++){  \r\n\t\t\t\r\n\t\t\tref = new ActionReference();    \r\n\t\t\tref.putProperty(idPrp, idSection);\r\n\t\t\tref.putIndex( idLyr, i );   \r\n\t\t\tdesc = executeActionGet(ref);  \r\n\t\t\t  \r\n\t\t\tlayerSection = desc.getEnumerationValue(idSection);  \r\n\t\t\tif(layerSection===idEnd){  \r\n\t\t\t\tcurrentLevel++; \r\n\t\t\t\tif(currentLevel > maxLevel){\r\n\t\t\t\t\tmaxLevel = currentLevel;\r\n\t\t\t\t\t//$.writeln(lexicon.getLayerDescriptor(i+1, null, \"name\").getValue(\"name\"));\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}  \r\n\t\t\telse if(layerSection===idStart){  \r\n\t\t\t\tcurrentLevel--;  \r\n\t\t\t}  \r\n\t\t\t\r\n\t\t}\r\n\t\treturn maxLevel;\r\n\t}\r\n\r\n\tLexicon.prototype.getDescriptor = function(psMainClass,value, type, property){\r\n\t\tvar ref = new LxActionReference();\r\n\t\tif(property){\r\n\t\t\tref.putProperty(\"Prpr\", property);  \r\n\t\t}\r\n\t\tref = lexicon.ref(psMainClass, value, type, ref);\r\n\t\t\r\n\t\tvar result = executeActionGet(ref);\r\n\t\tresult = new LxActionDescriptor(result);\r\n\t\t\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\r\n\r\n\r\n\tLexicon.prototype.resolveId = function (id){\r\n\t\tif (id.constructor == Number) {\r\n\t\t\treturn id;\r\n\t\t} else if(id.constructor == String){\r\n\t\t\tif(id.length > 0){\r\n\t\t\t\t\r\n\t\t\t\tif(id.length === 4){\r\n\t\t\t\t\ttry { \r\n\t\t\t\t\t\tvar typeID = charIDToTypeID(id);\r\n\t\t\t\t\t\tif(typeIDToStringID(typeID) === \"\"){\r\n\t\t\t\t\t\t\treturn stringIDToTypeID(id); \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn typeID\r\n\t\t\t\t\t} \r\n\t\t\t\t\tcatch (e) { return stringIDToTypeID(id); }\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn stringIDToTypeID(id);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tError.runtimeError(19, id);  // Bad Argument\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/*  Input\r\n\t\tvalue = reference value:layerIndex, id, name, array\r\n\t\ttype = optional, \"id\" if number is ID    \r\n\t*/\r\n\tLexicon.prototype.ref = function (psMainClass, value, type, ref){\r\n\t\tif(!ref){\r\n\t\t\tref = new LxActionReference();  \r\n\t\t}\r\n\t\tvar psMainClass = this.resolveId(psMainClass);\r\n\t\t\r\n\t\tif(value && value.constructor === Array){\r\n\t\t\tvar list = new ActionList();\r\n\t\t\tfor(var i = 0, len = value.length; i < len; i++){\r\n\t\t\t\tvar ref = new ActionReference();  \r\n\t\t\t\tref = this._refSingle(psMainClass, value[i], type, ref);\r\n\t\t\t\tlist.putReference(ref);\r\n\t\t\t}\r\n\t\t\treturn list;\r\n\t\t}else{\r\n\t\t\tref = this._refSingle(psMainClass, value, type, ref);\r\n\t\t\treturn ref;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tLexicon.prototype._refSingle = function (psMainClass, value, type, ref){\r\n\t\tif(!ref){\r\n\t\t\tref = new LxActionReference();\r\n\t\t}\r\n\t\t\r\n\t\tif(type && type.toLowerCase() === \"id\"){\r\n\t\t\tref.putIdentifier( psMainClass, value );\r\n\t\t}else if(type && type.toLowerCase() === \"offset\"){\r\n\t\t\tref.putOffset( psMainClass, value );\r\n\t\t}else if(typeof value === \"number\" ){\r\n\t\t\tref.putIndex( psMainClass, value );\r\n\t\t}else if(typeof value === \"string\" ){\r\n\t\t\tref.putName( psMainClass, value );\r\n\t\t}else if(value === undefined || value === null){\r\n\t\t\tref.putEnumerated( psMainClass, charIDToTypeID(\"Ordn\"), charIDToTypeID(\"Trgt\") );  \r\n\t\t}else{\r\n\t\t\tthrow \"Can't create reference. Bad data type\"\r\n\t\t}\r\n\t\treturn ref;\r\n\t}\r\n\r\n\t/// native overrides\r\n\r\n\texecuteAction = function(eventID, descriptor, displayDialogs){\r\n\t\tif(displayDialogs === undefined){\r\n\t\t\tdisplayDialogs = DialogModes.NO;\r\n\t\t}\r\n\t\tif(descriptor !== undefined && descriptor._desc){\r\n\t\t\tdescriptor = descriptor._desc;\r\n\t\t}\r\n\t\teventID = Lexicon.prototype.resolveId(eventID);\r\n\t\tlexicon.settings.debugMode ? $.hiresTimer : null;\r\n\t\tvar desc = app.executeAction(eventID, descriptor, displayDialogs);\r\n\t\t\r\n\t\tif(lexicon.settings.debugMode){\r\n\t\t\tvar time = $.hiresTimer;\r\n\t\t\tvar event = eventID;\r\n\t\t\ttry{event = typeIDToStringID(eventID)}catch(e){alert(e)}\r\n\t\t\t$.writeln(time/1000 +\"\\n\"+$.stack+\"\\n\\n\");\r\n\t\t}\r\n\t\r\n\t\treturn desc;\r\n\t};\r\n\r\n\texecuteActionGet = function (ref){\r\n\t\tif(ref._ref){\r\n\t\t\tref = ref._ref;\r\n\t\t}\r\n\t\tvar result = app.executeActionGet(ref);\r\n\t\treturn result;\r\n\t};\r\n\r\n\t// common methods\r\n\r\n\tLexicon.prototype.selectDocument = function(value, type){\r\n\t\tvar desc = new LxActionDescriptor();\r\n\t\tdesc.lxRefDocument (value, type);\r\n\t\texecuteAction( \"slct\", desc, DialogModes.NO );\r\n\t}\r\n\r\n\tLexicon.prototype.convertLayerIdToIndex = function(id){\r\n\t\tvar backgroundCounter = Lexicon.prototype.existsBackgroundLayer() ? -1 : 0;\r\n\t\t\r\n\t\tif(id.constructor === Array){\r\n\t\t\tvar result = new Array();\r\n\t\t\tfor (var i = 0, len = id.length; i < len; i++){\r\n\t\t\t\tresult.push(idToIndex(id[i]));\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}else{\r\n\t\t\treturn idToIndex(id);\r\n\t\t}\r\n\r\n\t\tfunction idToIndex(identifier){\r\n\t\t\tvar desc = Lexicon.prototype.getLayerDescriptor(identifier, \"id\", \"itemIndex\");\r\n\t\t\tvar index = desc.getInteger(\"itemIndex\") + backgroundCounter;\r\n\t\t\treturn index;\r\n\t\t}\r\n\t}\r\n\r\n\tLexicon.prototype.convertLayerIndexToId = function(index){\r\n\t\tvar result = new Array();\r\n\t\t\r\n\t\tvar indexToId = function(idx){\r\n\t\t\tvar desc = Lexicon.prototype.getLayerDescriptor(idx, null, \"layerID\");\r\n\t\t\tvar id = desc.getInteger(\"layerID\");\r\n\t\t\tresult.push(id);\r\n\t\t}\r\n\r\n\t\tthis.forEach(index, null, indexToId);\r\n\t\t\r\n\t\treturn result.length === 1 ? result[0] : result;\r\n\t}\r\n\r\n\tLexicon.prototype.selectLayers = function(value, type){\r\n\t\tif(value.constructor === Array && value.length > 1){\r\n\t\t\tif(type ===\"id\"){\r\n\t\t\t\tthis.convertLayerIdToIndex (value)\r\n\t\t\t}\r\n\t\t\tvalue.sort(sortNumber);\r\n\t\t\tvar invertedArray = new Array();\r\n\t\t\t\r\n\t\t\tvar continuousScore = 0;\r\n\t\t\tfor(var i = value[0], len = value[value.length-1], j=0; i<len; i++){\r\n\t\t\t\tif(value[j] !== i){\r\n\t\t\t\t\tinvertedArray.push(i);\r\n\t\t\t\t}else{j++}\r\n\t\t\t}\r\n\t\t\tvar invertedSelection = invertedArray.length < value.length;\r\n\t\t\t\r\n\t\t\tsetSelectedLayer(value[0], type);\r\n\t\t\t\r\n\t\t\tif(invertedSelection){\r\n\t\t\t\taddContinuousSelection(value[value.length-1]);\r\n\t\t\t\tthis.deselectLayers (invertedArray, type);\r\n\t\t\t}else{\r\n\t\t\t\tvalue.shift();\r\n\t\t\t\tthis.addSelectedLayers (value, type);\r\n\t\t\t}\r\n\t\t\r\n\t\t}else if(value.constructor === Array && value.length === 1){\r\n\t\t\tsetSelectedLayer(value[0], type)\r\n\t\t}else{\r\n\t\t\tsetSelectedLayer(value, type)\r\n\t\t}\r\n\r\n\t\tfunction setSelectedLayer(pointer, type){\r\n\t\t\tvar desc = new LxActionDescriptor();\r\n\t\t\tdesc.lxRefLayer (pointer, type);\r\n\t\t\tdesc.putBoolean( \"MkVs\", false );\r\n\t\t\texecuteAction( \"slct\", desc );\r\n\t\t}\r\n\t\t\r\n\t\tfunction addContinuousSelection(pointer,type){\r\n\t\t\tvar desc = new LxActionDescriptor();\r\n\t\t\tdesc.lxRefLayer (pointer, type);\r\n\t\t\tdesc.putEnumerated( \"selectionModifier\", \"selectionModifierType\", \"addToSelectionContinuous\" );\r\n\t\t\tdesc.putBoolean( \"MkVs\", false );\r\n\t\t\texecuteAction( \"slct\", desc );\r\n\t\t}\r\n\r\n\t\tfunction sortNumber(a,b) {\r\n\t\t\treturn a - b;\r\n\t\t}\r\n\t}\r\n\r\n\t// sibling groups with content inside are counted as single layer if deep = false\r\n\tLexicon.prototype.getLayerIndexInGroup = function(pointer, type, deep){\r\n\t\t\r\n\t}\r\n\r\n\t// sibling groups with content inside are counted as single layer if deep = false\r\n\tLexicon.prototype.getLayerCountInGroup = function(pointer, type, deep){\r\n\t\t\r\n\t}\r\n\r\n\t// because DOM sucks\r\n\r\n\tfunction LayerContextStack(pointer,type){\r\n\t\tthis.stack = [];\r\n\t\t\r\n\t\tthis.loadStack = function(pointer, type){\r\n\t\t\tthis.stack = [];\r\n\t\t\t//innerLoad.call(this, pointer, type);\r\n\t\t\t\r\n\t\t\t/*function innerLoad(pointer, type){\r\n\t\t\t\tvar layerContext = new LayerContext(pointer, type);\r\n\t\t\t\tthis.stack.push(layerContext);\r\n\t\t\t\t//$.writeln(layerContext.name);\r\n\t\t\t\tif(!layerContext.isParentDocument){\r\n\t\t\t\t\tinnerLoad.call (this, layerContext.itemIndex + layerContext.absoluteIndexInGroup);\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\t\t\t\r\n\t\t\tvar layerContext = new LayerContext(pointer, type);\r\n\t\t\tthis.stack.push(layerContext);\r\n\t\t\t\r\n\t\t\twhile(!layerContext.isParentDocument){\r\n\t\t\t\tlayerContext = new LayerContext(layerContext.itemIndex + layerContext.absoluteIndexInGroup, type);\r\n\t\t\t\tthis.stack.push(layerContext);\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tthis.getDOMlayer = function(stackArrayIndex){\r\n\t\t\tvar layer = app.activeDocument.layers;\r\n\t\t\tfor (var i = stackArrayIndex || this.stack.length -1; i >= 0; i--){\r\n\t\t\t\tif(i!==0){\r\n\t\t\t\t\tlayer = layer[this.stack[i].indexInGroup].layers;\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn layer[this.stack[i].indexInGroup];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthrow \"getDOMlayer error\";\r\n\t\t}\r\n\t\r\n\t\tthis.getLast = function(){\r\n\t\t\treturn this.stack[this.stack.length-1];\r\n\t\t}\r\n\r\n\t\tthis.hasParentProtectAll = function(layerContext){\r\n\t\t\tvar startLevelPassed = false;\r\n\t\t\tfor(var i = 0, len = this.stack.length; i < len; i++){\r\n\t\t\t\tif(!startLevelPassed){\r\n\t\t\t\t\tstartLevelPassed = this.stack[i].id===layerContext.id;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar index = this.stack[i].itemIndex;\r\n\t\t\t\t\tvar allLock = lexicon.getLayerDescriptor (index, null, \"layerLocking\").getObjectValue(stringIDToTypeID('layerLocking')).getBoolean(stringIDToTypeID('protectAll'));\r\n\t\t\t\t\tif(allLock){\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\t/*\r\n\t\tvar getDataContext = function (pointer, type){\r\n\t\t\tvar curLayer = new LayerContext(pointer, type);\r\n\t\t\tif(curLayer.isGroup){\r\n\t\t\t\t\r\n\t\t\t\tcurLayer.groupBounds = {\r\n\t\t\t\t\tleft: null,\r\n\t\t\t\t\ttop: null,\r\n\t\t\t\t\tright: null,\r\n\t\t\t\t\tbottom: null\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn curLayer;\r\n\t\t}*/\r\n\t\r\n\t\tthis.loadStack(pointer,type);\r\n\t\t\r\n\t\tthis.reinit = function(){\r\n\t\t\tvar lastID = this.getLast().layerID;\r\n\t\t\tthis.loadStack(lastID, \"id\");\r\n\t\t}\r\n\r\n\t\t//var result = this.forEach(pointer, type, getDataContext);\r\n\t\t//return result;\r\n\t}\r\n\r\n\tLexicon.prototype.deselectLayers = function(value, type){\r\n\t\tvar deselectLayer = function (pointer, type){\r\n\t\t\tvar desc = new LxActionDescriptor();\r\n\t\t\tdesc.lxRefLayer (pointer, type);\r\n\t\t\tdesc.putEnumerated( \"selectionModifier\", \"selectionModifierType\", \"removeFromSelection\" );\r\n\t\t\tdesc.putBoolean( \"MkVs\", false );\r\n\t\t\texecuteAction( \"slct\", desc );\r\n\t\t}\r\n\r\n\t\tthis.forEach(value, type, deselectLayer)\r\n\t}\r\n\r\n\tLexicon.prototype.addSelectedLayers = function(value, type){\r\n\t\tvar addSelectedLayer = function (pointer, type){\r\n\t\t\tvar desc = new LxActionDescriptor();\r\n\t\t\tdesc.lxRefLayer (pointer, type);\r\n\t\t\tdesc.putEnumerated( \"selectionModifier\", \"selectionModifierType\", \"addToSelection\" );\r\n\t\t\tdesc.putBoolean( \"MkVs\", false );\r\n\t\t\texecuteAction( \"slct\", desc );\r\n\t\t}\r\n\t\t\r\n\t\tthis.forEach(value, type, addSelectedLayer)\r\n\t}\r\n\r\n\tLexicon.prototype.createGroup = function(value, type){\r\n\t\ttry{\r\n\t\t\tvar desc = new LxActionDescriptor();\r\n\t\t\tvar ref = new LxActionReference();\r\n\t\t\tref.putClass( \"layerSection\" );\r\n\t\t\tdesc.putReference( \"null\", ref );\r\n\t\t\tvar ref2 = this.ref(\"Lyr \", value, type)\r\n\t\t\tdesc.putReference( \"From\", ref2 );\r\n\t\t\texecuteAction( \"Mk  \", desc );\r\n\t\t}\r\n\t\tcatch(e){\r\n\t\t\tthrow \"Can't create group.\"\r\n\t\t}\r\n\t}\r\n\r\n\tLexicon.prototype.hasHistorySnapshot = function(pointer, type){\r\n\t\ttry{\r\n\t\t\tvar ref = new ActionReference();\r\n\t\t\tvar ref = lexicon._refSingle(\"SnpS\", pointer, type)\r\n\t\t\texecuteActionGet( ref );\t\t\r\n\t\t\treturn true;\r\n\t\t}catch(e){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tLexicon.prototype.makeHistorySnapshot = function(snapshotName){\r\n\t\tvar idMk = charIDToTypeID( \"Mk  \" );\r\n\t\t\tvar desc11 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref5 = new ActionReference();\r\n\t\t\t\tvar idSnpS = charIDToTypeID( \"SnpS\" );\r\n\t\t\t\tref5.putClass( idSnpS );\r\n\t\t\tdesc11.putReference( idnull, ref5 );\r\n\t\t\tvar idFrom = charIDToTypeID( \"From\" );\r\n\t\t\t\tvar ref6 = new ActionReference();\r\n\t\t\t\tvar idHstS = charIDToTypeID( \"HstS\" );\r\n\t\t\t\tvar idCrnH = charIDToTypeID( \"CrnH\" );\r\n\t\t\t\tref6.putProperty( idHstS, idCrnH );\r\n\t\t\tdesc11.putReference( idFrom, ref6 );\r\n\t\t\tif(name){\r\n\t\t\t\tvar idNm = charIDToTypeID( \"Nm  \" );\r\n\t\t\t\tdesc11.putString( idNm, snapshotName );\r\n\t\t\t}\r\n\t\t\tvar idUsng = charIDToTypeID( \"Usng\" );\r\n\t\t\tvar idHstS = charIDToTypeID( \"HstS\" );\r\n\t\t\tvar idFllD = charIDToTypeID( \"FllD\" );\r\n\t\t\tdesc11.putEnumerated( idUsng, idHstS, idFllD );\r\n\t\treturn executeAction( idMk, desc11, DialogModes.NO );\r\n\t}\r\n\r\n\tLexicon.prototype.restoreHistorySnapshot = function(pointer, type){\r\n\t\tvar desc = new LxActionDescriptor();\r\n\t\tvar ref = lexicon._refSingle(\"SnpS\", pointer, type)\r\n\t\tdesc.putReference( \"null\", ref );\r\n\t\texecuteAction( \"slct\" , desc);\r\n\t}\r\n\r\n\tLexicon.prototype.removeHistorySnapshot = function(pointer, type){\r\n\t\tvar desc = new LxActionDescriptor();\r\n\t\tvar ref = lexicon._refSingle(\"SnpS\", pointer, type)\r\n\t\tdesc.putReference( \"null\", ref );\r\n\t\texecuteAction( \"Dlt \" , desc);\r\n\t}\r\n\r\n\tLexicon.prototype.deleteLayers = function(value, type){\r\n\t\ttry{\r\n\t\t\tvar deleteLayer = function(value, type){\r\n\t\t\t\tvar desc = new LxActionDescriptor();\r\n\t\t\t\tdesc.lxRefLayer (value, type);\r\n\t\t\t\texecuteAction( \"Dlt \", desc );\r\n\t\t\t}\r\n\t\t\tthis.forEach(value, type, deleteLayer);\r\n\t\t}\r\n\t\tcatch(e){\r\n\t\t\tthrow \"Can't delete layer\"\r\n\t\t}\r\n\t}\r\n\r\n\tLexicon.prototype.forEach = function(pointer, type, itemFunction){\r\n\t\tif(pointer !== undefined && pointer.constructor === Array){\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0, len = pointer.length; i < len; i++){\r\n\t\t\t\tvar returnedItem = itemFunction(pointer[i], type);\r\n\t\t\t\tresult.push(returnedItem);\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}else{\r\n\t\t\tvar result = itemFunction(pointer, type);\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\r\n\tLexicon.prototype.forEachLayerWithSelection = function (pointer, type, layerFunction){\r\n\t\tif(pointer.constructor === Array){\r\n\t\t\tfor(var i = 0, len = pointer.length; i < len; i++){\r\n\t\t\t\tthis.selectLayers (pointer[i], type);\r\n\t\t\t\tlayerFunction(pointer[i],type);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tthis.selectLayers (pointer, type);\r\n\t\t\tlayerFunction(pointer,type);\r\n\t\t}\r\n\t}\r\n\r\n\t//\r\n\tLexicon.prototype.getSelectedPathsPointer = function(type){\r\n\t\t\r\n\t\tvar pathsLength = lexicon.getDocumentProperty(\"numberOfPaths\");\r\n\t\tvar result = [];\r\n\t\t\r\n\t\tfor (var i = 1; i <= pathsLength; i++){\r\n\t\t\tvar selected = lexicon.getPathProperty(\"targetPath\", i);\r\n\t\t\tif(selected){\r\n\t\t\t\tif(type === undefined){\r\n\t\t\t\t\tresult.push(lexicon.getPathProperty(\"itemIndex\", i));\r\n\t\t\t\t} else if(type.toLowerCase() === \"id\"){\r\n\t\t\t\t\tresult.push(lexicon.getPathProperty(\"ID\", i));\r\n\t\t\t\t}if(type.toLowerCase() === \"name\"){\r\n\t\t\t\t\tresult.push(lexicon.getPathProperty(\"pathName\", i));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\r\n\tLexicon.prototype.getSelectedLayersId = function(docPointer, pionterType){\r\n\t\tvar selectedLayers = new Array();\r\n\t\t\tvar desc = this.getDocumentDescriptor(docPointer, pionterType, \"targetLayersIDs\")\r\n\t\t\tvar hasSelectedLayers = desc.hasKey('targetLayersIDs');\r\n\t\t\tif(hasSelectedLayers){\r\n\t\t\t\tvar layersIDList = desc.getList('targetLayersIDs');\r\n\t\t\t\tlayersIDList.forEach(function(i){\r\n\t\t\t\t\tvar id = layersIDList.getReference(i).getIdentifier(\"layer\");\r\n\t\t\t\t\tselectedLayers.push(id);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\treturn selectedLayers;\r\n\t}\r\n\r\n\tLexicon.prototype.existsBackgroundLayer = function(value, type){\r\n\t\tvar desc = Lexicon.prototype.getDocumentDescriptor(value,type,\"hasBackgroundLayer\");\r\n\t\treturn desc.getBoolean(\"hasBackgroundLayer\");\r\n\t}\r\n\r\n\tLexicon.prototype.descriptorToJSON = function(desc){\r\n\t\tif(desc._desc){\r\n\t\t\tdesc = desc._desc;\r\n\t\t}\r\n\t\tvar convertDesc = new ActionDescriptor();\r\n\t\tconvertDesc.putObject( stringIDToTypeID(\"object\"), stringIDToTypeID(\"object\"), desc );\r\n\t\tvar jsonDesc = executeAction( stringIDToTypeID(\"convertJSONdescriptor\"), convertDesc, DialogModes.NO );\r\n\t\treturn jsonDesc.getString(stringIDToTypeID(\"json\") );\r\n\t}\r\n\r\n\tLexicon.prototype.getSelectedLayersIndexes = function(value, type){\r\n\t\tfunction getBgCounter(){\r\n\t\t\treturn Lexicon.prototype.existsBackgroundLayer() ? 0 : 1;\r\n\t\t}\r\n\t\t\r\n\t\tvar selectedLayers = new Array();\r\n\t\t\tvar backGroundCounter = getBgCounter();\r\n\t\t\tvar desc = this.getDocumentDescriptor(value, type, \"targetLayersIndexes\")\r\n\t\t\tvar hasSelectedLayers = desc.hasKey('targetLayersIndexes');\r\n\t\t\tif(hasSelectedLayers){\r\n\t\t\t\tvar layersIDList = desc.getList('targetLayersIndexes');\r\n\t\t\t\tlayersIDList.forEach(function(i){\r\n\t\t\t\t\tvar index = layersIDList.getReference(i).getIndex(\"layer\");\r\n\t\t\t\t\tselectedLayers.push(index+backGroundCounter);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\treturn selectedLayers;\r\n\t}\r\n\r\n\t// activate lexicon\r\n\r\n\tvar lexicon = new Lexicon();\r\n\tvar lx = lexicon; \r\n\r\n////////////////////////////////////\r\n// \t\tLEXICON END\r\n////////////////////////////////////\t\r\n\r\n  \r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// Do not look down here. If you try to understand my code, you will waste a lot of time.\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\napp.bringToFront();\r\ncTID = function(s) { return cTID[s] || (cTID[s] = charIDToTypeID(s)); };\r\nsTID = function(s) { return sTID[s] || (sTID[s] = stringIDToTypeID(s)); }; \r\n\r\nvar startDisplayDialogs = app.displayDialogs;\r\napp.displayDialogs = DialogModes.NO;\r\n\r\nvar docMaster = app.activeDocument;\r\n\r\n///////////////////\r\n// MAIN CODE\r\n///////////////////\r\napplyPollyFills();\r\n\r\nif(docMaster.length != 0) {  \r\n\tif(app.version.split(\".\")[0] >= 17){\r\n\t\t//main(); // uncoment for debug\t\r\n\t\tapp.activeDocument.suspendHistory(\"Unsmart\", \"main()\"); //keep history clear\r\n\t}\r\n\telse{\r\n\t\talert(\"Sorry. Only Photoshop 2015.5 and higher is supported.\");\r\n\t}\r\n}\r\n\r\nfunction main(){\t\r\n\tvar artboardsSettings = getArtboardSettings();\r\n\tpreventFromArtboardMessUp();\r\n\t\r\n\t//global variables\r\n\tvar layerList = lx.getSelectedLayersId ();\r\n\tlayerList = filterValidLayers(layerList);\r\n\tvar soGroupList = new Array();\r\n\tvar clippedLayers = new Array();\r\n\tvar openWindowID;\r\n\tvar documentOpened;\r\n\tvar exceededWarningShown = false;\r\n\tvar tempFilesToRemove = new Array();\r\n\tvar resolutionRatio = lx.getDocumentDescriptor(null, null, \"resolution\").getValue(\"resolution\") / 72.00;\r\n\tvar effectsScaled = false;\r\n\t\r\n\t// we don't want transform path, bug layer\r\n\tif(isPathSelected()){ //performance condition\r\n\t\tdeselectPath ();\r\n\t}\r\n\t\r\n\t// we don't want open and close window for each SO instance\r\n\t// we also don't want change layer comp for each SO instance if instance has same layer comp\r\n\t// so we sort smart object instances like this: soInst > comps > soLayerIDs > descriptor\r\n\tvar soInst = getSOInstances(layerList);\r\n\t\r\n\tfor (var soKey in soInst){\r\n\t\tvar comps = soInst[soKey];\r\n\t\topenWindowID = null;\r\n\t\t\r\n\t\tfor (var compKey in comps){\r\n\t\t\tvar layers = comps[compKey];\r\n\t\t\t\r\n\t\t\tfor (var layerKey in layers){\r\n\t\t\t\tvar desc = layers[layerKey];\r\n\t\t\t\tlx.selectLayers(layerKey,\"id\");\r\n\t\t\t\tvar layerStack = new LayerContextStack();\r\n\t\t\t\t\r\n\t\t\t\t// ingore SO inside locked group\r\n\t\t\t\tif(layerStack.hasParentProtectAll(layerStack.getLast())) {\r\n\t\t\t\t\tvar indexInArrayToRemove = layerList.findValueIndex(layerKey);\r\n\t\t\t\t\tlayerList.splice(indexInArrayToRemove, 1);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// this should include blending mode, fill, opacity\r\n\t\t\t\tif(canCopyPasteStyle(desc)){\r\n\t\t\t\t\tcopyLayerStyle ();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// we want move clipped layer from SO to new group\r\n\t\t\t\tclippedLayers = getClippedLayersList(desc);\r\n\t\t\t\t\r\n\t\t\t\t// window method is used if smart object has layer comps\r\n\t\t\t\tif(comps.windowMethod){\r\n\t\t\t\t\textractWithWindow(desc, soKey);\r\n\t\t\t\t}else{\r\n\t\t\t\t\textractViewless(desc, soKey);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(documentOpened){\r\n\t\t\t// we can't close document by ID... so we first select this document\r\n\t\t\tselectDocument(openWindowID);\r\n\t\t\tcloseWindow(openWindowID);\r\n\t\t}\r\n\t\r\n\t\topenWindowID = undefined;\r\n\t\tdocumentOpened = undefined;\r\n\t\t\r\n\t}\r\n\r\n\t// clean up unsmarted objects\r\n\tlx.forEachLayerWithSelection(layerList, \"id\", function(soId){\r\n\t\tif(settings.deleteOriginalObject){\r\n\t\t\tlx.deleteLayers(soId, \"id\");\r\n\t\t}else{\r\n\t\t\thideLayer();\r\n\t\t\tsetColorTag(null,null,\"Gry \");\r\n\t\t}\r\n\t});\r\n\t\r\n\t// restore layer selection but with unsmarted objects\r\n\tif(soGroupList.length > 0){\r\n\t\tlx.selectLayers(soGroupList, \"id\");\r\n\t\tif(settings.dontGroupSOContent){\r\n\t\t\tungroupSelectedLayer();\r\n\t\t}\r\n\t}\r\n\t\r\n\t// clean up .psb files in temp folder\r\n\tlx.forEach(tempFilesToRemove, null, function (file){\r\n\t\tif(file.exists){\r\n\t\t\tfile.remove();\r\n\t\t}\r\n\t});\r\n\r\n\trevertArtboardsSettings();\r\n\t\r\n\t/////////////\r\n\t// FUNCTIONS\r\n\t/////////////\r\n\r\n\tfunction extractViewless(desc, soKey){\r\n\t\tvar smartObject = desc.getObjectValue(stringIDToTypeID('smartObject'));\r\n\t\t\r\n\t\tvar hasPath = smartObject.hasKey(stringIDToTypeID('link'));\r\n\t\tvar isKnownPath = soInst[soKey].file;\r\n\t\tvar isCloudFile = hasPath && smartObject.getType(stringIDToTypeID('link')) == \"DescValueType.OBJECTTYPE\";\r\n\t\tvar file;\r\n\t\t\r\n\t\tif((!hasPath && !isKnownPath) || (isCloudFile && !isKnownPath)){\r\n\t\t\tif(isCloudFile){\r\n\t\t\t\tfile = new File(getCloudFilePath(desc));\r\n\t\t\t\t//executeAction( stringIDToTypeID( \"placedLayerConvertToEmbedded\" ), undefined, DialogModes.NO );\r\n\t\t\t}else{\r\n\t\t\t\tvar extension = smartObject.getString(stringIDToTypeID('fileReference')).split(\".\").pop();\r\n\t\t\t\tfile = convertToLinkedSo(soKey+\".\"+extension);\r\n\t\t\t\ttempFilesToRemove.push(file);\r\n\t\t\t}\r\n\t\t}else if(isKnownPath){\r\n\t\t\tfile = soInst[soKey].file; \r\n\t\t}else{\r\n\t\t\tfile = new File(smartObject.getPath(stringIDToTypeID('link')));\r\n\t\t}\r\n\t\r\n\t\tsoInst[soKey].file = file;\r\n\t\t\r\n\t\t/*clean these variables*/\r\n\t\tvar soMore = desc.getObjectValue(stringIDToTypeID('smartObjectMore'));\r\n\t\tvar soInnerWidth = soMore.getObjectValue(stringIDToTypeID('size')).getDouble(stringIDToTypeID('width'));\r\n\t\tvar soInnerHeight = soMore.getObjectValue(stringIDToTypeID('size')).getDouble(stringIDToTypeID('height'));\r\n\t\tvar widthDeviation = soInnerWidth % 2;\r\n\t\tvar heightDeviation = soInnerHeight % 2;\r\n\t\t\r\n\t\tselectPixels(0 + widthDeviation, 0 + heightDeviation, soInnerWidth, soInnerHeight);\r\n\t\tplaceUnwrap(file);\r\n\t\tdeselectPixels();\r\n\t\t\r\n\t\tunlockAllLocks(); //all SO layers must be selected. Native function for folder ignores groups in CC 2017 and lower\r\n\t\t\r\n\t\textractShared(desc, true);\r\n\t}\r\n\r\n\r\n\tfunction extractWithWindow(desc, soKey){\r\n\t\tvar soCompId = desc.getObjectValue(stringIDToTypeID('smartObjectMore')).getInteger(stringIDToTypeID('comp'));\r\n\t\t\r\n\t\t\r\n\t\t// first check if document was already opened with script, so we can skip some things\r\n\t\tif(documentOpened && openWindowID){\r\n\t\t\tselectDocument(openWindowID);\r\n\t\t}else{        \r\n\t\t\tvar documentsBefore = app.documents.length;\r\n\t\t\texecuteAction( stringIDToTypeID( \"placedLayerEditContents\" ), new ActionDescriptor(), DialogModes.NO );\r\n\t\t\t// we need to be sure that correct document is opened so we will wait\r\n\t\t\tWaitForRedraw ();\r\n\t\t\t\r\n\t\t\tselectAllLayers ();\r\n\t\t\t\r\n\t\t\t// we want layers locking untouched after script execution\r\n\t\t\tif(!hasHistorySnapshot(\"UnsmartSnapshot\")){\r\n \t\t\t\tmakeHistorySnapshot (\"UnsmartSnapshot\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar documentsAfter = app.documents.length;\r\n\t\t\t// here we know if script opened window, so we will not close windows opened before script execution\r\n\t\t\tdocumentOpened = documentsBefore === (documentsAfter - 1);\r\n\t\t\t\r\n\t\t\tunlockEverything();\r\n\t\t}\r\n\t\r\n\t\tvar compActive = getActiveComp(getLayerCompsData()); // this variable could be more global\r\n\t\tvar docSO = app.activeDocument;\r\n\t\topenWindowID = docSO.id;\r\n\t\t\r\n\t\tif(soCompId !== compActive){\r\n\t\t\tif(soCompId === -1){\r\n\t\t\t\tsoCompId = compActive;\r\n\t\t\t}\r\n\t\t\tchangeComp(soCompId); \r\n\t\t}\r\n\t\t\r\n\t\tif(settings.clearSmartObjectContent){\r\n\t\t\ttry{\r\n\t\t\t\tdeleteHiddenLayers();\r\n\t\t\t}catch(e){;}//error if nothing to delete\r\n\t\t}\r\n\t\t\r\n\t\t// check if we don't exceed nesting limit\r\n\t\tvar documentDeepestLevel = lx.getDocumentDeepestLevel();\r\n\t\tvar soCurrentLevel = layerStack.stack.length+1;\r\n\t\tvar isNestingLevelExceeded = (documentDeepestLevel + soCurrentLevel) > 11;\r\n\t\tif(isNestingLevelExceeded){\r\n\t\t\tif(!exceededWarningShown){\r\n\t\t\t\talert(\"Some layer(s) will be skipped. Limit is 10 nested groups/artboards + 1 layer.\\nYour smart object is in level: \"+soCurrentLevel + \"\\nDeepest level in smart object is: \"+documentDeepestLevel+\"\\nYou need remove: \"+(documentDeepestLevel + soCurrentLevel - 11)+\" level(s)\");\r\n\t\t\t}\r\n\t\t\texceededWarningShown = true;\r\n\t\t\t//don't delete layer if layer is not unsmarted\r\n\t\t\tvar indexInArrayToRemove = layerList.findValueIndex(layerKey);\r\n\t\t\tlayerList.splice(indexInArrayToRemove, 1);\r\n\t\t\tif(hasHistorySnapshot(\"UnsmartSnapshot\")){\r\n\t\t\t\trestoreFromSnapshot (\"UnsmartSnapshot\");\r\n\t\t\t}\r\n\t\t\tselectDocument (docMaster.id);\r\n\t\t}else{\r\n\t\t\tduplicateToDocument (docMaster.id);\r\n\t\t\tif(hasHistorySnapshot(\"UnsmartSnapshot\")){ //this could be executed only if layer comp has changed\r\n\t\t\t\trestoreFromSnapshot (\"UnsmartSnapshot\");\r\n\t\t\t}\r\n\t\t\tselectDocument (docMaster.id);\r\n\t\t\textractShared(desc, false);\r\n\t\t}\r\n\t} \r\n\r\n\tfunction extractShared(desc, isViewLess){\r\n\t\tvar soMore = desc.getObjectValue(stringIDToTypeID('smartObjectMore'));\r\n\t\tvar soInnerWidth = soMore.getObjectValue(stringIDToTypeID('size')).getDouble(stringIDToTypeID('width'));\r\n\t\tvar soInnerHeight = soMore.getObjectValue(stringIDToTypeID('size')).getDouble(stringIDToTypeID('height'));\r\n\t\tvar soNonAffineTransform = soMore.getList(stringIDToTypeID('nonAffineTransform'));\r\n\t\tvar soId = desc.getInteger(stringIDToTypeID('layerID'));\r\n\t\tvar soIndex = lx.convertLayerIdToIndex(soId);\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tlx.createGroup ();\r\n\t\tvar groupForSo = docMaster.activeLayer;\r\n\t\tvar groupForSoLayerContext = new LayerContext();\r\n\t\tsoGroupList.push(groupForSo.id);\r\n\t\t\r\n\t\t// Fix Big SO which are bigger than canvas\r\n\t\tif(isViewLess){\r\n\t\t\t// so content doesn't start at 0,0 of selection if is bigger than document and viewless\r\n\t\t\t// first must be created group and this cause that selected is only group and this eliminate risk that we will transform path instead layer\r\n\t\t\tvar docMasterWidth = lx.getDocumentDescriptor(null, null, \"width\").getValue(\"width\") * resolutionRatio;\r\n\t\t\tvar docMasterHeight = lx.getDocumentDescriptor(null, null, \"height\").getValue(\"height\") * resolutionRatio;\r\n\t\t\t\r\n\t\t\tif(docMasterWidth < soInnerWidth || docMasterHeight < soInnerHeight){\r\n\t\t\t\tvar x = (docMasterWidth < soInnerWidth) ? (soInnerWidth-docMasterWidth)/2 : 0;\r\n\t\t\t\tvar y = (docMasterHeight < soInnerHeight) ? (soInnerHeight-docMasterHeight)/2 : 0;\r\n\t\t\t\ttranslate(x,y);\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\t// Set layer order for viewless if needed\r\n\t\t// if group end has +1 than desired index then it already has desired position so it would throw error\r\n\t\tif(/*isViewLess && */soIndex !== (groupForSo.itemIndex - groupForSoLayerContext.deepLengthAbsolute - 1)){\r\n\t\t\tmoveLayerOrder(soIndex, groupForSo.id);\r\n\t\t}\r\n\t\t\r\n\t\t// viewLess method needs different method for removing hidden layers\r\n\t\tif(isViewLess && settings.clearSmartObjectContent){\r\n\t\t\tclearSOContentInParentDoc(groupForSo.id);\r\n\t\t}\r\n\t\t\r\n\t\t// if smart object content has layers outside canvas, we can hide them with mask on unsmarted group\r\n\t\tif(settings.hidePixelsOutsideSoCanvas){\r\n\t\t\tvar left = 0, top = 0;\r\n\t\t\t\r\n\t\t\tvar soBounds = {\r\n\t\t\t\ttop:top,\r\n\t\t\t\tright:left + soInnerWidth,\r\n\t\t\t\tbottom:top + soInnerHeight,\r\n\t\t\t\tleft:left\r\n\t\t\t};\r\n\t\t\r\n\t\t\tvar shouldHaveMask = isSOContentOutsideCanvas(groupForSo.id, soBounds);\r\n\t\t\tif(shouldHaveMask){\r\n\t\t\t\tselectPixels(left, top, soInnerWidth, soInnerHeight);\r\n\t\t\t\tcreateMask ();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// here we move layer to desired position and apply deformation\r\n\t\t\r\n\t\tvar soConerPoints = cornersActionListToObject(soNonAffineTransform);\r\n\t\tvar boolIsSmartObjectDeformed = isSmartObjectDeformed(soConerPoints, soInnerWidth, soInnerHeight);\r\n\t\t\r\n\t\tif(settings.resizeContent && boolIsSmartObjectDeformed){\r\n\t\t\tdoRectangleToQuadrilateral (soInnerWidth, soInnerHeight, soConerPoints);\r\n\t\t\tif(settings.scaleAllLayerEffects){\r\n\t\t\t\tvar trScaleRatio = calculateScaleRatio(soInnerWidth, soInnerHeight, soNonAffineTransform);\r\n\t\t\t\t// only if ratio is not 100,00\r\n\t\t\t\tif((Math.round(trScaleRatio*100)/100) !== 100){\r\n\t\t\t\t\tgroupForSoLayerContext.reinit(); // reinitialize because we removed hidden layer and moved group to the bottom\r\n\t\t\t\t\tvar groupContentIndexes = groupForSoLayerContext.getContentPointers(null,true);\r\n\t\t\t\t\tscaleSelectedLayersStyle(trScaleRatio,groupContentIndexes);\r\n\t\t\t\t\teffectsScaled = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\ttranslate( soConerPoints.leftTop.x, soConerPoints.leftTop.y );\r\n\t\t}\r\n\t\t\r\n\t\tif(settings.preserveSmartObjectProperties && !settings.dontGroupSOContent){\r\n\t\t\tvar hasMask = desc.getBoolean(stringIDToTypeID('hasUserMask'));\r\n\t\t\tvar hasVectorMask = desc.getBoolean(stringIDToTypeID('hasVectorMask'));\r\n\t\t\tvar isVisible = desc.getBoolean(stringIDToTypeID('visible'));\r\n\t\t\tvar hasLinkedLayers = desc.hasKey(stringIDToTypeID('linkedLayerIDs'));\r\n\t\t\tvar colorTag = desc.getEnumerationValue(stringIDToTypeID('color'));\r\n\t\t\tvar hasCustomColorTag = typeIDToStringID(colorTag) !== \"none\";\r\n\t\t\t\r\n\t\t\t// performance condition\r\n\t\t\tif(effectsScaled){\r\n\t\t\t\tlx.selectLayers (groupForSo.id, \"id\");\r\n\t\t\t}\r\n\t\t\tcollapseFolder();\r\n\t\t\trenameLayer(groupForSo.id, desc.getString(stringIDToTypeID('name')));\r\n\t\t\t\r\n\t\t\tif(hasCustomColorTag){\r\n\t\t\t\tsetColorTag(groupForSo.id, \"id\",colorTag);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(canCopyPasteStyle (desc)){\r\n\t\t\t\tpasteLayerStyle ();\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif(!isVisible){ //performance condition\r\n\t\t\t\tgroupForSo.visible = false;\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif(!settings.hidePixelsOutsideSoCanvas && hasMask){\r\n\t\t\t\tduplicateMask(soId,groupForSo.id);\r\n\t\t\t\tvar userMaskEnabled = desc.getBoolean(stringIDToTypeID('userMaskEnabled'));\r\n\t\t\t\tif(!userMaskEnabled){\r\n\t\t\t\t\tdisableMask (groupForSo.id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif(hasVectorMask){\r\n\t\t\t\tduplicateVectorMask(soId,groupForSo.id);\r\n\t\t\t\tlx.selectLayers (soId, \"id\");\r\n\t\t\t\tvar vectorMaskEnabled = isVectorMaskEnabled ();\r\n\t\t\t\t// if has vector mask but mask is disabled\r\n\t\t\t\tif(!vectorMaskEnabled ){\r\n\t\t\t\t\tdisableVectorMask (groupForSo.id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\tmoveAllClippedLayers(groupForSo);\r\n\t\t\t\r\n\t\t\tif(hasLinkedLayers){\r\n\t\t\t\tlinkLinkedLayers(desc,groupForSo);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\t///////////////////////////////\r\n\t// FUNCTIONS CALLED FROM MAIN\r\n\t///////////////////////////////\r\n\r\n\tfunction linkLinkedLayers(desc,groupForSo){\r\n\t\tlx.selectLayers(desc.getInteger(stringIDToTypeID('layerID')), \"id\");\r\n\t\tvar isLinkEnabled = isLinkOnLayerEnabled();\r\n\t\t\r\n\t\tvar links = desc.getList(stringIDToTypeID('linkedLayerIDs'));\r\n\t\tvar linkID = links.getInteger(0);\r\n\t\tvar groupID = groupForSo.id;\r\n\t\tlx.selectLayers([linkID,groupID], \"id\"); \r\n\t\t\r\n\t\tvar desc2111 = new LxActionDescriptor();\r\n\t\tdesc2111.lxRefLayer();\r\n\t\texecuteAction( \"linkSelectedLayers\", desc2111 );\r\n\t\t\r\n\t\tif(!isLinkEnabled){\r\n\t\t   var iddisableLayerLink = stringIDToTypeID( \"disableLayerLink\" );\r\n\t\t\t\tvar desc2202 = new LxActionDescriptor();\r\n\t\t\t\tdesc2202.lxRefLayer(groupID, \"id\");\r\n\t\t\t\tvar idT = charIDToTypeID( \"T   \" );\r\n\t\t\t\t\tvar desc2203 = new ActionDescriptor();\r\n\t\t\t\t\tvar idlnkE = charIDToTypeID( \"lnkE\" );\r\n\t\t\t\t\tdesc2203.putBoolean( idlnkE, false );\r\n\t\t\t\tvar idLyr = charIDToTypeID( \"Lyr \" );\r\n\t\t\t\tdesc2202.putObject( idT, idLyr, desc2203 );\r\n\t\t\texecuteAction( iddisableLayerLink, desc2202, DialogModes.NO );\r\n\t\t}\r\n\t}\r\n\r\n\t//\r\n\t// otevře SO\r\n\tfunction openSO(){\r\n\t\tvar idplacedLayerEditContents = sTID( \"placedLayerEditContents\" );\r\n\t\tvar desc187 = new ActionDescriptor();\r\n\t\texecuteAction( idplacedLayerEditContents, desc187, DialogModes.NO );\r\n\t}\r\n\t\r\n\tfunction placeUnwrap(file){\r\n\t\ttry{\r\n\t\t\tvar desc118 = new ActionDescriptor();\r\n\t\t\tdesc118.putPath( charIDToTypeID( \"null\" ) , file );       \r\n\t\t\tdesc118.putBoolean(stringIDToTypeID(\"unwrapLayers\"), true);\r\n\t\t\texecuteAction( charIDToTypeID( \"Plc \" ), desc118, DialogModes.NO );\r\n\t\t}catch(e){ \r\n\t\t\tundo(); //undo pouze při speciální chybovém kodu TODO\r\n\t\t\tthrow \"Unable to UnSmart object. Check your group nesting levels. Limit is 10. Also check your document color mode.\"\r\n\t\t}\r\n\t}\r\n\r\n\tfunction isLinkOnLayerEnabled(){\r\n\t\ttry{\r\n\t\t\tvar idslct = charIDToTypeID( \"slct\" );\r\n\t\t\t\tvar desc135 = new ActionDescriptor();\r\n\t\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\t\tvar ref63 = new ActionReference();\r\n\t\t\t\t\tvar idMn = charIDToTypeID( \"Mn  \" );\r\n\t\t\t\t\tvar idMnIt = charIDToTypeID( \"MnIt\" );\r\n\t\t\t\t\tvar idplacedLayerEditContents = stringIDToTypeID( \"selectLinkedLayers\" );\r\n\t\t\t\t\tref63.putEnumerated( idMn, idMnIt, idplacedLayerEditContents );\r\n\t\t\t\tdesc135.putReference( idnull, ref63 );\r\n\t\t\texecuteAction( idslct, desc135, DialogModes.NO );\r\n\t\t\treturn true;\r\n\t\t}catch(e){\r\n\t\t\tif(e.number == -25920){ // menu item not available\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\t//\r\n\t// changes comp inside smart object\r\n\tfunction changeComp(id){\r\n\t\tif(id===0){\r\n\t\t\ttry{\r\n\t\t\tvar idresetFromComp = stringIDToTypeID( \"resetFromComp\" );\r\n\t\t\tvar desc2707 = new ActionDescriptor();\r\n\t\t\texecuteAction( idresetFromComp, desc2707, DialogModes.NO );\r\n\t\t\t}catch(e){}//you cant reset comp if last document state is equal to current comp\r\n\t\t}else{\r\n\t\t\tvar idapplyComp = sTID( \"applyComp\" );\r\n\t\t\t\tvar desc189 = new ActionDescriptor();\r\n\t\t\t\tvar idnull = cTID( \"null\" );\r\n\t\t\t\t\tvar ref97 = new ActionReference();\r\n\t\t\t\t\tvar idcompsClass = sTID( \"compsClass\" );\r\n\t\t\t\t\tref97.putIdentifier( idcompsClass, id );\r\n\t\t\t\tdesc189.putReference( idnull, ref97 );\r\n\t\t\texecuteAction( idapplyComp, desc189, DialogModes.NO );\r\n\t\t}\r\n\t}\r\n\r\n\tfunction isInLockedFolder(layer){\r\n\t\t\r\n\t\twhile(layer.parent.typename != \"Document\"){\r\n\t\t\tlayer = layer.parent;\r\n\t\t\tif(layer.allLocked){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction hasHistorySnapshot(snapshotName){\r\n\t\ttry{\r\n\t\t\tvar ref = new ActionReference();\r\n\t\t\tvar idSnpS = charIDToTypeID( \"SnpS\" );\r\n\t\t\tref.putName( idSnpS, snapshotName );\r\n\t\t\texecuteActionGet( ref );\t\t\r\n\t\t\treturn true;\r\n\t\t}catch(e){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t// IDs\r\n\tfunction getClippedLayersList(soDesc){\r\n\t\tvar result = new Array();\r\n\t\t// we need fresh soIndex so we take ID and look for new updated index\r\n\t\tvar soIndex = lx.convertLayerIdToIndex(soDesc.getInteger(stringIDToTypeID('layerID')));\r\n\t\tvar limitLayers = soDesc.getInteger(stringIDToTypeID('count'));\r\n\t\tvar bgCounter = 0;\r\n\t\ttry {\r\n\t\t\tvar dummy = docMaster.backgroundLayer;\r\n\t\t\tbgCounter=1;\r\n\t\t}catch(e){} //do nothing\r\n\t\t\r\n\t\tfor(soIndex; soIndex <= limitLayers /*break inside*/; soIndex++){\r\n\t\t\tvar testedLayerDesc = lx.getLayerDescriptor (soIndex-bgCounter);\r\n\t\t\tvar isClipped = testedLayerDesc.getBoolean(stringIDToTypeID('group'));\r\n\t\t\tvar fromID = testedLayerDesc.getInteger(stringIDToTypeID('layerID'));\r\n\t\t\tif(!isClipped){break}\r\n\t\t\tresult.push(fromID)\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction moveAllClippedLayers(layerSet){\r\n\t\tvar layerSetIndex = getLayerDescriptorByID(layerSet.id).getInteger(stringIDToTypeID('itemIndex'));\r\n\t\t\r\n\t\tfor(var i = clippedLayers.length-1, j=0; i >= 0; i--){\r\n\t\t\tvar fromID = clippedLayers[i];\r\n\t\t\tvar idmove = charIDToTypeID( \"move\" );\r\n\t\t\t\tvar desc102 = new ActionDescriptor();\r\n\t\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\t\tvar ref60 = new ActionReference();\r\n\t\t\t\t\tvar idLyr = charIDToTypeID( \"Lyr \" );\r\n\t\t\t\t\tref60.putIdentifier( idLyr, fromID );\r\n\t\t\t\t\t\r\n\t\t\t\tdesc102.putReference( idnull, ref60 );\r\n\t\t\t\tvar idT = charIDToTypeID( \"T   \" );\r\n\t\t\t\t\tvar ref61 = new ActionReference();\r\n\t\t\t\t\tref61.putIndex( idLyr, layerSetIndex ); //global variable\r\n\t\t\t\tdesc102.putReference( idT, ref61 );\r\n\t\t\t\tvar idAdjs = charIDToTypeID( \"Adjs\" );\r\n\t\t\t\tdesc102.putBoolean( idAdjs, false );\r\n\t\t\t\tvar idVrsn = charIDToTypeID( \"Vrsn\" );\r\n\t\t\t\tdesc102.putInteger( idVrsn, 5 );\r\n\t\t\t\t\r\n\t\t\texecuteAction( idmove, desc102, DialogModes.NO );\r\n\t\t\t\r\n\t\t\t//because layer paste between layer and clipped layer is clipped by default\r\n\t\t\tif(j===0){\r\n\t\t\t\tvar idGrpL = charIDToTypeID( \"GrpL\" );\r\n\t\t\t\t\tvar desc104 = new ActionDescriptor();\r\n\t\t\t\t\tdesc104.putReference( idnull, ref60 );\r\n\t\t\t\texecuteAction( idGrpL, desc104, DialogModes.NO );\r\n\t\t\t}\r\n\t\t\tj++;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction unlockEverything(){\r\n\t\tif(lx.existsBackgroundLayer()){\r\n\t\t\tunlockBackground();\r\n\t\t}\r\n\t\tunlockAllLocks();\r\n\r\n\t\tfunction unlockBackground() {\r\n\t\tvar idsetd = cTID( \"setd\" );\r\n\t\t\tvar desc1675 = new ActionDescriptor();\r\n\t\t\t\tvar ref1104 = new ActionReference();\r\n\t\t\t\tref1104.putProperty(  cTID('Lyr '),  cTID('Bckg'));\r\n\t\t\tdesc1675.putReference( cTID('null'), ref1104 );\r\n\t\t\t\tvar desc1676 = new ActionDescriptor();\r\n\t\t\t\tdesc1676.putUnitDouble(  cTID('Opct'),  cTID('#Prc'), 100.000000 );\r\n\t\t\t\tdesc1676.putEnumerated(  cTID('Md  '),  cTID('BlnM'),  cTID('Nrml'));\r\n\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\tdesc1675.putObject( cTID('T   '), cTID('Lyr '), desc1676 );\r\n\t\t\tdesc1675.putInteger( cTID('LyrI'), 7 );\r\n\t\texecuteAction( idsetd, desc1675, DialogModes.NO );\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getLayerDescriptorByID(id){\r\n\t\tvar ref = new ActionReference();  \r\n\t\tref.putIdentifier( cTID( \"Lyr \" ), id );    \r\n\t\tvar desc = executeActionGet(ref); \r\n\t\treturn desc;\r\n\t}\r\n\r\n\tfunction getSOInstances(listID){\r\n\t\tvar so = {};\r\n\r\n\t\tfor(var i = 0, len = listID.length; i < len; i++){\r\n\t\t\tvar desc = getLayerDescriptorByID(listID[i]);\r\n\t\t\tvar soID = desc.getObjectValue(stringIDToTypeID('smartObjectMore')).getString(stringIDToTypeID('ID'));\r\n\t\t\tvar compID = desc.getObjectValue(stringIDToTypeID('smartObjectMore')).getInteger(stringIDToTypeID('comp'));\r\n\t\t\tvar hasComps = desc.getObjectValue(stringIDToTypeID('smartObject')).getObjectValue(stringIDToTypeID('compsList')).hasKey(stringIDToTypeID('compList'))\r\n\t\t\t\r\n\t\t\tvar layerID = listID[i].toString();\r\n\t\t\tso[soID] ? null : so[soID] = new Object();\r\n\t\t\tso[soID].windowMethod = hasComps;\r\n\t\t\tso[soID][compID] ? null : so[soID][compID] = new Object();\r\n\t\t\tso[soID][compID][layerID] = desc;\r\n\t\t}\r\n\r\n\t\treturn so;\r\n\t}\r\n\r\n\tfunction unlockAllLocks() {\r\n\t\tvar idsetd = cTID( \"setd\" );\r\n\t\tvar desc50 = new ActionDescriptor();\r\n\t\tvar idnull = cTID( \"null\" );\r\n\t\t\tvar ref28 = new ActionReference();\r\n\t\t\tref28.putEnumerated( cTID('Lyr '), cTID('Ordn'), cTID('Trgt') );\r\n\t\tdesc50.putReference( idnull, ref28 );\r\n\t\tvar idT = cTID( \"T   \" );\r\n\t\t\tvar desc51 = new ActionDescriptor();\r\n\t\t\tvar idlayerLocking = sTID( \"layerLocking\" );\r\n\t\t\t\tvar desc52 = new ActionDescriptor();\r\n\t\t\t\tvar idprotectNone = sTID( \"protectNone\" );\r\n\t\t\t\tdesc52.putBoolean( idprotectNone, true );\r\n\t\t\tvar idlayerLocking = sTID( \"layerLocking\" );\r\n\t\t\tdesc51.putObject( idlayerLocking, idlayerLocking, desc52 );\r\n\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\tdesc50.putObject( idT, idLyr, desc51 );\r\n\texecuteAction( idsetd, desc50, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction deleteHiddenLayers(){\r\n\t\tvar idDlt = cTID( \"Dlt \" );\r\n\t\t\tvar desc213 = new ActionDescriptor();\r\n\t\t\tvar idnull = cTID( \"null\" );\r\n\t\t\t\tvar ref110 = new ActionReference();\r\n\t\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\t\tvar idOrdn = cTID( \"Ordn\" );\r\n\t\t\t\tvar idhidden = sTID( \"hidden\" );\r\n\t\t\t\tref110.putEnumerated( idLyr, idOrdn, idhidden );\r\n\t\t\tdesc213.putReference( idnull, ref110 );\r\n\t\texecuteAction( idDlt, desc213, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction selectAllLayers() {\r\n\t\tvar ref = new ActionReference();\r\n\t\tref.putEnumerated(cTID('Lyr '), cTID('Ordn'), cTID('Trgt'));\r\n\t\tvar desc = new ActionDescriptor();\r\n\t\tdesc.putReference(cTID('null'), ref);\r\n\texecuteAction(sTID('selectAllLayers'), desc, DialogModes.NO);\r\n\t}\r\n\t\r\n\tfunction convertToLinkedSo(filename){\r\n\t\tvar file = new File(Folder.temp+\"/\"+filename);\r\n\t\t\r\n\t\tvar idplacedLayerConvertToLinked = stringIDToTypeID( \"placedLayerConvertToLinked\" );\r\n\t\t\tvar desc78 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref46 = new ActionReference();\r\n\t\t\t\tvar idLyr = charIDToTypeID( \"Lyr \" );\r\n\t\t\t\tvar idOrdn = charIDToTypeID( \"Ordn\" );\r\n\t\t\t\tvar idTrgt = charIDToTypeID( \"Trgt\" );\r\n\t\t\t\tref46.putEnumerated( idLyr, idOrdn, idTrgt );\r\n\t\t\tdesc78.putReference( idnull, ref46 );\r\n\t\t\tvar idUsng = charIDToTypeID( \"Usng\" );\r\n\t\t\tdesc78.putPath( idUsng, file );\r\n\t\texecuteAction( idplacedLayerConvertToLinked, desc78, DialogModes.NO );\r\n\t\t\r\n\t\treturn file;\r\n\t}\r\n\r\n\t\r\n\tfunction duplicateToDocument(documentID){\r\n\t\ttry{\r\n\t\t\tvar idDplc = cTID( \"Dplc\" );\r\n\t\t\t\tvar desc231 = new ActionDescriptor();\r\n\t\t\t\tvar idnull = cTID( \"null\" );\r\n\t\t\t\t\tvar ref121 = new ActionReference();\r\n\t\t\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\t\t\tvar idOrdn = cTID( \"Ordn\" );\r\n\t\t\t\t\tvar idTrgt = cTID( \"Trgt\" );\r\n\t\t\t\t\tref121.putEnumerated( idLyr, idOrdn, idTrgt );\r\n\t\t\t\tdesc231.putReference( idnull, ref121 );\r\n\t\t\t\tvar idT = cTID( \"T   \" );\r\n\t\t\t\t\tvar ref122 = new ActionReference();\r\n\t\t\t\t\tvar idDcmn = cTID( \"Dcmn\" );\r\n\t\t\t\t\tref122.putIdentifier( idDcmn, documentID );\r\n\t\t\t\tdesc231.putReference( idT, ref122 );\r\n\t\t\t\tvar idIdnt = cTID( \"Idnt\" );\r\n\t\t\texecuteAction( idDplc, desc231, DialogModes.NO );\r\n\t\t}\r\n\t\tcatch(e){\r\n\t\t\t\talert(\"Can't duplicate content\")\r\n\t\t}\r\n\t}\r\n\r\n\tfunction isSOContentOutsideCanvas(layerID, soBounds){\r\n\t\t\r\n\t\tvar index = lx.convertLayerIdToIndex(layerID);\r\n\t\tvar groupID = stringIDToTypeID('group');\r\n\t\tvar sectionID = stringIDToTypeID('layerSection');\r\n\t\tvar endID = stringIDToTypeID('layerSectionEnd');\r\n\t\tvar startID = stringIDToTypeID('layerSectionStart');\r\n\t\tvar boundsID = stringIDToTypeID('bounds');\r\n\t\tvar leftID = stringIDToTypeID('left');\r\n\t\tvar rightID = stringIDToTypeID('right');\r\n\t\tvar topID = stringIDToTypeID('top');\r\n\t\tvar bottomID = stringIDToTypeID('bottom');\r\n\r\n\t\tfor(var i = index-1, level=0; level >= 0 ; i--){\r\n\t\t\tvar desc = lx.getLayerDescriptor(i);\r\n\t\t\tvar clipped = desc.getBoolean(groupID);\r\n\t\t\t\r\n\t\t\tif(clipped){continue;}\r\n\t\t\t\r\n\t\t\tvar layerSection = desc.getEnumerationValue(sectionID);\r\n\t\t\tif(layerSection === startID){\r\n\t\t\t\tlevel++\r\n\t\t\t}\r\n\t\t\telse if(layerSection === endID){\r\n\t\t\t\tlevel--\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tvar bounds = desc.getObjectValue(boundsID);\r\n\t\t\t   \r\n\t\t\t\tvar isOutside = (\r\n\t\t\t\t\tsoBounds.left > bounds.getUnitDoubleValue(leftID) ||\r\n\t\t\t\t\tsoBounds.top > bounds.getUnitDoubleValue(topID) ||\r\n\t\t\t\t\tsoBounds.right < bounds.getUnitDoubleValue(rightID) ||\r\n\t\t\t\t\tsoBounds.bottom < bounds.getUnitDoubleValue(bottomID)\r\n\t\t\t\t);\r\n\t\t\t\tif(isOutside){\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction clearSOContentInParentDoc(layerID){\r\n\t\t\r\n\t\tvar index = lx.convertLayerIdToIndex(layerID);\r\n\t\tvar deleteList = new Array();\r\n\t\tvar sectionID = stringIDToTypeID('layerSection');\r\n\t\tvar endID = stringIDToTypeID('layerSectionEnd');\r\n\t\tvar startID = stringIDToTypeID('layerSectionStart');\r\n\t\tvar visibleID = stringIDToTypeID('visible');\r\n\r\n\t\tfor(var i = index-1, level=0; level >= 0 ; i--){\r\n\t\t\tvar desc = lx.getLayerDescriptor(i);\r\n\t\t\tvar visible = desc.getBoolean(visibleID);\r\n\t\t\t\r\n\t\t\tif(!visible){\r\n\t\t\t\tdeleteList.push(lx.convertLayerIndexToId(i));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar layerSection = desc.getEnumerationValue(sectionID);\r\n\t\t\tif(layerSection===startID){\r\n\t\t\t\tlevel++\r\n\t\t\t}\r\n\t\t\telse if(layerSection===endID){\r\n\t\t\t\tlevel--\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfor(var i = deleteList.length-1; i >= 0; i--){\r\n\t\t\tlx.deleteLayers(deleteList[i],\"id\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction isSmartObjectDeformed(cornerPoints, innerWidth, innerHeight){\r\n\t\tvar cp = cornerPoints;\r\n\t\t\r\n\t\tvar notRectangle = !(cp.leftTop.x === cp.leftBottom.x && cp.rightTop.x === cp.rightBottom.x && cp.leftTop.y === cp.rightTop.y && cp.leftBottom.y === cp.rightBottom.y);\r\n\t\tvar notSizeMatch = !((cp.rightTop.x - cp.leftTop.x === innerWidth) && (cp.leftBottom.y - cp.leftTop.y === innerHeight))\r\n\t\tvar rotatedOrFlipped = !(cp.leftTop.x < cp.rightTop.x && cp.leftTop.y < cp.rightBottom.y)\r\n\t\t\r\n\t\tvar isDeformed = (notRectangle || notSizeMatch || rotatedOrFlipped)\r\n\t\treturn isDeformed;\r\n\t\t\r\n\t}\r\n\r\n\tfunction cornersActionListToObject(nonAffineTransform){\r\n\t\tvar result = {};\r\n\t\tresult.leftTop = {\r\n\t\t\tx:nonAffineTransform.getDouble(0), \r\n\t\t\ty:nonAffineTransform.getDouble(1)\r\n\t\t};\r\n\t\tresult.rightTop = {\r\n\t\t\tx:nonAffineTransform.getDouble(2), \r\n\t\t\ty:nonAffineTransform.getDouble(3)\r\n\t\t};\r\n\t\tresult.rightBottom = {\r\n\t\t\tx:nonAffineTransform.getDouble(4), \r\n\t\t\ty:nonAffineTransform.getDouble(5)\r\n\t\t};\r\n\t\tresult.leftBottom = {\r\n\t\t\tx:nonAffineTransform.getDouble(6), \r\n\t\t\ty:nonAffineTransform.getDouble(7)\r\n\t\t};\r\n\t\t\r\n\t\r\n\t\treturn result;    \r\n\t}\r\n\r\n\tfunction closeWindow(documentID){\r\n\t\tvar idCls = cTID( \"Cls \" );\r\n\t\t\tvar desc255 = new ActionDescriptor();\r\n\t\t\tvar idSvng = cTID( \"Svng\" );\r\n\t\t\tvar idYsN = cTID( \"YsN \" );\r\n\t\t\tvar idN = cTID( \"N   \" );\r\n\t\t\tdesc255.putEnumerated( idSvng, idYsN, idN );\r\n\t\t\tvar idDocI = cTID( \"DocI\" );\r\n\t\t\tdesc255.putInteger( idDocI, documentID );\r\n\t\t\tvar idforceNotify = sTID( \"forceNotify\" );\r\n\t\t\tdesc255.putBoolean( idforceNotify, true );\r\n\t\texecuteAction( idCls, desc255, DialogModes.NO );\r\n\t}\r\n\r\n\t//\r\n\t// hide selected layer(s)\r\n\tfunction hideLayer(){\r\n\t\tvar idHd = cTID( \"Hd  \" );\r\n\t\t\tvar desc19 = new ActionDescriptor();\r\n\t\t\tvar idnull = cTID( \"null\" );\r\n\t\t\t\tvar list9 = new ActionList();\r\n\t\t\t\t\tvar ref15 = new ActionReference();\r\n\t\t\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\t\t\tvar idOrdn = cTID( \"Ordn\" );\r\n\t\t\t\t\tvar idTrgt = cTID( \"Trgt\" );\r\n\t\t\t\t\tref15.putEnumerated( idLyr, idOrdn, idTrgt );\r\n\t\t\t\tlist9.putReference( ref15 );\r\n\t\t\tdesc19.putList( idnull, list9 );\r\n\t\texecuteAction( idHd, desc19, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction copyLayerStyle(){\r\n\t\tvar idCpFX = cTID( \"CpFX\" );\r\n\t\texecuteAction( idCpFX, undefined, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction pasteLayerStyle(){\r\n\t\tvar idPaFX = cTID( \"PaFX\" );\r\n\t\t\tvar desc286 = new ActionDescriptor();\r\n\t\t\tvar idallowPasteFXOnLayerSet = sTID( \"allowPasteFXOnLayerSet\" );\r\n\t\t\tdesc286.putBoolean( idallowPasteFXOnLayerSet, true );\r\n\t\texecuteAction( idPaFX, desc286, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction duplicateVectorMask(idFrom,idAt){\r\n\t\tvar idMk = cTID( \"Mk  \" );\r\n\t\t\tvar desc376 = new ActionDescriptor();\r\n\t\t\tvar idnull = cTID( \"null\" );\r\n\t\t\t\tvar ref270 = new ActionReference();\r\n\t\t\t\tvar idPath = cTID( \"Path\" );\r\n\t\t\t\tref270.putClass( idPath );\r\n\t\t\tdesc376.putReference( idnull, ref270 );\r\n\t\t\tvar tidAt = cTID( \"At  \" );\r\n\t\t\t\tvar ref271 = new ActionReference();\r\n\t\t\t\tvar idvectorMask = sTID( \"vectorMask\" );\r\n\t\t\t\tref271.putEnumerated( idPath, idPath, idvectorMask );\r\n\t\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\t\tref271.putIdentifier( idLyr, idAt );\r\n\t\t\tdesc376.putReference( tidAt, ref271 );\r\n\t\t\tvar idUsng = cTID( \"Usng\" );\r\n\t\t\t\tvar ref272 = new ActionReference();\r\n\t\t\t\tref272.putEnumerated( idPath, idPath, idvectorMask );\r\n\t\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\t\tref272.putIdentifier( idLyr, idFrom );\r\n\t\t\tdesc376.putReference( idUsng, ref272 );\r\n\t\t\tvar idDplc = cTID( \"Dplc\" );\r\n\t\t\tdesc376.putBoolean( idDplc, true );\r\n\t\texecuteAction( idMk, desc376, DialogModes.NO );\r\n\t}\r\n\t\r\n\tfunction duplicateMask(idFrom,idAt){\r\n\t\tvar idMk = cTID( \"Mk  \" );\r\n\t\t\tvar desc381 = new ActionDescriptor();\r\n\t\t\tvar idNw = cTID( \"Nw  \" );\r\n\t\t\tvar idChnl = cTID( \"Chnl\" );\r\n\t\t\tvar tidAt = cTID( \"At  \" );\r\n\t\t\tdesc381.putClass( idNw, idChnl );\r\n\t\t\t\tvar ref277 = new ActionReference();\r\n\t\t\t\tvar idChnl = cTID( \"Chnl\" );\r\n\t\t\t\tvar idMsk = cTID( \"Msk \" );\r\n\t\t\t\tref277.putEnumerated( idChnl, idChnl, idMsk );\r\n\t\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\t\tref277.putIdentifier( idLyr, idAt );\r\n\t\t\tdesc381.putReference( tidAt, ref277 );\r\n\t\t\tvar idUsng = cTID( \"Usng\" );\r\n\t\t\t\tvar ref278 = new ActionReference();\r\n\t\t\t\tvar idChnl = cTID( \"Chnl\" );\r\n\t\t\t\tvar idMsk = cTID( \"Msk \" );\r\n\t\t\t\tref278.putEnumerated( idChnl, idChnl, idMsk );\r\n\t\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\t\tref278.putIdentifier( idLyr, idFrom  );\r\n\t\t\tdesc381.putReference( idUsng, ref278 );\r\n\t\t\tvar idDplc = cTID( \"Dplc\" );\r\n\t\t\tdesc381.putBoolean( idDplc, true );\r\n\t\texecuteAction( idMk, desc381, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction disableVectorMask(id){\r\n\t\tvar idsetd = charIDToTypeID( \"setd\" );\r\n\t\t\tvar desc1320 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref703 = new ActionReference();\r\n\t\t\t\tvar idLyr = charIDToTypeID( \"Lyr \" );\r\n\t\t\t\tref703.putIdentifier( idLyr, id);\r\n\t\t\tdesc1320.putReference( idnull, ref703 );\r\n\t\t\tvar idT = charIDToTypeID( \"T   \" );\r\n\t\t\t\tvar desc1321 = new ActionDescriptor();\r\n\t\t\t\tvar idvectorMaskEnabled = stringIDToTypeID( \"vectorMaskEnabled\" );\r\n\t\t\t\tdesc1321.putBoolean( idvectorMaskEnabled, false );\r\n\t\t\tdesc1320.putObject( idT, idLyr, desc1321 );\r\n\t\texecuteAction( idsetd, desc1320, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction disableMask(id){\r\n\t\tvar idsetd = charIDToTypeID( \"setd\" );\r\n\t\t\tvar desc1327 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref707 = new ActionReference();\r\n\t\t\t\tvar idLyr = charIDToTypeID( \"Lyr \" );\r\n\t\t\t\tref707.putIdentifier( idLyr, id);\r\n\t\t\tdesc1327.putReference( idnull, ref707 );\r\n\t\t\tvar idT = charIDToTypeID( \"T   \" );\r\n\t\t\t\tvar desc1328 = new ActionDescriptor();\r\n\t\t\t\tvar idUsrM = charIDToTypeID( \"UsrM\" );\r\n\t\t\t\tdesc1328.putBoolean( idUsrM, false );\r\n\t\t\tdesc1327.putObject( idT, idLyr, desc1328 );\r\n\t\texecuteAction( idsetd, desc1327, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction moveLayerOrder(toIndex, fromID){\r\n\t\tvar idmove = cTID( \"move\" );\r\n\t\t\tvar desc594 = new ActionDescriptor();\r\n\t\t\tvar idnull = cTID( \"null\" );\r\n\t\t\t\tvar ref449 = new ActionReference();\r\n\t\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\t\tvar idOrdn = cTID( \"Ordn\" );\r\n\t\t\t\tvar idTrgt = cTID( \"Trgt\" );\r\n\t\t\t\tref449.putEnumerated( idLyr, idOrdn, idTrgt );\r\n\t\t\tdesc594.putReference( idnull, ref449 );\r\n\t\t\tvar idT = cTID( \"T   \" );\r\n\t\t\t\tvar ref450 = new ActionReference();\r\n\t\t\t\tvar idLyr = cTID( \"Lyr \" );\r\n\t\t\t\tref450.putIndex( idLyr, toIndex);\r\n\t\t\tdesc594.putReference( idT, ref450 );\r\n\t\t\tvar idAdjs = cTID( \"Adjs\" );\r\n\t\t\tdesc594.putBoolean( idAdjs, false );\r\n\t\t\tvar idVrsn = cTID( \"Vrsn\" );\r\n\t\t\tdesc594.putInteger( idVrsn, 5 );\r\n\t\t\tvar idLyrI = cTID( \"LyrI\" );\r\n\t\t\t\tvar list253 = new ActionList();\r\n\t\t\t\tlist253.putInteger( fromID );\r\n\t\t\tdesc594.putList( idLyrI, list253 );\r\n\t\t\r\n\t\ttry{\r\n\t\t\texecuteAction( idmove, desc594, DialogModes.NO );\r\n\t\t}catch(e){\r\n\t\t\talert(e.message);\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\t// A helper function for debugging\r\n\t// It also helps the user see what is going on\r\n\t// if you turn it off for this example you\r\n\t// get a flashing cursor for a number time\r\n\tfunction WaitForRedraw()\r\n\t{\r\n\t\tvar eventWait = cTID(\"Wait\")\r\n\t\tvar enumRedrawComplete = cTID(\"RdCm\")\r\n\t\tvar typeState = cTID(\"Stte\")\r\n\t\tvar keyState = cTID(\"Stte\")\r\n\t\tvar desc = new ActionDescriptor()\r\n\t\tdesc.putEnumerated(keyState, typeState, enumRedrawComplete)\r\n\t\texecuteAction(eventWait, desc, DialogModes.NO)\r\n\t}\r\n\r\n\tfunction filterValidLayers(indexList){\r\n\t\tvar result = [];\r\n\t\t\r\n\t\tfor(var i = 0, len=indexList.length; i < len; i++){\r\n\t\t\tvar notLinkMissing = true;\r\n\t\t\r\n\t\t\tvar desc = getLayerDescriptorByID(indexList[i]);\r\n\t\t\t\r\n\t\t\tvar isSmartObjectLayer = desc.getInteger(sTID('layerKind')) == 5;\r\n\t\t\t\r\n\t\t\tif(isSmartObjectLayer){\r\n\t\t\t\tvar notProtectAll = !desc.getObjectValue(sTID('layerLocking')).getBoolean(sTID('protectAll'));\r\n\t\t\t\tvar notProtectPosition = !desc.getObjectValue(sTID('layerLocking')).getBoolean(sTID('protectPosition'));\r\n\t\t\t\tvar notVector = desc.getObjectValue(sTID('smartObject')).getEnumerationValue(sTID('placed')) === sTID(\"rasterizeContent\");\r\n\t\t\t\tvar hasKeyLinkMissing = desc.getObjectValue(sTID('smartObject')).hasKey(sTID('linkMissing'));\r\n\t\t\t\t\r\n\t\t\t\tif(hasKeyLinkMissing){\r\n\t\t\t\t\tnotLinkMissing = !desc.getObjectValue(sTID('smartObject')).getBoolean(sTID('linkMissing'));\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\tif(notProtectAll && notProtectPosition && notVector && notLinkMissing){\r\n\t\t\t\t\tresult.push(indexList[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction collapseFolder(){\r\n\t\tvar idsetd = charIDToTypeID( \"setd\" );\r\n\t\t\tvar desc2 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref1 = new ActionReference();\r\n\t\t\t\tvar idPrpr = charIDToTypeID( \"Prpr\" );\r\n\t\t\t\tvar idTxtS = stringIDToTypeID( \"layerSectionExpanded\" );\r\n\t\t\t\tref1.putProperty( idPrpr, idTxtS );\r\n\t\t\t\tvar idLyr = charIDToTypeID( \"Lyr \" );\r\n\t\t\t\tvar idOrdn = charIDToTypeID( \"Ordn\" );\r\n\t\t\t\tvar idTrgt = charIDToTypeID( \"Trgt\" );\r\n\t\t\t\tref1.putEnumerated( idLyr, idOrdn, idTrgt );\r\n\t\t\tdesc2.putReference( idnull, ref1 );\r\n\t\t\tvar idT = charIDToTypeID( \"T   \" );\r\n\t\t\tdesc2.putBoolean( charIDToTypeID( \"T   \" ), false );\r\n\t\t\tdesc2.putBoolean( stringIDToTypeID( \"recursive\" ), true );\r\n\t\texecuteAction( idsetd, desc2, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction translate(x,y){\r\n\t\tvar desc = new LxActionDescriptor();\r\n\t\tdesc.lxRefLayer();\r\n\t\tvar descTo = new LxActionDescriptor();\r\n\t\tdescTo.putUnitDouble(\"horizontal\", \"pixelsUnit\", x);\r\n\t\tdescTo.putUnitDouble(\"vertical\", \"pixelsUnit\", y);\r\n\t\tdesc.putObject(\"to\",\"offset\", descTo);\r\n\t\t\r\n\t\ttry{\r\n\t\t\texecuteAction( \"move\", desc);\r\n\t\t}catch(e){\r\n\t\t\t// e.g. empty bounding box... no pixel to transform \r\n\t\t}\r\n\t}\r\n\r\n\tfunction calculateScaleRatio(width, height, soPoints){\r\n\t\tvar soInnerPerimeter = (width*2 + height*2);\r\n\t\tvar soDeformedPerimeter = 0;\r\n\t\t\r\n\t\tvar leftTopX = soPoints.getDouble(0);\r\n\t\tvar leftTopY = soPoints.getDouble(1);\r\n\t\tvar rightTopX = soPoints.getDouble(2) - leftTopX;\r\n\t\tvar rightTopY = soPoints.getDouble(3) - leftTopY;\r\n\t\tvar rightBottomX = soPoints.getDouble(4) - leftTopX;\r\n\t\tvar rightBottomY = soPoints.getDouble(5) - leftTopY;\r\n\t\tvar leftBottomX = soPoints.getDouble(6) - leftTopX;\r\n\t\tvar leftBottomY = soPoints.getDouble(7) - leftTopY;\r\n\t\tleftTopX = 0;\r\n\t\tleftTopY = 0;\r\n\t\t\r\n\t\tsoDeformedPerimeter += edgeLength (leftTopX, leftTopY, rightTopX, rightTopY);\r\n\t\tsoDeformedPerimeter += edgeLength (rightTopX, rightTopY, rightBottomX, rightBottomY);\r\n\t\tsoDeformedPerimeter += edgeLength (rightBottomX, rightBottomY, leftBottomX, leftBottomY);\r\n\t\tsoDeformedPerimeter += edgeLength (leftBottomX, leftBottomY, leftTopX, leftTopY);\r\n\t\t\r\n\t\tfunction edgeLength (xa, ya, xb, yb){\r\n\t\t\treturn Math.sqrt( Math.pow(xb - xa, 2) + Math.pow(yb - ya,2));\r\n\t\t}\r\n\t\t\r\n\t\tvar result = (soDeformedPerimeter / soInnerPerimeter) * 100;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction doRectangleToQuadrilateral(width, height, cornerPoints){\r\n\t\tvar right = width, bottom = height;\r\n\t\tvar quadRect = new ActionList();\r\n\t\t\r\n\t\tquadRect.putUnitDouble(charIDToTypeID('#Pxl'),0); //leftTop\r\n\t\tquadRect.putUnitDouble(charIDToTypeID('#Pxl'),0);\r\n\r\n\t\tquadRect.putUnitDouble(charIDToTypeID('#Pxl'),right); //rightBottom\r\n\t\tquadRect.putUnitDouble(charIDToTypeID('#Pxl'),bottom);\r\n\t\t\r\n\t\tfunction transform(quadRect, points, rightBottomX, rightBottomY){\r\n\t\t\tvar args = new ActionDescriptor();\r\n\t\t\tvar quadCorners = new ActionList();\r\n\t\t\t\r\n\t\t\tquadCorners.putUnitDouble( charIDToTypeID('#Pxl'), points.leftTop.x);   //left top\r\n\t\t\tquadCorners.putUnitDouble( charIDToTypeID('#Pxl'), points.leftTop.y);\r\n\t\t\tquadCorners.putUnitDouble( charIDToTypeID('#Pxl'), points.rightTop.x);   //right top\r\n\t\t\tquadCorners.putUnitDouble( charIDToTypeID('#Pxl'), points.rightTop.y);\r\n\t\t\tquadCorners.putUnitDouble( charIDToTypeID('#Pxl'), rightBottomX || points.rightBottom.x);         //right bottom\r\n\t\t\tquadCorners.putUnitDouble( charIDToTypeID('#Pxl'), rightBottomY || points.rightBottom.y); \r\n\t\t\tquadCorners.putUnitDouble( charIDToTypeID('#Pxl'), points.leftBottom.x);   //left bottom\r\n\t\t\tquadCorners.putUnitDouble( charIDToTypeID('#Pxl'), points.leftBottom.y);\r\n\r\n\t\t\targs.putList( stringIDToTypeID(\"rectangle\"), quadRect );\r\n\t\t\targs.putList( stringIDToTypeID(\"quadrilateral\"), quadCorners );\r\n\r\n\t\t\texecuteAction( charIDToTypeID('Trnf'), args );\r\n\t\t}\r\n\t\r\n\t\ttry{\r\n\t\t\ttransform(quadRect, cornerPoints);\r\n\t\t}catch(e){\r\n\t\t\t// we can't do only parallelograms if smartObject content contains text layers or vector smart objects\r\n\t\t\tvar rightBottomX = cornerPoints.leftBottom.x + (cornerPoints.rightTop.x - cornerPoints.leftTop.x);\r\n\t\t\tvar rightBottomY = cornerPoints.leftBottom.y + (cornerPoints.rightTop.y - cornerPoints.leftTop.y);\r\n\t\t\t\r\n\t\t\ttry{\r\n\t\t\t\ttransform(quadRect, cornerPoints, rightBottomX, rightBottomY);\r\n\t\t\t}catch(e){\r\n\t\t\t\t/* e.g. empty bounding box... no pixel to transform */\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction canCopyPasteStyle(desc){\r\n\t\tvar result = desc.hasKey(stringIDToTypeID('layerEffects')) || desc.getEnumerationValue(stringIDToTypeID('mode')) !== stringIDToTypeID(\"normal\") || desc.getInteger(stringIDToTypeID('opacity')) !== 255 || desc.getInteger(stringIDToTypeID('fillOpacity')) !==255;\r\n\t\treturn result;\r\n\t}\r\n\r\n\r\n\tfunction deselectPath(){\r\n\t\tvar idDslc = charIDToTypeID( \"Dslc\" );\r\n\t\t\tvar desc1797 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref990 = new ActionReference();\r\n\t\t\t\tvar idPath = charIDToTypeID( \"Path\" );\r\n\t\t\t\tvar idOrdn = charIDToTypeID( \"Ordn\" );\r\n\t\t\t\tvar idTrgt = charIDToTypeID( \"Trgt\" );\r\n\t\t\t\tref990.putEnumerated( idPath, idOrdn, idTrgt );\r\n\t\t\tdesc1797.putReference( idnull, ref990 );\r\n\t\texecuteAction( idDslc, desc1797, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction ungroupSelectedLayer(){\r\n\t\tvar idungroupLayersEvent = stringIDToTypeID( \"ungroupLayersEvent\" );\r\n\t\tvar desc204 = new ActionDescriptor();\r\n\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\tvar ref118 = new ActionReference();\r\n\t\t\tvar idLyr = charIDToTypeID( \"Lyr \" );\r\n\t\t\tvar idOrdn = charIDToTypeID( \"Ordn\" );\r\n\t\t\tvar idTrgt = charIDToTypeID( \"Trgt\" );\r\n\t\t\tref118.putEnumerated( idLyr, idOrdn, idTrgt );\r\n\t\tdesc204.putReference( idnull, ref118 );\r\n\t\texecuteAction( idungroupLayersEvent, desc204, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction selectPixels(left, top, width, height){\r\n\t\tvar idsetd = charIDToTypeID( \"setd\" );\r\n\t\t\tvar desc683 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref276 = new ActionReference();\r\n\t\t\t\tvar idChnl = charIDToTypeID( \"Chnl\" );\r\n\t\t\t\tvar idfsel = charIDToTypeID( \"fsel\" );\r\n\t\t\t\tref276.putProperty( idChnl, idfsel );\r\n\t\t\tdesc683.putReference( idnull, ref276 );\r\n\t\t\tvar idT = charIDToTypeID( \"T   \" );\r\n\t\t\t\tvar desc684 = new ActionDescriptor();\r\n\t\t\t\tvar idTop = charIDToTypeID( \"Top \" );\r\n\t\t\t\tvar idPxl = charIDToTypeID( \"#Pxl\" );\r\n\t\t\t\tdesc684.putUnitDouble( idTop, idPxl, top );\r\n\t\t\t\tvar idLeft = charIDToTypeID( \"Left\" );\r\n\t\t\t\tvar idPxl = charIDToTypeID( \"#Pxl\" );\r\n\t\t\t\tdesc684.putUnitDouble( idLeft, idPxl, left );\r\n\t\t\t\tvar idBtom = charIDToTypeID( \"Btom\" );\r\n\t\t\t\tvar idPxl = charIDToTypeID( \"#Pxl\" );\r\n\t\t\t\tdesc684.putUnitDouble( idBtom, idPxl, top+height );\r\n\t\t\t\tvar idRght = charIDToTypeID( \"Rght\" );\r\n\t\t\t\tvar idPxl = charIDToTypeID( \"#Pxl\" );\r\n\t\t\t\tdesc684.putUnitDouble( idRght, idPxl, left+width );\r\n\t\t\tvar idRctn = charIDToTypeID( \"Rctn\" );\r\n\t\t\tdesc683.putObject( idT, idRctn, desc684 );\r\n\t\texecuteAction( idsetd, desc683, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction preventFromArtboardMessUp(){\r\n\t\tvar desc = new LxActionDescriptor();\r\n\t\tdesc.lxRefLayer();\r\n\t\tdesc.putBoolean( \"autoNestEnabled\" , false );\r\n\t\tdesc.putBoolean( \"autoExpandEnabled\" , false );\r\n\t\tdesc.putBoolean( \"autoPositionEnabled\" , false );\t\t\r\n\t\texecuteAction( \"editArtboardEvent\", desc);\r\n\t}\r\n\r\n\tfunction revertArtboardsSettings(){\r\n\t\tvar desc = new LxActionDescriptor();\r\n\t\tdesc.lxRefLayer();\r\n\t\tdesc.putBoolean( \"autoNestEnabled\" , artboardsSettings.autoNestEnabled );\r\n\t\tdesc.putBoolean( \"autoExpandEnabled\" , artboardsSettings.autoExpandEnabled );\r\n\t\tdesc.putBoolean( \"autoPositionEnabled\" , artboardsSettings.autoPositionEnabled );\t\t\r\n\t\texecuteAction( \"editArtboardEvent\", desc);\r\n\t}\r\n\r\n\tfunction deselectPixels(){\r\n\t\tvar idsetd = charIDToTypeID( \"setd\" );\r\n\t\t\tvar desc1000 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref414 = new ActionReference();\r\n\t\t\t\tvar idChnl = charIDToTypeID( \"Chnl\" );\r\n\t\t\t\tvar idfsel = charIDToTypeID( \"fsel\" );\r\n\t\t\t\tref414.putProperty( idChnl, idfsel );\r\n\t\t\tdesc1000.putReference( idnull, ref414 );\r\n\t\t\tvar idT = charIDToTypeID( \"T   \" );\r\n\t\t\tvar idOrdn = charIDToTypeID( \"Ordn\" );\r\n\t\t\tvar idNone = charIDToTypeID( \"None\" );\r\n\t\t\tdesc1000.putEnumerated( idT, idOrdn, idNone );\r\n\t\texecuteAction( idsetd, desc1000, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction createMask(){\r\n\t\tvar idMk = charIDToTypeID( \"Mk  \" );\r\n\t\t\tvar desc685 = new ActionDescriptor();\r\n\t\t\tvar idNw = charIDToTypeID( \"Nw  \" );\r\n\t\t\tvar idChnl = charIDToTypeID( \"Chnl\" );\r\n\t\t\tdesc685.putClass( idNw, idChnl );\r\n\t\t\tvar idAt = charIDToTypeID( \"At  \" );\r\n\t\t\t\tvar ref277 = new ActionReference();\r\n\t\t\t\tvar idChnl = charIDToTypeID( \"Chnl\" );\r\n\t\t\t\tvar idChnl = charIDToTypeID( \"Chnl\" );\r\n\t\t\t\tvar idMsk = charIDToTypeID( \"Msk \" );\r\n\t\t\t\tref277.putEnumerated( idChnl, idChnl, idMsk );\r\n\t\t\tdesc685.putReference( idAt, ref277 );\r\n\t\t\tvar idUsng = charIDToTypeID( \"Usng\" );\r\n\t\t\tvar idUsrM = charIDToTypeID( \"UsrM\" );\r\n\t\t\tvar idRvlS = charIDToTypeID( \"RvlS\" );\r\n\t\t\tdesc685.putEnumerated( idUsng, idUsrM, idRvlS );\r\n\t\texecuteAction( idMk, desc685, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction setColorTag(pointer, type, color){\r\n\t\tvar idsetd = charIDToTypeID( \"setd\" );\r\n\t\t\tvar desc149 = new LxActionDescriptor();\r\n\t\t\tdesc149.lxRefLayer(pointer,type);\r\n\t\t\t\tvar desc150 = new LxActionDescriptor();\r\n\t\t\t\tdesc150.putEnumerated( \"Clr \", \"Clr \", color );\r\n\t\t\tdesc149.putObject( \"T   \", \"Lyr \", desc150 );\r\n\t\texecuteAction( idsetd, desc149, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction undo(){\r\n\t\tvar idslct = charIDToTypeID( \"slct\" );\r\n\t\t\tvar desc485 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref182 = new ActionReference();\r\n\t\t\t\tvar idHstS = charIDToTypeID( \"HstS\" );\r\n\t\t\t\tvar idOrdn = charIDToTypeID( \"Ordn\" );\r\n\t\t\t\tvar idPrvs = charIDToTypeID( \"Prvs\" );\r\n\t\t\t\tref182.putEnumerated( idHstS, idOrdn, idPrvs );\r\n\t\t\tdesc485.putReference( idnull, ref182 );\r\n\t\texecuteAction( idslct, desc485, DialogModes.NO );\r\n\t}\r\n\r\n\t// that's not photoshop comps. That is my custom overview\r\n\tfunction getCompsCount(obj){\r\n\t\tvar size = 0, key;\r\n\t\tfor (key in obj) {\r\n\t\t\tif (obj.hasOwnProperty(key) && (key !== \"file\" || key !== \"windowMethod\")) size++;\r\n\t\t}\r\n\t\treturn size;\r\n\t}\r\n\r\n\t// not tested on Mac. I don't know if cloud files are always synced. Workaround is embeding SO into document.\r\n\tfunction getCloudFilePath(soDesc){\r\n\t\tvar lookUpFile = new File(Folder.userData + \"/Adobe/Creative Cloud Libraries/LIBS/librarylookupfile\");\r\n\t\tif(!lookUpFile.exists)\r\n\t\t{\r\n\t\t\tthrow \"Error! Lookup file for cloud assests not found. Try embed smart objects first.\";\r\n\t\t}\r\n\r\n\t\tvar assetUrl = soDesc.getObjectValue(stringIDToTypeID('smartObject')).getObjectValue(stringIDToTypeID('link')).getString(stringIDToTypeID('elementReference'));\r\n\t\tvar urlEnd = assetUrl.split(\"/adobe-libraries/\")[1];\r\n\t\tvar library = urlEnd.split(\";node=\")[0];\r\n\t\tvar item = urlEnd.split(\";node=\")[1];\r\n\r\n\t\tlookUpFile.open('r');\r\n\t\tvar str = \"\";\r\n\t\twhile(!lookUpFile.eof)\r\n\t\tstr += lookUpFile.readln();\r\n\t\tlookUpFile.close();\r\n\t\t\r\n\t\tvar lookUpObj = eval(\"(\"+str+\")\");\r\n\t\tvar pathToSo = lookUpObj.libraries[library].elements[item].reps[0].path;\r\n\t\tif(!pathToSo)throw \"Couldn't find path to temp file of could smart objects. Try embed smart objects first.\";\r\n\t\t\r\n\t\treturn pathToSo;\r\n\t}\r\n\r\n\tfunction renameLayer(id, name){\r\n\t\tvar idsetd = charIDToTypeID( \"setd\" );\r\n\t\tvar desc573 = new ActionDescriptor();\r\n\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\tvar ref322 = new ActionReference();\r\n\t\t\tvar idLyr = charIDToTypeID( \"Lyr \" );\r\n\t\t\tref322.putIdentifier( idLyr, id );\r\n\t\tdesc573.putReference( idnull, ref322 );\r\n\t\tvar idT = charIDToTypeID( \"T   \" );\r\n\t\t\tvar desc574 = new ActionDescriptor();\r\n\t\t\tvar idNm = charIDToTypeID( \"Nm  \" );\r\n\t\t\tdesc574.putString( idNm, name );\r\n\t\tvar idLyr = charIDToTypeID( \"Lyr \" );\r\n\t\tdesc573.putObject( idT, idLyr, desc574 );\r\n\t\texecuteAction( idsetd, desc573, DialogModes.NO );\r\n\t}\r\n\r\n\t// here we utilize generator plugin\r\n\tfunction getLayerCompsData(){\r\n\t\tvar docRef = new ActionReference();  \r\n\t\tvar desc = new ActionDescriptor();  \r\n\t\tvar JSONid = stringIDToTypeID(\"json\");  \r\n\t\tdocRef.putProperty(charIDToTypeID('Prpr'), JSONid);  \r\n\t\tdocRef.putEnumerated(stringIDToTypeID(\"document\"), charIDToTypeID('Ordn'), charIDToTypeID('Trgt'));  \r\n\t\tdesc.putReference(charIDToTypeID('null'), docRef);  \r\n\t\tdesc.putBoolean(stringIDToTypeID(\"compInfo\"), true);  // just return the Layer Comp settings  \r\n\t\tdesc.putBoolean(stringIDToTypeID( \"getCompLayerSettings\" ), false); // return Layer Comp settings for each layer  \r\n\t\tvar result = executeAction(charIDToTypeID( \"getd\" ), desc, DialogModes.NO).getString(JSONid);  \r\n\t\tresult = eval(\"(\"+result+\")\");\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\t// data input is object from generator plugin\r\n\tfunction getActiveComp(data){\r\n\t\tif(data.comps){\r\n\t\t\tvar comps = data.comps;\r\n\t\t\tfor(var i = 0, len = comps.length; i < len ; i++){\r\n\t\t\t\tvar activeComp = comps[i];\r\n\t\t\t\tif(activeComp.hasOwnProperty(\"applied\") && activeComp.applied === true){\r\n\t\t\t\t\treturn activeComp.id;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tfunction selectDocument(documentID){\r\n\t\tvar idslct = charIDToTypeID( \"slct\" );\r\n\t\t\tvar desc2664 = new ActionDescriptor();\r\n\t\t\t\tvar ref1382 = new ActionReference();\r\n\t\t\t\tvar idDcmn = charIDToTypeID( \"Dcmn\" );\r\n\t\t\t\tref1382.putIdentifier( idDcmn, documentID );\r\n\t\t\tdesc2664.putReference( charIDToTypeID( \"null\" ), ref1382 );\r\n\t\texecuteAction( idslct, desc2664, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction isPathSelected(){\r\n\t\tvar ref = new ActionReference();   \r\n\t\tref.putProperty(charIDToTypeID( \"Prpr\" ), stringIDToTypeID(\"targetPathIndex\"));  \r\n\t\tref.putEnumerated( charIDToTypeID(\"Dcmn\"), charIDToTypeID(\"Ordn\"), charIDToTypeID(\"Trgt\") );    \r\n\t\tvar desc = executeActionGet(ref);   \r\n\t\tvar targetPathIndex = desc.getDouble(stringIDToTypeID (\"targetPathIndex\"));\r\n\t\tvar isSelected = targetPathIndex !== -1;\r\n\t\treturn isSelected;\r\n\t}\r\n\r\n\tfunction makeHistorySnapshot(snapshotName){\r\n\t\tvar idMk = charIDToTypeID( \"Mk  \" );\r\n\t\t\tvar desc11 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref5 = new ActionReference();\r\n\t\t\t\tvar idSnpS = charIDToTypeID( \"SnpS\" );\r\n\t\t\t\tref5.putClass( idSnpS );\r\n\t\t\tdesc11.putReference( idnull, ref5 );\r\n\t\t\tvar idFrom = charIDToTypeID( \"From\" );\r\n\t\t\t\tvar ref6 = new ActionReference();\r\n\t\t\t\tvar idHstS = charIDToTypeID( \"HstS\" );\r\n\t\t\t\tvar idCrnH = charIDToTypeID( \"CrnH\" );\r\n\t\t\t\tref6.putProperty( idHstS, idCrnH );\r\n\t\t\tdesc11.putReference( idFrom, ref6 );\r\n\t\t\tvar idNm = charIDToTypeID( \"Nm  \" );\r\n\t\t\tdesc11.putString( idNm, snapshotName );\r\n\t\t\tvar idUsng = charIDToTypeID( \"Usng\" );\r\n\t\t\tvar idHstS = charIDToTypeID( \"HstS\" );\r\n\t\t\tvar idFllD = charIDToTypeID( \"FllD\" );\r\n\t\t\tdesc11.putEnumerated( idUsng, idHstS, idFllD );\r\n\t\texecuteAction( idMk, desc11, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction removeHistorySnapshot(snapshotName){\r\n\t\tvar idDlt = charIDToTypeID( \"Dlt \" );\r\n\t\t\tvar desc35 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref23 = new ActionReference();\r\n\t\t\t\tvar idSnpS = charIDToTypeID( \"SnpS\" );\r\n\t\t\t\tref23.putName( idSnpS, snapshotName );\r\n\t\t\tdesc35.putReference( idnull, ref23 );\r\n\t\texecuteAction( idDlt, desc35, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction restoreFromSnapshot(snapshotName){\r\n\t\tvar idslct = charIDToTypeID( \"slct\" );\r\n\t\t\tvar desc36 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref24 = new ActionReference();\r\n\t\t\t\tvar idSnpS = charIDToTypeID(\"SnpS\");\r\n\t\t\t\tref24.putName( idSnpS, snapshotName );\r\n\t\t\tdesc36.putReference( idnull, ref24 );\r\n\t\texecuteAction( idslct, desc36, DialogModes.NO );\r\n\t}\r\n\r\n\tfunction getArtboardSettings(){\r\n\t\tartboardDesc = lx.getDocumentProperty(\"artboards\");\r\n\t\t\t\r\n\t\tvar result = { \r\n\t\t\tautoNestEnabled: artboardDesc.getBoolean(\"autoNestEnabled\"),\r\n\t\t\tautoExpandEnabled: artboardDesc.getBoolean(\"autoExpandEnabled\"),\r\n\t\t\tautoPositionEnabled: artboardDesc.getBoolean(\"autoPositionEnabled\")\r\n\t\t};\t\t\t\r\n\t\t\t\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction isVectorMaskEnabled(){  \r\n\t\tvar lastIndex = docMaster.pathItems.length;  \r\n\t\t  \r\n\t\t// if there is no item mask can be disabled or not even exists  \r\n\t\t// so you could want check for existing vector mask before your call this function  \r\n\t\tif(lastIndex===0){return false}  \r\n\t\t  \r\n\t\t// vector mask should be last in paths list. If is not selected then it has \"normal\" kind. So we select last path.  \r\n\t\tvar desc = new ActionDescriptor();  \r\n\t\tvar ref = new ActionReference();  \r\n\t\tref.putIndex( charIDToTypeID( \"Path\" ), lastIndex );  \r\n\t\tdesc.putReference( charIDToTypeID( \"null\" ), ref );  \r\n\t\texecuteAction( charIDToTypeID( \"slct\" ), desc, DialogModes.NO ); \r\n\t  \r\n\t\t// now we check which kind is most bottom path  \r\n\t\tvar lastPathInList = docMaster.pathItems[lastIndex-1];  \r\n\t\tvar isVectorMaskEnabled = lastPathInList.kind === PathKind.VECTORMASK;  \r\n\t\treturn isVectorMaskEnabled;  \r\n\t\t\r\n\t\t// another method is trying to get path with reference and this reference has vector mask property\r\n\t}  \r\n}\r\n\r\n///////////////////\r\n//  SCALE STYLES\r\n///////////////////\r\n\r\nfunction scaleSelectedLayersStyle (scaleFactorPercent, selectedLayers){\r\n\t// YOU CAN ADJUST SCRIPT TO FIT YOUR NEEDS. POSSIBLE VALUES ARE \"TRUE\" OR \"FALSE\"\r\n\t// You might thing that I am noob because this code is to complicate. But this also scale shape styles not only layer effects.\r\n\tstyleSettings = settings.styleScaleSettings\r\n\r\n\t// performance - don't even select shape layer if we won't change shape styles\r\n\tstyleSettings[\"dontScaleShape\"] = (!styleSettings.scaleShapeStrokeWidth && !styleSettings.scaleShapePatternFill && !styleSettings.scaleShapeGradientFill && !styleSettings.scaleShapeStrokeGradient && !styleSettings.scaleShapeStrokePattern);\r\n\r\n\tmain();\r\n\r\n\tfunction main(){\r\n\t\tvar layersWithStyle = filterLayersWithStyle(selectedLayers);\r\n\t\tvar layersWithShape = filterLayersWithShape(selectedLayers);\r\n\t\tscaleFactorPercent = round2(scaleFactorPercent);\r\n\t\t\r\n\t\tif(scaleFactorPercent === 100){return} // skip effect scaling if nothing would change\r\n\t\t\r\n\t\t\r\n\t\tfor(var i = 0, prgs, cancel = false, len = selectedLayers.length; i < len; i++){\r\n\t\t\t\r\n\t\t\tif(!prgs){\r\n\t\t\t\tprgs=PltProgress(len, \"Styles scaling...\");\r\n\t\t\t\tprgs.show();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar index = selectedLayers[i];\r\n\t\t\tvar hasStyle = layersWithStyle.indexOf(index) >= 0;\r\n\t\t\tvar hasShape = layersWithShape.indexOf(index) >= 0;\r\n\t\t\tvar desc;\r\n\t\t\t\r\n\t\t\tif(hasStyle || hasShape){\r\n\t\t\t\tdesc = getLayerDescriptor (index);\r\n\t\t\t\tsetSelectedLayer (index);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(hasStyle){\r\n\t\t\t\tcancel = scaleStyles(scaleFactorPercent);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(hasShape){\r\n\t\t\t\tvar shapeProperties = {\r\n\t\t\t\t\tscaleRatio: scaleFactorPercent/100,\r\n\t\t\t\t\tstrokeWidth: getStrokeWidth(desc),\r\n\t\t\t\t\t\r\n\t\t\t\t\tshapePatternScale: getShapePatternScale(desc),\r\n\t\t\t\t\tshapeGradientScale: getShapeGradientScale(desc),\r\n\t\t\t\t\t\r\n\t\t\t\t\tshapeStrokeGradientScale: getShapeStrokeGradientScale(desc),\r\n\t\t\t\t\tshapeStrokePatternScale: getShapeStrokePatternScale(desc)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar strokeDesc = changeStrokeDesc( desc.getObjectValue(stringIDToTypeID('AGMStrokeStyleInfo')), shapeProperties);\r\n\t\t\t\tvar fillDesc = changeFillDesc(desc.getList(stringIDToTypeID('adjustment')).getObjectValue(0), shapeProperties);\r\n\t\t\t\tvar fillKey = getFillKey(fillDesc);\r\n\t\t\t\t\r\n\t\t\t\tcancel = applyShapeDescriptor (index, fillDesc, strokeDesc, fillKey);\r\n\t\t\t}\r\n\t\t\tif(cancel){return;}\r\n\t\t\tcancel = prgs.update(i,(\"Styles scaling: \"+i+\" layers from \" + len));\r\n\t\t\tif(cancel){return;}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getFillKey(fillDesc){\r\n\t\tvar fillKey;\r\n\t\t\r\n\t\tif(fillDesc.hasKey(stringIDToTypeID(\"pattern\"))){\r\n\t\t\tfillKey = stringIDToTypeID(\"patternLayer\");\r\n\t\t} else if(fillDesc.hasKey(stringIDToTypeID(\"gradient\"))){\r\n\t\t\tfillKey = stringIDToTypeID(\"gradientLayer\");\r\n\t\t} else {\r\n\t\t\tfillKey = stringIDToTypeID(\"solidColorLayer\");\r\n\t\t}\r\n\r\n\t\treturn fillKey;\r\n\t}\r\n\r\n\r\n\tfunction scaleStyles(value){\r\n\t\ttry{\r\n\t\t\tvar idscaleEffectsEvent = stringIDToTypeID( \"scaleEffectsEvent\" );\r\n\t\t\t\tvar desc66 = new ActionDescriptor();\r\n\t\t\t\tvar idScl = charIDToTypeID( \"Scl \" );\r\n\t\t\t\tvar idPrc = charIDToTypeID( \"#Prc\" );\r\n\t\t\t\tdesc66.putUnitDouble( idScl, idPrc, value );\r\n\t\t\texecuteAction( idscaleEffectsEvent, desc66, DialogModes.NO );\r\n\t\t}catch(e){\r\n\t\t\tif (e.number === 8007) { // if not \"User cancelled\"  \r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\t// some layer can have layerEffects descriptor but descriptor is not visible so scale\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction changeFillDesc(desc, props){\r\n\t\tif(props.shapeGradientScale !== false && styleSettings.scaleShapeGradientFill){\r\n\t\t\tdesc.putDouble(stringIDToTypeID('scale'),round2(props.shapeGradientScale * props.scaleRatio));\r\n\t\t}\r\n\t\tif(props.shapePatternScale !== false && styleSettings.scaleShapePatternFill){\r\n\t\t\tdesc.putDouble(stringIDToTypeID('scale'),round2(props.shapePatternScale * props.scaleRatio));\r\n\t\t}\r\n\r\n\t\treturn desc;\r\n\t}\r\n\r\n\tfunction changeStrokeDesc(desc, props){\r\n\t\tif(props.strokeWidth !== false && styleSettings.scaleShapeStrokeWidth){\r\n\t\t\tvar strokeDoubleType = desc.getUnitDoubleType(stringIDToTypeID('strokeStyleLineWidth'));\r\n\t\t\tdesc.putUnitDouble(stringIDToTypeID('strokeStyleLineWidth'), strokeDoubleType ,round2(props.strokeWidth * (props.scaleRatio)));\r\n\t\t\t// putUnitDouble namísto double\r\n\t\t}\r\n\t\t\r\n\t\tif(props.shapeStrokeGradientScale !== false && styleSettings.scaleShapeStrokeGradient){\r\n\t\t\tvar gradientDesc = desc.getObjectValue(stringIDToTypeID('strokeStyleContent'));\r\n\t\t\tgradientDesc.putDouble(stringIDToTypeID('scale'),round2(props.shapeStrokeGradientScale * props.scaleRatio));\r\n\t\t\tdesc.putObject(stringIDToTypeID('strokeStyleContent'),stringIDToTypeID('strokeStyleContent'),gradientDesc);\r\n\t\t}\r\n\t\tif(props.shapeStrokePatternScale !== false && styleSettings.scaleShapeStrokePattern){\r\n\t\t\tvar patternDesc = desc.getObjectValue(stringIDToTypeID('strokeStyleContent'));\r\n\t\t\tpatternDesc.putDouble(stringIDToTypeID('scale'),round2(props.shapeStrokePatternScale * props.scaleRatio));\r\n\t\t\tdesc.putObject(stringIDToTypeID('strokeStyleContent'),stringIDToTypeID('strokeStyleContent'),patternDesc);\r\n\t\t}\r\n\r\n\t\treturn desc;\r\n\t}\r\n\r\n\t//\r\n\t// Function: getSelectedLayers\r\n\t// Usage: creates and array of the currently selected layers\r\n\t// Input: <none> Must have an open document\r\n\t// Return: Array selectedLayers\r\n\tfunction getSelectedLayers() {\r\n\t\tvar selectedLayers = [];\r\n\t\ttry {\r\n\t\t   var backGroundCounter = 1;\r\n\t\t\ttry {\r\n\t\t\t\tvar dummy = app.activeDocument.backgroundLayer;\r\n\t\t\t\tbackGroundCounter = 0;\r\n\t\t\t}\r\n\t\t\tcatch(e){;} //do nothing\r\n\t\t\t\r\n\t\t\tvar ref = new ActionReference();\r\n\t\t\tvar keyTargetLayers = app.stringIDToTypeID( 'targetLayers' );\r\n\t\t\tref.putProperty( app.charIDToTypeID( 'Prpr' ), keyTargetLayers );\r\n\t\t\tref.putEnumerated( app.charIDToTypeID( 'Dcmn' ), app.charIDToTypeID( 'Ordn' ), app.charIDToTypeID( 'Trgt' ) );\r\n\t\t\tvar desc = executeActionGet( ref );\r\n\t\t\tif ( desc.hasKey( keyTargetLayers ) ) {\r\n\t\t\t\tvar layersList = desc.getList( keyTargetLayers );\r\n\t\t\t\tfor ( var i = 0; i < layersList.count; i++) {\r\n\t\t\t\t\tvar listRef = layersList.getReference( i );\r\n\t\t\t\t\tselectedLayers.push( listRef.getIndex() + backGroundCounter );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}catch(e) {\r\n\t\t\t; // do nothing\r\n\t\t}\r\n\t\treturn selectedLayers;\r\n\t}\r\n\r\n\tfunction setSelectedLayers(list){\r\n\t\tsetSelectedLayer(list[0]);\r\n\t\taddSelectedLayer(list);\r\n\t}\r\n\r\n\tfunction setSelectedLayer( layerIndexOrName ) {\r\n\t\ttry {\r\n\t\t\tvar id239 = charIDToTypeID( \"slct\" );\r\n\t\t\tvar desc45 = new ActionDescriptor();\r\n\t\t\tvar id240 = charIDToTypeID( \"null\" );\r\n\t\t\tvar ref43 = new ActionReference();\r\n\t\t\tvar id241 = charIDToTypeID( \"Lyr \" );\r\n\t\t\tif ( typeof layerIndexOrName == \"number\" ) {\r\n\t\t\t\tref43.putIndex( id241, layerIndexOrName );\r\n\t\t\t} else {\r\n\t\t\t\tref43.putName( id241, layerIndexOrName );\r\n\t\t\t}\r\n\t\t\tdesc45.putReference( id240, ref43 );\r\n\t\t\tvar id242 = charIDToTypeID( \"MkVs\" );\r\n\t\t\tdesc45.putBoolean( id242, false );\r\n\t\t\texecuteAction( id239, desc45, DialogModes.NO );\r\n\t\t}catch(e) {\r\n\t\t\talert(e.message); // do nothing\r\n\t\t}\r\n\t}\r\n\r\n\tfunction addSelectedLayer( layerIndexOrName ) {\r\n\t\ttry {\r\n\t\t\tvar len=1;\r\n\t\t\tif( Object.prototype.toString.call( layerIndexOrName ) === '[object Array]' ) {\r\n\t\t\t\tlen = layerIndexOrName.length;\r\n\t\t\t}\r\n\t\t\tfor ( var i = 0;i<len;i++){\r\n\t\t\t\tvar id243 = charIDToTypeID( \"slct\" );\r\n\t\t\t\tvar desc46 = new ActionDescriptor();\r\n\t\t\t\tvar id244 = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref44 = new ActionReference();\r\n\t\t\t\tvar id245 = charIDToTypeID( \"Lyr \" );\r\n\t\t\t\tif ( typeof layerIndexOrName == \"number\" ) {\r\n\t\t\t\t\tref44.putIndex( id245, layerIndexOrName );\r\n\t\t\t\t} \r\n\t\t\t\telse if( Object.prototype.toString.call( layerIndexOrName ) === '[object Array]' ){ //když to je pole\r\n\t\t\t\t\tref44.putIndex( id245, layerIndexOrName[i] );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tref44.putName( id245, layerIndexOrName );\r\n\t\t\t\t}\r\n\t\t\t\tdesc46.putReference( id244, ref44 );\r\n\t\t\t\tvar id246 = stringIDToTypeID( \"selectionModifier\" );\r\n\t\t\t\tvar id247 = stringIDToTypeID( \"selectionModifierType\" );\r\n\t\t\t\tvar id248 = stringIDToTypeID( \"addToSelection\" );\r\n\t\t\t\tdesc46.putEnumerated( id246, id247, id248 );\r\n\t\t\t\tvar id249 = charIDToTypeID( \"MkVs\" );\r\n\t\t\t\tdesc46.putBoolean( id249, false );\r\n\t\t\t\texecuteAction( id243, desc46, DialogModes.NO );\r\n\t\t\t}\r\n\t\t}catch(e) {\r\n\t\t\talert(e.message); // do nothing\r\n\t\t}\r\n\t}\r\n\r\n\tfunction filterLayersWithStyle(list){\r\n\t\tvar result = [];\r\n\t\t\r\n\t\tif(styleSettings.scaleStyle){\r\n\t\t\tfor(var i = 0, len = list.length; i < len; i++){\r\n\t\t\t\tvar index = list[i];\r\n\t\t\t\tvar desc = getLayerDescriptor(index) ;\r\n\t\t\t\tvar hasStyle = desc.hasKey(stringIDToTypeID('layerEffects'));\r\n\t\t\t\tif(hasStyle){\r\n\t\t\t\t\tresult.push(index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction filterLayersWithShape(list){\r\n\t\tvar result = [];\r\n\t\t\r\n\t\tif(styleSettings.dontScaleShape === false){\r\n\t\t\tfor(var i = 0, len = list.length; i < len; i++){\r\n\t\t\t\tvar index = list[i];\r\n\t\t\t\tvar desc = getLayerDescriptor(index);\r\n\t\t\t\tvar shapePatternScale = getShapePatternScale(desc);\r\n\t\t\t\tvar shapeGradientScale = getShapeGradientScale(desc);\r\n\t\t\t\t\r\n\t\t\t\tif(hasStroke(desc) || shapePatternScale !== false || shapeGradientScale !== false){\r\n\t\t\t\t\tresult.push(index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction getStrokeWidth(desc){\r\n\t\tif(!desc.getObjectValue(stringIDToTypeID('AGMStrokeStyleInfo')).hasKey(stringIDToTypeID('strokeStyleLineWidth'))){return false}\r\n\t\t\r\n\t\tvar result = desc.getObjectValue(stringIDToTypeID('AGMStrokeStyleInfo')).getUnitDoubleValue(stringIDToTypeID('strokeStyleLineWidth'));\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction hasStroke(desc){\r\n\t\tvar hasStrokeWidth = desc.hasKey(stringIDToTypeID('AGMStrokeStyleInfo')) && desc.getObjectValue(stringIDToTypeID('AGMStrokeStyleInfo')).hasKey(stringIDToTypeID('strokeStyleLineWidth'));\r\n\t\tvar isShape = desc.getInteger(stringIDToTypeID('layerKind')) === 4;\r\n\t\tvar has = hasStrokeWidth && isShape;\r\n\t\treturn has;\r\n\t}\r\n\r\n\tfunction getShapeStrokeGradientScale(desc){\r\n\t\t\r\n\t\tvar strokeDesc = desc.getObjectValue(stringIDToTypeID('AGMStrokeStyleInfo'));\r\n\t\tvar hasStrokeStyle = strokeDesc.hasKey(stringIDToTypeID('strokeStyleContent'));\r\n\t\tif(!hasStrokeStyle){return false}\r\n\t\t\r\n\t\tvar strokeStyleContentDesc = strokeDesc.getObjectValue(stringIDToTypeID('strokeStyleContent'));\r\n\t\t\r\n\t\tvar isGradient = strokeStyleContentDesc.hasKey(stringIDToTypeID('gradient'));\r\n\t\tif(!isGradient){return false}\r\n\t\t\r\n\t\t// we don't need scale gradient if align with layer is true\r\n\t\tvar isAlignedToLayer = strokeStyleContentDesc.getBoolean(stringIDToTypeID('align'));\r\n\t\tif(isAlignedToLayer){return false}\r\n\t\t\r\n\t\tvar strokeGradientScale = strokeStyleContentDesc.getUnitDoubleValue(stringIDToTypeID('scale'));\r\n\t\t\r\n\t\treturn strokeGradientScale;\r\n\t}\r\n\r\n\r\n\tfunction getShapeStrokePatternScale(desc){\r\n\t\t\r\n\t\tvar strokeDesc = desc.getObjectValue(stringIDToTypeID('AGMStrokeStyleInfo'));\r\n\t\tvar hasStrokeStyle = strokeDesc.hasKey(stringIDToTypeID('strokeStyleContent'));\r\n\t\tif(!hasStrokeStyle){return false}\r\n\t\t\r\n\t\tvar strokeStyleContentDesc = strokeDesc.getObjectValue(stringIDToTypeID('strokeStyleContent'));\r\n\t\t\r\n\t\tvar isPattern = strokeStyleContentDesc.hasKey(stringIDToTypeID('pattern'));\r\n\t\tif(!isPattern){return false}\r\n\t\t\r\n\t\tvar strokePatternScale = strokeStyleContentDesc.getUnitDoubleValue(stringIDToTypeID('scale'));\r\n\t\t\r\n\t\treturn strokePatternScale;\r\n\t}\r\n\r\n\r\n\t// fillKey = typeID\r\n\t// fillDesc = gradientLayer\r\n\t// strokeDesc = descAGMStrokeStyleInfo\r\n\tfunction applyShapeDescriptor(layerIndex, fillDesc, strokeDesc, fillKey){\r\n\t   var idsetd = charIDToTypeID( \"setd\" );\r\n\t\t\tvar desc1176 = new ActionDescriptor();\r\n\t\t\tvar idnull = charIDToTypeID( \"null\" );\r\n\t\t\t\tvar ref301 = new ActionReference();\r\n\t\t\t\tvar idcontentLayer = stringIDToTypeID( \"contentLayer\" );\r\n\t\t\t\tvar idOrdn = charIDToTypeID( \"Ordn\" );\r\n\t\t\t\tvar idTrgt = charIDToTypeID( \"Trgt\" );\r\n\t\t\t\tref301.putEnumerated( idcontentLayer, idOrdn, idTrgt );\r\n\t\t\t\t//ref301.putIndex(idcontentLayer, layerIndex)\r\n\t\t\tdesc1176.putReference( idnull, ref301 );\r\n\t\t\tvar idT = charIDToTypeID( \"T   \" );\r\n\t\t\t\tvar descShapeStyle = new ActionDescriptor();\r\n\t\t\t\t\r\n\t\t\t\tvar idFlCn = stringIDToTypeID( \"fillContents\" );\r\n\t\t\t\tdescShapeStyle.putObject( idFlCn, fillKey, fillDesc );\r\n\t\t\t\t\r\n\t\t\t\tvar idstrokeStyle = stringIDToTypeID( \"strokeStyle\" );\r\n\t\t\t\tdescShapeStyle.putObject( idstrokeStyle, idstrokeStyle, strokeDesc );\r\n\t\t\t\t\r\n\t\t\tvar idshapeStyle = stringIDToTypeID( \"shapeStyle\" );\r\n\t\t\tdesc1176.putObject( idT, idshapeStyle, descShapeStyle );\r\n\t\ttry{\r\n\t\t\texecuteAction( idsetd, desc1176, DialogModes.NO );\r\n\t\t}catch(e){\r\n\t\t\tif (e.number === 8007) { // if not \"User cancelled\"  \r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tthrow e; \r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction getShapePatternScale(desc){\r\n\t\t// adjustments present\r\n\t\tif(!desc.hasKey(stringIDToTypeID('adjustment'))){return false;}\r\n\t\t\r\n\t\t// patternLayer present\r\n\t\tvar adjustmentList = desc.getList(stringIDToTypeID('adjustment'));\r\n\t\tvar patternLayerPosition = getKeyPositionInActionList(adjustmentList, stringIDToTypeID(\"patternLayer\"));\r\n\t\tif( patternLayerPosition === -1 ){return false}\r\n\t\t\r\n\t\tvar patternDesc = adjustmentList.getObjectValue(patternLayerPosition);\r\n\t\t\r\n\t\t// if everything except scale exists then scale should be 100%\r\n\t\tvar hasScaleKey = patternDesc.hasKey(stringIDToTypeID('scale'));\r\n\t\tif( !hasScaleKey ){return 100}\r\n\t\t\r\n\t\t// get scale value\r\n\t\tvar patternScale = patternDesc.getUnitDoubleValue(stringIDToTypeID('scale'));\r\n\t\treturn patternScale;\r\n\t}\r\n\r\n\tfunction getShapeGradientScale(desc){\r\n\t\t\r\n\t\t// adjustments present\r\n\t\tif(!desc.hasKey(stringIDToTypeID('adjustment'))){return false;}\r\n\t\t\r\n\t\t// patternLayer present\r\n\t\tvar adjustmentList = desc.getList(stringIDToTypeID('adjustment'));\r\n\t\tvar gradientLayerPosition = getKeyPositionInActionList(adjustmentList, stringIDToTypeID(\"gradientLayer\"));\r\n\t\tif( gradientLayerPosition === -1 ){return false}\r\n\t\t\r\n\t\tvar gradientDesc = adjustmentList.getObjectValue(gradientLayerPosition);\r\n\t\t\r\n\t\t// we don't need scale gradient if align with layer is true\r\n\t\tvar hasAlignKey = gradientDesc.hasKey(stringIDToTypeID('align'));\r\n\t\tif( !hasAlignKey ){return false}\r\n\t\t\r\n\t\t// if everything except scale exists then scale should be 100%\r\n\t\tvar hasScaleKey = gradientDesc.hasKey(stringIDToTypeID('scale'));\r\n\t\tif( !hasScaleKey ){return 100}\r\n\t\t\r\n\t\tvar gradientScale = gradientDesc.getUnitDoubleValue(stringIDToTypeID('scale'))\r\n\t\t\r\n\t\treturn gradientScale;\r\n\r\n\t}\r\n\r\n\t// objectType\r\n\t// key = typeID\r\n\tfunction getKeyPositionInActionList(list, key){\r\n\t\tfor (var i = 0, len = list.count; i < len; i++){\r\n\t\t\tvar isKeyFound = list.getObjectType(i) == key;\r\n\t\t\tif(isKeyFound){\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tfunction getLayerDescriptor(index){\r\n\t\tvar ref = new ActionReference();  \r\n\t\tref.putIndex( charIDToTypeID( \"Lyr \" ), index );    \r\n\t\tvar desc = executeActionGet(ref); \r\n\t\treturn desc;\r\n\t}\r\n\r\n\tfunction getLayerIndexByID(id){\r\n\t\tvar backGroundCounter = 0;\r\n\t\t\ttry {\r\n\t\t\t\tvar dummy = app.activeDocument.backgroundLayer;\r\n\t\t\t\tbackGroundCounter = -1;\r\n\t\t\t}\r\n\t\t\tcatch(e){;} //do nothing\r\n\t\t\r\n\t\tvar ref = new ActionReference();  \r\n\t\tref.putProperty(charIDToTypeID( \"Prpr\" ), stringIDToTypeID(\"itemIndex\"));\r\n\t\tref.putIdentifier( charIDToTypeID( \"Lyr \" ), id );    \r\n\t\tvar desc = executeActionGet(ref); \r\n\t\tvar index = desc.getInteger(stringIDToTypeID('itemIndex')) + backGroundCounter;\r\n\t\treturn index;\r\n\t}\r\n\r\n\tfunction round2 (num){\r\n\t\treturn Math.round(num * 100) / 100;\r\n\t}\r\n\t\r\n\tfunction PltProgress(maximum, message) {\r\n\t\tvar obj = {};\r\n\t\tvar win;\r\n\t\tvar closed = false;\r\n\t\tvar max = maximum;\r\n\t\tvar msg = message;\r\n\t  \r\n\t\tobj.show = function() {\r\n\t\t\t var winContructorString = \"\"\"palette{\r\n\t\t\t\ttext:'Progress',\r\n\t\t\t\tmessage:StaticText{text:'\"\"\"+msg+\"\"\"\"',alignment: 'fill'},\r\n\t\t\t\tmyRow: Panel { \r\n\t\t\t\t\torientation: 'row',\r\n\t\t\t\t\tmargins:0,\r\n\t\t\t\t\tproperties:{borderStyle: none}\r\n\t\t\t\t\tpanel:Panel{\r\n\t\t\t\t\t\tmargins:0,\r\n\t\t\t\t\t\tbar:Progressbar{\r\n\t\t\t\t\t\t\tbounds:[20,20,280,31], \r\n\t\t\t\t\t\t\tvalue:0,\r\n\t\t\t\t\t\t\tmaxvalue:\"\"\"+max+\"\"\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcancel:Button{ \r\n\t\t\t\t\t\ttext: 'Cancel', \r\n\t\t\t\t\t\tproperties:{name:'cancel'}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t};\"\"\";\r\n\t\t\t\twin = new Window(winContructorString);\r\n\t\t\t\twin.onClose = function(){\r\n\t\t\t\t\twin.close();\r\n\t\t\t\t\tclosed = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\twin.myRow.cancel.onClick = function(){\r\n\t\t\t\t\twin.close();\r\n\t\t\t\t\tclosed = true;\r\n\t\t\t\t}\r\n\t\t\t\twin.show();\r\n\t\t\t\t\r\n\t\t\t\treturn closed;\r\n\t\t};\r\n\t\tobj.hide = function() {\r\n\t\t\tclosed = true;\r\n\t\t\twin.close();\r\n\t\t};\r\n\t\tobj.update = function(step, updateMessage){\r\n\t\t\twin.myRow.panel.bar.value = step;\r\n\t\t\twin.message.text = updateMessage;\r\n\t\t\tif(step === max){closed = true;win.close();}\r\n\t\t\treturn closed;\r\n\t\t}\r\n\t\treturn obj;\r\n\t}\r\n}\r\n\r\nfunction applyPollyFills(){\r\n\t\r\n\tif (!Array.prototype.indexOf) {\r\n\t\t  Array.prototype.indexOf = function(searchElement, fromIndex) {\r\n\t\t\tvar k;\r\n\t\t\tif (this == null) {\r\n\t\t\t  throw new TypeError('\"this\" is null or not defined');\r\n\t\t\t}\r\n\r\n\t\t\tvar o = Object(this);\r\n\t\t\tvar len = o.length >>> 0;\r\n\t\t\tif (len === 0) {\r\n\t\t\t  return -1;\r\n\t\t\t}\r\n\t\t\tvar n = fromIndex | 0;\r\n\t\t\tif (n >= len) {\r\n\t\t\t  return -1;\r\n\t\t\t}\r\n\t\t\tk = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\r\n\t\t\twhile (k < len) {\r\n\t\t\t  if (k in o && o[k] === searchElement) {\r\n\t\t\t\treturn k;\r\n\t\t\t  }\r\n\t\t\t  k++;\r\n\t\t\t}\r\n\t\t\treturn -1;\r\n\t\t  };\r\n\t\t}\r\n\r\n\tif (!Array.prototype.findValueIndex) {\r\n\t\tArray.prototype.findValueIndex = function(value) {\r\n\t\t\tvar o = Object(this);\r\n\t\t\tfor(var i = 0, len = o.length; i < len; i++){\r\n\t\t\t\tif(o[i] == value){\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t}\r\n\t\r\n\tif (!Array.prototype.findIndex) {\r\n\t\tArray.prototype.findIndex = function(predicate) {\r\n\t\t // 1. Let O be ? ToObject(this value).\r\n\t\t  if (this == null) {\r\n\t\t\tthrow new TypeError('\"this\" is null or not defined');\r\n\t\t  }\r\n\r\n\t\t  var o = Object(this);\r\n\r\n\t\t  // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n\t\t  var len = o.length >>> 0;\r\n\r\n\t\t  // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n\t\t  if (typeof predicate !== 'function') {\r\n\t\t\tthrow new TypeError('predicate must be a function');\r\n\t\t  }\r\n\r\n\t\t  // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n\t\t  var thisArg = arguments[1];\r\n\r\n\t\t  // 5. Let k be 0.\r\n\t\t  var k = 0;\r\n\r\n\t\t  // 6. Repeat, while k < len\r\n\t\t  while (k < len) {\r\n\t\t\t// a. Let Pk be ! ToString(k).\r\n\t\t\t// b. Let kValue be ? Get(O, Pk).\r\n\t\t\t// c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n\t\t\t// d. If testResult is true, return k.\r\n\t\t\tvar kValue = o[k];\r\n\t\t\tif (predicate.call(thisArg, kValue, k, o)) {\r\n\t\t\t  return k;\r\n\t\t\t}\r\n\t\t\t// e. Increase k by 1.\r\n\t\t\tk++;\r\n\t\t  }\r\n\r\n\t\t  // 7. Return -1.\r\n\t\t  return -1;\r\n\t\t}\r\n\t}\r\n}"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "释放智能对象",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 6"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Photoshop.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "#target photoshop\r\n\r\ns2t = stringIDToTypeID;\r\n\r\n(r = new ActionReference()).putProperty(s2t('property'), p = s2t('targetLayers'));\r\nr.putEnumerated(s2t('document'), s2t('ordinal'), s2t('targetEnum'));\r\nvar sel = executeActionGet(r).hasKey(p) ? executeActionGet(r).getList(p) : null;\r\n\r\n(r = new ActionReference()).putProperty(s2t('property'), p = s2t('hasBackgroundLayer'));\r\nr.putEnumerated(s2t('document'), s2t('ordinal'), s2t('targetEnum'));\r\nvar shift = executeActionGet(r).getBoolean(p) ? 0: 1\r\n\r\nif (sel) {\r\n    for (var i = 0; i < sel.count; i++) {\r\n        (r = new ActionReference()).putIndex(s2t(\"layer\"), sel.getReference(i).getIndex() + shift);\r\n        (d = new ActionDescriptor()).putReference(s2t(\"null\"), r);\r\n        executeAction(s2t(\"select\"), d, DialogModes.NO)\r\n        executeAction(s2t(\"newPlacedLayer\"), undefined, DialogModes.NO);\r\n    }\r\n}"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "转为智能对象（将选择的图层分别转换为智能对象）",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 7"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Photoshop.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "/*\r\n  MultiEditText.jsx for Adobe Photoshop\r\n  Description: Bulk editing of text layer contents. Replaces content separately or with the same text\r\n  Date: April, 2024\r\n  Author: Sergey Osokin, email: hi@sergosokin.ru\r\n\r\n  Installation: https://github.com/creold/photoshop-scripts#how-to-run-scripts\r\n\r\n  *******************************************************************************************\r\n  * WARNING: The script does not support the mixed appearance of characters in a text layer *\r\n  *******************************************************************************************\r\n\r\n  Release notes:\r\n  0.1 Initial version\r\n\r\n  Donate (optional):\r\n  If you find this script helpful, you can buy me a coffee\r\n  - via Buymeacoffee: https://www.buymeacoffee.com/aiscripts\r\n  - via Donatty https://donatty.com/sergosokin\r\n  - via DonatePay https://new.donatepay.ru/en/@osokin\r\n  - via YooMoney https://yoomoney.ru/to/410011149615582\r\n\r\n  NOTICE:\r\n  Tested with Adobe Photoshop CC 2019, 2024 (Mac/Win).\r\n  This script is provided \"as is\" without warranty of any kind.\r\n  Free to use, not for sale\r\n\r\n  Released under the MIT license\r\n  http://opensource.org/licenses/mit-license.php\r\n\r\n  Check my other scripts: https://github.com/creold\r\n*/\r\n\r\n//@target photoshop\r\n\r\nfunction main() {\r\n  var SCRIPT = {\r\n    name: 'Multi-edit Text',\r\n    version: 'v0.1'\r\n  };\r\n\r\n  var CFG = {\r\n    width: 300, // Text area width, px\r\n    height: 200, // Text area height, px\r\n    ph: '<text>', // Content display placeholder\r\n    divider: '\\n@@@\\n', // Symbol for separating multiple text layers\r\n    softBreak: '@#', // Soft line break char\r\n    coordTolerance: 10, // Object alignment tolerance for sorting\r\n    isMac: /mac/i.test($.os),\r\n    settings: 'MET_settings'\r\n  };\r\n\r\n  var doc = app.activeDocument;\r\n  var currState = doc.activeHistoryState;\r\n  var idx = getSelectedLayersIdx();\r\n\r\n  var texts = getTextLayers(doc.layers, idx);\r\n  if (!texts.length) {\r\n    alert('Texts not found\\nPlease select at least 1 text object and try again', 'Script error');\r\n    return;\r\n  }\r\n\r\n  var sortedTexts = [].concat(texts);\r\n  sortByPosition(sortedTexts, CFG.coordTolerance);\r\n\r\n  var contents = extractContents(texts, CFG.softBreak);\r\n  var sortedContents = extractContents(sortedTexts, CFG.softBreak);\r\n\r\n  // Replace End of Text (ETX) to line break\r\n  var placeholder = isEqualContents(texts, CFG.softBreak) ? \r\n  texts[0].textItem.contents.replace(/\\x03/g, CFG.softBreak) : CFG.ph;\r\n\r\n  // DIALOG\r\n  var win = new Window('dialog', SCRIPT.name + ' ' + SCRIPT.version);\r\n      win.orientation = 'row';\r\n      win.alignChildren = ['fill', 'top'];\r\n\r\n  var input = win.add('edittext', [0, 0, CFG.width, CFG.height], placeholder, {multiline: true, scrolling: true });\r\n      input.helpTip = '\\u8f93\\u5165\\u540e\\u6309 Tab \\u952e\\u9884\\u89c8\\n\\u65b0\\u5efa\\u4e00\\u884c:PC - \\u6309Ctrl+Enter\\u952e,Mac OS-\\u6309 Enter \\u952e.';\r\n      input.helpTip += '\\n\\u8f6f\\u6362\\u884c\\u7279\\u6b8a\\u5b57\\u7b26: Shift+Enter';\r\n      input.active = true;\r\n\r\n  // Options & Buttons\r\n  var opt = win.add('group');\r\n      opt.orientation = 'column';\r\n      opt.alignChildren = ['fill', 'center'];\r\n\r\n  var isSeparate = opt.add('checkbox', undefined, '\\u5206\\u522b\\u7f16\\u8f91');\r\n      isSeparate.helpTip = '\\u5355\\u72ec\\u7f16\\u8f91\\u6bcf\\u4e2a\\u6587\\u672c\\u56fe\\u5c42';\r\n  var isSort = opt.add('checkbox', undefined, '\\u6392\\u5217 by XY');\r\n      isSort.helpTip = '\\u6309\\u4f4d\\u7f6e\\u6392\\u5e8f\\u7684\\u6587\\u672c\\u5c42\\u5217\\u8868';\r\n      isSort.enabled = isSeparate.value;\r\n  var isReverse = opt.add('checkbox', undefined, '\\u53cd\\u5411\\u5e94\\u7528');\r\n      isReverse.helpTip = '\\u6309\\u76f8\\u53cd\\u987a\\u5e8f\\u66ff\\u6362\\u6587\\u672c\\u5c42\\u7684\\u5185\\u5bb9';\r\n      isReverse.enabled = isSeparate.value;\r\n\r\n  var cancel, ok;\r\n  if (CFG.isMac) {\r\n    cancel = opt.add('button', undefined, 'Cancel', { name: 'cancel' });\r\n    ok = opt.add('button', undefined, 'OK', { name: 'ok' });\r\n  } else {\r\n    ok = opt.add('button', undefined, 'OK', { name: 'ok' });\r\n    cancel = opt.add('button', undefined, 'Cancel', { name: 'cancel' });\r\n  }\r\n\r\n  cancel.helpTip = 'Press Esc to Close';\r\n  ok.helpTip = 'Press Enter to Run';\r\n\r\n  var isPreview = opt.add('checkbox', undefined, '\\u9884\\u89c8');\r\n\r\n  var copyright = opt.add('statictext', undefined, 'Visit Github');\r\n  copyright.justify = 'center';\r\n\r\n  loadSettings();\r\n\r\n  isSeparate.onClick = function () {\r\n    isSort.enabled = this.value;\r\n    isReverse.enabled = this.value;\r\n    input.text = getInputText(placeholder);\r\n    win.update();\r\n    preview();\r\n  };\r\n\r\n  isSort.onClick = function () {\r\n    input.text = getInputText(placeholder);\r\n    win.update();\r\n    preview();\r\n  }\r\n\r\n  isReverse.onClick = function () {\r\n    input.text = reverseText(input.text, CFG.divider);\r\n    win.update();\r\n    preview();\r\n  }\r\n\r\n  input.onChange = preview;\r\n  isPreview.onClick = preview;\r\n\r\n  // Insert soft line break char\r\n  input.addEventListener('keydown', function (kd) {\r\n    var isShift = ScriptUI.environment.keyboardState['shiftKey'];\r\n    if (isShift && kd.keyName == 'Enter') {\r\n      this.textselection = CFG.softBreak;\r\n      kd.preventDefault();\r\n      preview();\r\n    }\r\n  });\r\n\r\n  cancel.onClick = win.close;\r\n\r\n  ok.onClick = function () {\r\n    if (isPreview.value && isUndo) {\r\n      doc.activeHistoryState = currState;\r\n    }\r\n\r\n    ok.text = 'Wait...';\r\n    win.update();\r\n\r\n    changeTexts();\r\n\r\n    saveSettings();\r\n    isUndo = false;\r\n    win.close();\r\n  }\r\n\r\n  function getInputText(def) {\r\n    var str = (isSort.value ? sortedContents : contents).join(CFG.divider);\r\n    if (isSeparate.value) {\r\n      return isReverse.value ? reverseText(str, CFG.divider) : str;\r\n    } else {\r\n      return def;\r\n    }\r\n  }\r\n\r\n  var isUndo = false;\r\n  function preview() {\r\n    try {\r\n      if (isPreview.enabled && isPreview.value) {\r\n        if (isUndo) doc.activeHistoryState = currState;\r\n        else isUndo = true;\r\n        changeTexts();\r\n        app.refresh();\r\n      } else if (isUndo) {\r\n        doc.activeHistoryState = currState;\r\n        app.refresh();\r\n        isUndo = false;\r\n      }\r\n    } catch (err) {}\r\n  }\r\n\r\n  function changeTexts() {\r\n    if (isEmpty(input.text)) return;\r\n    var regex = new RegExp(CFG.softBreak, 'gmi');\r\n\r\n    if (isSeparate.value) {\r\n      var srcTexts = [].concat(isSort.value ? sortedTexts : texts);\r\n      var inpTexts = input.text.replace(regex, '\\x03').split(CFG.divider);\r\n      var min = Math.min(srcTexts.length, inpTexts.length);\r\n\r\n      for (var i = 0; i < min; i++) {\r\n        var txt = srcTexts[i];\r\n        if (txt.textItem.contents !== inpTexts[i]) {\r\n          txt.textItem.contents = inpTexts[i]\r\n          .replace(/[\\r\\n]+/gm, '\\r')\r\n          .replace(regex, '\\x03');\r\n        }\r\n      }\r\n    } else {\r\n      for (var i = 0, len = texts.length; i < len; i++) {\r\n        var txt = texts[i];\r\n        var str = input.text.replace(/<text>/gi, contents[i])\r\n        .replace(/[\\r\\n]+/gm, '\\r')\r\n        .replace(regex, '\\x03');;\r\n        if (txt.textItem.contents !== str) {\r\n          txt.textItem.contents = str;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  win.onClose = function () {\r\n    try {\r\n      if (isUndo) doc.activeHistoryState = currState;\r\n    } catch (err) {}\r\n  }\r\n\r\n  copyright.addEventListener('mousedown', function () {\r\n    openURL('https://github.com/creold');\r\n  });\r\n\r\n  function loadSettings() {\r\n    try {\r\n      var desc = app.getCustomOptions(CFG.settings);\r\n    } catch (err) {}\r\n    if (typeof desc != 'undefined') {\r\n      try {\r\n        isSeparate.value = desc.getBoolean(0);\r\n        isSort.value = desc.getBoolean(1);\r\n        isSort.enabled = desc.getBoolean(0);\r\n        isReverse.value = desc.getBoolean(2);\r\n        isReverse.enabled = desc.getBoolean(0);\r\n        input.text = getInputText(placeholder);\r\n        return;\r\n      } catch (err) {}\r\n    }\r\n  }\r\n\r\n  function saveSettings() {\r\n    var desc = new ActionDescriptor();\r\n    desc.putBoolean(0, isSeparate.value);\r\n    desc.putBoolean(1, isSort.value);\r\n    desc.putBoolean(2, isReverse.value);\r\n    app.putCustomOptions(CFG.settings, desc, true);\r\n  }\r\n\r\n  win.center();\r\n  win.show();\r\n}\r\n\r\n/**\r\n * Get the indexes of all selected layers in the active Photoshop document\r\n * https://community.adobe.com/t5/photoshop-ecosystem-discussions/how-to-find-selected-layers-and-run-events/td-p/10269273 by Geppetto Luis\r\n *\r\n * @returns {Array} - An array containing the indexes of the selected layers\r\n */\r\nfunction getSelectedLayersIdx() {\r\n  var result = new Array;\r\n  var ref = new ActionReference();\r\n  ref.putEnumerated(cTID('Dcmn'), cTID('Ordn'), cTID('Trgt'));\r\n  var desc = executeActionGet(ref);\r\n\r\n  if (desc.hasKey(sTID('targetLayers'))) {\r\n    desc = desc.getList(sTID('targetLayers'));\r\n    var counter = desc.count;\r\n    var result = new Array();\r\n    for (var i = 0; i < counter; i++) {\r\n      try {\r\n        activeDocument.backgroundLayer;\r\n        result.push(desc.getReference(i).getIndex());\r\n      } catch (err) {\r\n        result.push(desc.getReference(i).getIndex() + 1);\r\n      }\r\n    }\r\n  } else {\r\n    var ref = new ActionReference();\r\n    ref.putProperty(cTID('Prpr'), cTID('ItmI'));\r\n    ref.putEnumerated(cTID('Lyr '), cTID('Ordn'), cTID('Trgt'));\r\n    try {\r\n      activeDocument.backgroundLayer;\r\n      result.push(executeActionGet(ref).getInteger(cTID('ItmI')) - 1);\r\n    } catch (err) {\r\n      result.push(executeActionGet(ref).getInteger(cTID('ItmI')));\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Convert a string identifier to a character identifier\r\n *\r\n * @param {string} s - The string identifier\r\n * @returns {number} - The corresponding character identifier\r\n */\r\nfunction cTID(s) {\r\n  return app.charIDToTypeID(s);\r\n}\r\n\r\n/**\r\n * Convert a string identifier to a type identifier\r\n *\r\n * @param {string} s - The string identifier\r\n * @returns {number} - The corresponding type identifier\r\n */\r\nfunction sTID(s) {\r\n  return app.stringIDToTypeID(s);\r\n}\r\n\r\n/**\r\n * Get all text layers from the given layers array that match the provided indexes\r\n *\r\n * @param {[Object|Array]} layers - The layers array to search\r\n * @param {number[]} idx - The array of indexes to match\r\n * @returns {Array} - An array containing the text layers matching the provided indexes\r\n */\r\nfunction getTextLayers(layers, idx) {\r\n  var result = [];\r\n\r\n  for (var i = 0; i < layers.length; i++) {\r\n    var lyr = layers[i];\r\n    if (lyr.kind === LayerKind.TEXT) {\r\n      for (var j = 0; j < idx.length; j++) {\r\n        try {\r\n          activeDocument.backgroundLayer;\r\n          if (lyr.itemIndex - 1 === idx[j]) {\r\n            result.push(lyr);\r\n            break;\r\n          }\r\n        } catch (err) {\r\n          if (lyr.itemIndex === idx[j]) {\r\n            result.push(lyr);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    } else if (lyr.typename === 'LayerSet') {\r\n      result = [].concat(result, getTextLayers(lyr.layers, idx));\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Sort items based on their position\r\n * \r\n * @param {(Object|Array)} coll - Collection to be sorted\r\n * @param {number} tolerance - The tolerance within which objects are considered to have the same top position\r\n */\r\nfunction sortByPosition(coll, tolerance) {\r\n  if (arguments.length == 1 || tolerance == undefined) {\r\n    tolerance = 10;\r\n  }\r\n\r\n  coll.sort(function(a, b) {\r\n    if (Math.abs(a.bounds[1] - b.bounds[1]) <= tolerance) {\r\n      return a.bounds[0] - b.bounds[0];\r\n    }\r\n    return a.bounds[1] - b.bounds[1];\r\n  });\r\n}\r\n\r\n/**\r\n * Extract the contents of text layers from a given collection\r\n * \r\n * @param {Array} coll - The collection of text layers\r\n * @param {string} softBreak - The soft line break special char\r\n * @returns {Array} - An array containing the contents of text layers\r\n */\r\nfunction extractContents(coll, softBreak) {\r\n  var result = [];\r\n\r\n  for (var i = 0, len = coll.length; i < len; i++) {\r\n    // Replace End of Text (ETX) to line break\r\n    result.push(coll[i].textItem.contents.replace(/\\x03/g, softBreak));\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Check if the contents of all texts in the collection are equal\r\n * \r\n * @param {Array} coll - The collection of texts to compare\r\n * @param {string} softBreak - The soft line break special char\r\n * @returns {boolean} - Returns true if all texts have equal contents, otherwise false\r\n */\r\nfunction isEqualContents(coll, softBreak) {\r\n  var str = coll[0].textItem.contents.replace(/\\x03/g, softBreak);\r\n\r\n  for (var i = 1, len = coll.length; i < len; i++) {\r\n    if (coll[i].textItem.contents.replace(/\\x03/g, softBreak) !== str)\r\n      return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * Reverse the order of texts within a string separated by a specified divider\r\n * @param {string} str - The delimited string to reverse\r\n * @param {string} divider - The divider used to split\r\n * @returns {string} - A reversed string\r\n */\r\nfunction reverseText(str, divider) {\r\n  var tmp = str.split(divider);\r\n\r\n  tmp.reverse();\r\n  var str = tmp.join(divider);\r\n\r\n  return str;\r\n}\r\n\r\n/**\r\n * Check if a string is empty or contains only whitespace characters\r\n *\r\n * @param {string} str - The string to check for emptiness\r\n * @returns {boolean} - True if the string is empty, false otherwise\r\n */\r\nfunction isEmpty(str) {\r\n  return str.replace(/\\s/g, '').length == 0;\r\n}\r\n\r\n/**\r\n * Open a URL in the default web browser\r\n * \r\n * @param {string} url - The URL to open in the web browser\r\n * @returns {void}\r\n */\r\nfunction openURL(url) {\r\n  var html = new File(Folder.temp.absoluteURI + '/aisLink.html');\r\n  html.open('w');\r\n  var htmlBody = '<html><head><META HTTP-EQUIV=Refresh CONTENT=\"0; URL=' + url + '\"></head><body> <p></body></html>';\r\n  html.write(htmlBody);\r\n  html.close();\r\n  html.execute();\r\n}\r\n\r\ntry {\r\n  if (!/photoshop/i.test(app.name)) {\r\n    alert('Error\\nRun script from Adobe Photoshop');\r\n  } else if (!documents.length) {\r\n    alert('Error\\nOpen a document and try again');\r\n  } else {\r\n    app.activeDocument.suspendHistory('Multi-edit Text', 'main()');\r\n  }\r\n} catch (err) {}"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "文本编辑",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 8"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Photoshop.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "// 引用外部库\r\nvar externalLibrary = new ExternalObject(\"lib:\\PlugPlugExternalObject\");\r\nvar myLib = new ExternalObject(\"lib:\\PlugPlugExternalObject\");\r\n\r\n// 提示用户选择包含图像的文件夹\r\nvar folder = Folder.selectDialog(\"选择包含图像的文件夹\");\r\nif (!folder) {\r\n    alert(\"没有选择文件夹。脚本已中止。\");\r\n} else {\r\n    // 获取当前活动文档\r\n    var activeDocument = app.activeDocument;\r\n\r\n    // 获取文件夹中的所有文件\r\n    var files = folder.getFiles();\r\n\r\n    // 遍历文件夹中的所有文件\r\n    for (var i = 0; i < files.length; i++) {\r\n        var file = files[i];\r\n\r\n        // 检查文件是否是图像文件\r\n        if (file instanceof File && /\\.(jpg|jpeg|png|gif|tiff|bmp)$/i.test(file.name)) {\r\n            // 打开图像文件\r\n            var placedLayer = app.activeDocument.artLayers.add();\r\n            app.activeDocument.activeLayer = placedLayer;\r\n\r\n            // 放置图像\r\n            var desc = new ActionDescriptor();\r\n            desc.putPath(charIDToTypeID('null'), file);\r\n            desc.putEnumerated(charIDToTypeID('FTcs'), charIDToTypeID('QCSt'), charIDToTypeID('Qcsa'));\r\n            executeAction(charIDToTypeID('Plc '), desc, DialogModes.NO);\r\n\r\n            // 获取图像尺寸\r\n            var width = app.activeDocument.width;\r\n            var height = app.activeDocument.height;\r\n\r\n            // 确保图像尺寸不超过当前文档\r\n            if (width > activeDocument.width || height > activeDocument.height) {\r\n                // 缩放图像\r\n                app.activeDocument.resizeImage(activeDocument.width, activeDocument.height);\r\n            }\r\n\r\n            // 调整图层位置\r\n            placedLayer = app.activeDocument.activeLayer;\r\n            placedLayer.translate((activeDocument.width - width) / 2, (activeDocument.height - height) / 2);\r\n\r\n            // 显示进度\r\n            $.writeln(\"已置入图像: \" + file.name);\r\n        }\r\n    }\r\n}\r\n\r\n// 关闭外部库\r\nexternalLibrary.unload();\r\n"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "批量置入图片",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 10"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Photoshop.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "\r\nif (app.documents.length > 0) {\r\n    var doc = app.activeDocument;\r\n    var groupsToCollapse = [];\r\n\r\n    // 遍历所有图层组，查找已展开的组\r\n    for (var i = 0; i < doc.layerSets.length; i++) {\r\n        if (doc.layerSets[i].visible && doc.layerSets[i].layers.length > 0) {\r\n            groupsToCollapse.push(doc.layerSets[i]);\r\n        }\r\n    }\r\n\r\n    // 如果找到已展开的组，则执行折叠操作\r\n    if (groupsToCollapse.length > 0) {\r\n        try {\r\n            app.runMenuItem(stringIDToTypeID('collapseAllGroupsEvent'));\r\n        } catch (e) {\r\n            // 捕获并处理异常，避免抛出错误提示\r\n        }\r\n    }\r\n}\r\n"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "折叠组",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 12"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Photoshop.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "/*\r\nVertical Stacker.jsx\r\nhttps://community.adobe.com/t5/photoshop-ecosystem-discussions/script-help-export-merge-many-picture-into-one/td-p/13016395\r\nHow to create one big PNG image from multiple PNG images?\r\nStephen Marsh\r\nv1.2, 20th June 2022\r\n*/\r\n\r\n#target photoshop\r\n\r\nif (app.documents.length === 0) {\r\n\r\n    (function () {\r\n\r\n        // Save the current dialog display settings\r\n        var savedDisplayDialogs = app.displayDialogs;\r\n        app.displayDialogs = DialogModes.NO;\r\n\r\n        // Capture the original ruler units and set the ruler units to pixels\r\n        var origUnits = app.preferences.rulerUnits;\r\n        app.preferences.rulerUnits = Units.PIXELS;\r\n\r\n        // Select the input folder\r\n        var inputFolder = Folder.selectDialog('Please select the input folder:');\r\n        // Test if Cancel button returns null, then do nothing\r\n        if (inputFolder === null) {\r\n            app.beep();\r\n            return;\r\n        }\r\n\r\n        // Supported file formats\r\n        var inputFiles = inputFolder.getFiles(/\\.(jpg|jpeg|tif|tiff|png|psd|psb)$/i);\r\n        // Alpha numeric sort\r\n        // inputFiles.sort().reverse;\r\n        inputFiles.sort();\r\n\r\n        // Process the first \"base\" file\r\n        var firstFile = app.open(File(inputFiles[0]));\r\n        var firstFileName = app.activeDocument.name.replace(/\\.[^\\.]+$/, '');\r\n        app.activeDocument.duplicate(\"Final\", false);\r\n        firstFile.close(SaveOptions.DONOTSAVECHANGES);\r\n        var docStack = app.documents[0];\r\n        app.activeDocument = docStack;\r\n        docStack.activeLayer.name = firstFileName;\r\n        // Convert layer to smart object\r\n        //var idnewPlacedLayer = stringIDToTypeID(\"newPlacedLayer\");\r\n        //executeAction( idnewPlacedLayer, undefined, DialogModes.NO );\r\n\r\n        // Process the remaining file layers to the \"base\" file\r\n        for (var i = 1; i < inputFiles.length; i++) {\r\n            var remainingFiles = app.open(File(inputFiles[i]));\r\n            var fileName = remainingFiles.name.replace(/\\.[^\\.]+$/, '');\r\n            var aggregateHeight = activeDocument.height.value;\r\n            remainingFiles.activeLayer.name = fileName;\r\n            remainingFiles.layers[0].duplicate(docStack, ElementPlacement.PLACEATBEGINNING);\r\n            remainingFiles.close(SaveOptions.DONOTSAVECHANGES);\r\n            relativeCanvasSize(true, aggregateHeight);\r\n            align2SelectAll('AdCH');\r\n            align2SelectAll('AdBt');\r\n            // Convert layer to smart object\r\n            //var idnewPlacedLayer = stringIDToTypeID(\"newPlacedLayer\");\r\n            //executeAction( idnewPlacedLayer, undefined, DialogModes.NO );\r\n        }\r\n\r\n        app.runMenuItem(stringIDToTypeID(\"selectAllLayers\"));\r\n        //reverseLayerStack();\r\n        //app.activeDocument.flatten();\r\n\r\n        app.beep();\r\n        alert(inputFiles.length + ' files vertically stacked!');\r\n\r\n        // Restore the dialogs\r\n        app.displayDialogs = savedDisplayDialogs;\r\n\r\n        // Return the original ruler units\r\n        app.preferences.rulerUnits = origUnits;\r\n\r\n\r\n        // Functions\r\n\r\n        function relativeCanvasSize(relative, height) {\r\n            var s2t = function (s) {\r\n                return app.stringIDToTypeID(s);\r\n            };\r\n\r\n            var descriptor = new ActionDescriptor();\r\n\r\n            descriptor.putBoolean(s2t(\"relative\"), relative);\r\n            descriptor.putUnitDouble(s2t(\"height\"), s2t(\"pixelsUnit\"), height);\r\n            descriptor.putEnumerated(s2t(\"vertical\"), s2t(\"verticalLocation\"), s2t(\"top\"));\r\n            executeAction(s2t(\"canvasSize\"), descriptor, DialogModes.NO);\r\n        }\r\n\r\n        function align2SelectAll(method) {\r\n\r\n            app.activeDocument.selection.selectAll();\r\n\r\n            var desc = new ActionDescriptor();\r\n            var ref = new ActionReference();\r\n            ref.putEnumerated(charIDToTypeID(\"Lyr \"), charIDToTypeID(\"Ordn\"), charIDToTypeID(\"Trgt\"));\r\n            desc.putReference(charIDToTypeID(\"null\"), ref);\r\n            desc.putEnumerated(charIDToTypeID(\"Usng\"), charIDToTypeID(\"ADSt\"), charIDToTypeID(method));\r\n            try {\r\n                executeAction(charIDToTypeID(\"Algn\"), desc, DialogModes.NO);\r\n            } catch (e) { }\r\n\r\n            app.activeDocument.selection.deselect();\r\n\r\n        }\r\n\r\n        function reverseLayerStack() {\r\n            var idreverse = stringIDToTypeID(\"reverse\");\r\n            var desc4653 = new ActionDescriptor();\r\n            var idnull = stringIDToTypeID(\"null\");\r\n            var ref2335 = new ActionReference();\r\n            var idlayer = stringIDToTypeID(\"layer\");\r\n            var idordinal = stringIDToTypeID(\"ordinal\");\r\n            var idtargetEnum = stringIDToTypeID(\"targetEnum\");\r\n            ref2335.putEnumerated(idlayer, idordinal, idtargetEnum);\r\n            desc4653.putReference(idnull, ref2335);\r\n            executeAction(idreverse, desc4653, DialogModes.NO);\r\n        }\r\n\r\n    })();\r\n\r\n} else {\r\n    alert('需要在未打开任何文件的情况下使用...');\r\n}"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "垂直堆叠图片",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 13"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Photoshop.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "/*\r\n  ExportPathsToAi.jsx for Adobe Photoshop\r\n  Description: Export all visible vector layers as unfilled paths to Illustrator\r\n  Date: August, 2022\r\n  Author: Sergey Osokin, email: hi@sergosokin.ru\r\n\r\n  Original idea:\r\n  https://community.adobe.com/t5/photoshop-ecosystem-discussions/how-to-export-paths-to-ai-in-action-batch/td-p/11049168\r\n\r\n  Installation: https://github.com/creold/photoshop-scripts#how-to-run-scripts\r\n\r\n  Release notes:\r\n  0.1 Initial version by Stephen_A_Marsh\r\n  0.2 Added one-click export of all vector paths\r\n\r\n  Donate (optional):\r\n  If you find this script helpful, you can buy me a coffee\r\n  - via Buymeacoffee: https://www.buymeacoffee.com/aiscripts\r\n  - via Donatty https://donatty.com/sergosokin\r\n  - via DonatePay https://new.donatepay.ru/en/@osokin\r\n  - via YooMoney https://yoomoney.ru/to/410011149615582\r\n\r\n  NOTICE:\r\n  Tested with Adobe Photoshop CC 2019-2022.\r\n  This script is provided \"as is\" without warranty of any kind.\r\n  Free to use, not for sale\r\n\r\n  Released under the MIT license\r\n  http://opensource.org/licenses/mit-license.php\r\n\r\n  Check my other scripts: https://github.com/creold\r\n*/\r\n\r\n//@target photoshop\r\n\r\nfunction main() {\r\n  if (!isCorrectEnv()) return;\r\n\r\n  var doc = activeDocument,\r\n      docName = doc.name.replace(/\\.[^\\.]+$/, ''),\r\n      shapes = getVisShapes(doc),  // Array of layer ID's\r\n      outFolder;\r\n\r\n  try {\r\n    outFolder = doc.path;\r\n  } catch (e) {\r\n    outFolder = Folder.desktop;\r\n  }\r\n\r\n  if (!shapes.length) {\r\n    alert('\\u672a\\u627e\\u5230\\u53ef\\u89c1\\u77e2\\u91cf\\u56fe\\u5c42');\r\n    return;\r\n  }\r\n\r\n  deselect();\r\n\r\n  for (var i = 0; i < shapes.length; i++) {\r\n    selectByID(shapes[i]);\r\n  }\r\n\r\n  var result = exportPaths(outFolder, docName, '.ai');\r\n  if (result) {\r\n    alert(shapes.length + ' \\u53ef\\u89c1\\u77e2\\u91cf\\u56fe\\u5c42\\u5df2\\u5bfc\\u51fa\\u5230 ' + '\\n' + decodeURI(result));\r\n  }\r\n}\r\n\r\n// Check the script environment\r\nfunction isCorrectEnv() {\r\n  var args = ['app', 'document'];\r\n\r\n  for (var i = 0; i < args.length; i++) {\r\n    switch (args[i].toString().toLowerCase()) {\r\n      case 'app':\r\n        if (!/photoshop/i.test(app.name)) {\r\n          alert('Error\\nRun script from Adobe Photoshop');\r\n          return false;\r\n        }\r\n        break;\r\n      case 'document':\r\n        if (!documents.length) {\r\n          alert('Error\\n\\u6253\\u5f00\\u6587\\u6863\\u518d\\u8bd5\\u4e00\\u6b21');\r\n          return false;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n// Get indexes of all visible vector layers\r\nfunction getVisShapes(collection) {\r\n  var out = [];\r\n\r\n  for (var i = 0; i < collection.layers.length; i++) {\r\n    var lyr = collection.layers[i];\r\n    if (!lyr.visible) continue;\r\n    if (/art/i.test(lyr.typename)) {\r\n      if (isType(lyr, 4)) out.push(lyr.id); // const kVectorSheet = 4;\r\n    } else if (/set/i.test(lyr.typename)) {\r\n      out = [].concat(out, getVisShapes(lyr));\r\n    } else {\r\n      out = [].concat(out, getVisShapes(lyr));\r\n    }\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n// Check LayerKind code\r\nfunction isType(layer, code) {\r\n  try {\r\n    activeDocument.activeLayer = layer;\r\n  } catch (e) {}\r\n\r\n  var ref = new ActionReference();\r\n  ref.putProperty(sTID('property'), sTID('layerKind'));\r\n  ref.putEnumerated(sTID('layer'), sTID('ordinal'), sTID('targetEnum'));\r\n  var type = executeActionGet(ref).getInteger(sTID('layerKind'));\r\n\r\n  return type == code;\r\n}\r\n\r\nfunction cTID(s) { \r\n  return app.charIDToTypeID(s);\r\n}\r\n\r\nfunction sTID(s) {\r\n  return app.stringIDToTypeID(s);\r\n}\r\n\r\n// Deselect all layers in the document\r\nfunction deselect() { \r\n  var ref = new ActionReference(),\r\n      desc = new ActionDescriptor();\r\n\r\n  ref.putEnumerated(cTID('Lyr '), cTID('Ordn'), cTID('Trgt') ); \r\n  desc.putReference(cTID('null'), ref); \r\n  executeAction(sTID('selectNoLayers'), desc, DialogModes.NO); \r\n}\r\n\r\n// Select layer by index\r\nfunction selectByID(id) {\r\n  var ref = new ActionReference(),\r\n      desc = new ActionDescriptor();\r\n\r\n  ref.putIdentifier(cTID('Lyr '), id);\r\n  desc.putReference(cTID('null'), ref);\r\n  desc.putEnumerated(sTID('selectionModifier'), sTID('selectionModifierType'), sTID('addToSelection'));\r\n  desc.putBoolean(cTID('MkVs'), false);\r\n  executeAction(cTID('slct'), desc, DialogModes.NO);\r\n}\r\n\r\n// Export vector paths to Illustrator file\r\nfunction exportPaths(folder, name, ext) {\r\n  try {\r\n    var aiFile = new File(folder + '/' + name + ext),\r\n        expOptions = new ExportOptionsIllustrator;\r\n\r\n    expOptions.path = IllustratorPathType.ALLPATHS;\r\n    activeDocument.exportDocument(aiFile, ExportType.ILLUSTRATORPATHS, expOptions);\r\n    return aiFile;\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n}\r\n\r\ntry {\r\n  main();\r\n} catch(e) {}"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "形状到AI",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 16"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Photoshop.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "$$#target photoshop\r\n\r\ncTID = function(s) { return app.charIDToTypeID(s); };\r\nsTID = function(s) { return app.stringIDToTypeID(s); };\r\n\r\nfunction __1() {\r\n\r\n  function step1(enabled, withDialog) {\r\n    if (enabled != undefined && !enabled)\r\n      return;\r\n    var dialogMode = (withDialog ? DialogModes.ALL : DialogModes.NO);\r\n    var desc1 = new ActionDescriptor();\r\n    var ref1 = new ActionReference();\r\n    ref1.putClass(cTID('Path'));\r\n    desc1.putReference(cTID('null'), ref1);\r\n    var ref2 = new ActionReference();\r\n    ref2.putProperty(cTID('csel'), sTID(\"selection\"));\r\n    desc1.putReference(cTID('From'), ref2);\r\n    desc1.putUnitDouble(cTID('Tlrn'), cTID('#Pxl'), {容差}); // 此处修改容差\r\n    executeAction(sTID('make'), desc1, dialogMode);\r\n  };\r\n\r\n  step1(); \r\n};\r\n\r\n\r\n__1.main = function () {\r\n  __1();\r\n};\r\n\r\n__1.main();\r\n\r\n// EOF\r\n\r\n\"__1.jsx\"\r\n// EOF\r\n"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "0"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": "10000"
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    },
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Photoshop.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "convertPathtoShape();\r\nfunction convertPathtoShape() {\r\n\tvar d = new ActionDescriptor();\r\n\tvar d2 = new ActionDescriptor();\r\n\tvar d3 = new ActionDescriptor();\r\n\tvar d4 = new ActionDescriptor();\r\n\tvar r = new ActionReference();\r\n\tr.putClass( stringIDToTypeID( \"contentLayer\" ));\r\n\td.putReference( charIDToTypeID( \"null\" ), r );\r\n\td4.putDouble( charIDToTypeID( \"Rd  \" ), 125);\r\n\td4.putDouble( charIDToTypeID( \"Grn \" ), 125);\r\n\td4.putDouble( charIDToTypeID( \"Bl  \" ), 125);\r\n\td3.putObject( charIDToTypeID( \"Clr \" ), charIDToTypeID( \"RGBC\" ), d4 );\r\n\td2.putObject( charIDToTypeID( \"Type\" ), stringIDToTypeID( \"solidColorLayer\" ), d3 );\r\n\td.putObject( charIDToTypeID( \"Usng\" ), stringIDToTypeID( \"contentLayer\" ), d2 );\r\n\texecuteAction( charIDToTypeID( \"Mk  \" ), d, DialogModes.NO );\r\n}"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "0"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": "10000"
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "路径到形状",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 14"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Photoshop.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "/*\r\n * 清除当前文档XMP数据脚本\r\n * 功能：删除Photoshop文档中的DocumentAncestors XMP元数据\r\n * 用途：清理文件中可能存在的历史记录相关的元数据\r\n */\r\n\r\nfunction deleteDocumentAncestorsMetadata() { \r\n    // 获取当前应用程序名称的字符串版本\r\n    whatApp = String(app.name);\r\n    \r\n    // 检查是否在Photoshop中运行，因为这个脚本只能在Photoshop中使用\r\n    if(whatApp.search(\"Photoshop\") > 0) { \r\n        // 检查是否有打开的文档\r\n        if(!documents.length) { \r\n            alert(\"请先打开一个文件再运行此脚本。\");\r\n            return; \r\n        }\r\n        \r\n        // 初始化AdobeXMPScript外部对象（如果尚未初始化）\r\n        if (ExternalObject.AdobeXMPScript == undefined) {\r\n            ExternalObject.AdobeXMPScript = new ExternalObject(\"lib:AdobeXMPScript\");\r\n        }\r\n        \r\n        // 从当前活动文档中获取XMP元数据\r\n        var xmp = new XMPMeta(activeDocument.xmpMetadata.rawData);\r\n        \r\n        // 删除DocumentAncestors属性\r\n        xmp.deleteProperty(XMPConst.NS_PHOTOSHOP, \"DocumentAncestors\");\r\n        \r\n        // 将更新后的XMP数据写回文档\r\n        app.activeDocument.xmpMetadata.rawData = xmp.serialize(); \r\n    } \r\n} \r\n\r\n// 执行清除文档祖先元数据的函数\r\ndeleteDocumentAncestorsMetadata();\r\n\r\n// 显示操作完成的提示信息\r\nalert(\"XMP元数据清除完成！\");"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "PS瘦身",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                },
                {
                  "StepRunnerKey": "sys:simpleIf",
                  "InputParams": {
                    "condition": {
                      "VarKey": null,
                      "Value": "$= {选中值} == 15"
                    }
                  },
                  "OutputParams": {},
                  "IfSteps": [
                    {
                      "StepRunnerKey": "sys:adobesoftscontrol",
                      "InputParams": {
                        "software": {
                          "VarKey": null,
                          "Value": "Photoshop.Application"
                        },
                        "operation": {
                          "VarKey": null,
                          "Value": "dojavascript"
                        },
                        "script": {
                          "VarKey": null,
                          "Value": "/**\r\n * @author Jason\r\n * @email jiangran@126.com\r\n * @name PsDeepCleaner\r\n * @description Photoshop元数据深度清理脚本\r\n * @description 功能：清理Photoshop文档及其智能对象中的DocumentAncestors XMP元数据\r\n * @description 用途：减小文件体积，清除可能包含的历史记录相关元数据\r\n */\r\n\r\n/**\r\n * 清除当前文档的DocumentAncestors元数据\r\n * 该函数会清理当前活动文档中的XMP元数据，并递归处理所有智能对象图层\r\n */\r\nfunction deleteDocumentAncestorsMetadata() {\r\n    // 检查是否在Photoshop中运行\r\n    if(String(app.name).search(\"Photoshop\") > 0) {\r\n        // 检查是否有打开的文档\r\n        if(!documents.length) {\r\n            alert(\"请先打开一个文件再运行此脚本。\")\r\n            return;\r\n        }\r\n\r\n        // 初始化AdobeXMPScript外部对象（如果尚未初始化）\r\n        if (ExternalObject.AdobeXMPScript == undefined) ExternalObject.AdobeXMPScript = new ExternalObject(\"lib:AdobeXMPScript\");\r\n\r\n        // 从当前活动文档中获取XMP元数据并删除DocumentAncestors属性\r\n        var xmp = new XMPMeta( activeDocument.xmpMetadata.rawData);\r\n        xmp.deleteProperty(XMPConst.NS_PHOTOSHOP, \"DocumentAncestors\");\r\n        app.activeDocument.xmpMetadata.rawData = xmp.serialize();\r\n\r\n        // 递归处理所有图层中的智能对象\r\n        clearDocumentAncestorsForAllLayers(app.activeDocument);\r\n\r\n        // 根据文档类型选择适当的保存方式\r\n        if (app.activeDocument !== mainDocument) {\r\n            app.activeDocument.close(SaveOptions.SAVECHANGES);\r\n        }else{\r\n            app.activeDocument.save();\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * 递归清理所有图层中的智能对象元数据\r\n * @param {Document} doc - 要处理的文档对象\r\n */\r\nfunction clearDocumentAncestorsForAllLayers(doc) {\r\n    try {\r\n        // 检查文档是否有效\r\n        if (doc == undefined) {\r\n            return;\r\n        }\r\n\r\n        // 遍历文档中的所有图层\r\n        for (var i = 0; i < doc.layers.length; i++) {\r\n            var curLayer = doc.layers[i];\r\n            // 如果是图层组，递归处理其中的图层\r\n            if (curLayer.typename != \"ArtLayer\") {\r\n                clearDocumentAncestorsForAllLayers(curLayer);\r\n                continue;\r\n            }\r\n\r\n            // 如果是智能对象图层，进入智能对象并清理其元数据\r\n            if (curLayer.kind == \"LayerKind.SMARTOBJECT\") {\r\n                // 设置当前图层为活动图层\r\n                app.activeDocument.activeLayer = curLayer;\r\n                \r\n                // 编辑智能对象内容\r\n                var idplacedLayerEditContents = stringIDToTypeID(\"placedLayerEditContents\");\r\n                var actionDescriptor = new ActionDescriptor();\r\n                executeAction(idplacedLayerEditContents, actionDescriptor, DialogModes.NO);\r\n\r\n                // 检查是否成功进入智能对象\r\n                if(app.activeDocument.activeLayer == curLayer){\r\n                    continue;\r\n                }\r\n                // 清理智能对象中的元数据\r\n                deleteDocumentAncestorsMetadata()\r\n                layerSetStr += (\"\\n\"+curLayer.name)\r\n            }\r\n        }\r\n    } catch (e) {\r\n        alert(\"图层清理失败。图层名称=\"+doc+\";错误信息=\"+e)\r\n    }\r\n}\r\n\r\n// 初始化全局变量\r\nvar layerSetStr = \"\";\r\nvar mainDocument = app.activeDocument;\r\n\r\n/**\r\n * 启动清理过程\r\n */\r\nfunction start(){\r\n    deleteDocumentAncestorsMetadata();\r\n    alert(\"清理完成！\\n[文档名称]:\"+mainDocument.name+\"\\n[已处理图层]:\"+layerSetStr);\r\n}\r\n\r\n// 主程序入口\r\ntry{\r\n    if(confirm(\"是否开始清理？\")){\r\n        start();\r\n    }\r\n} catch (e) {\r\n    alert(\"清理失败。错误信息=\"+e)\r\n}"
                        },
                        "waitResp": {
                          "VarKey": null,
                          "Value": "true"
                        },
                        "tryRunScriptUsingExe": {
                          "VarKey": null,
                          "Value": "false"
                        },
                        "stopIfFail": {
                          "VarKey": null,
                          "Value": "1"
                        },
                        "waitMs": {
                          "VarKey": null,
                          "Value": ""
                        }
                      },
                      "OutputParams": {
                        "isSuccess": null,
                        "output": null,
                        "errMessage": null
                      },
                      "IfSteps": null,
                      "ElseSteps": null,
                      "Note": "",
                      "Disabled": false,
                      "Collapsed": false,
                      "DelayMs": 0
                    }
                  ],
                  "ElseSteps": null,
                  "Note": "PS瘦身++",
                  "Disabled": false,
                  "Collapsed": true,
                  "DelayMs": 0
                }
              ],
              "ElseSteps": null,
              "Note": "执行",
              "Disabled": false,
              "Collapsed": true,
              "DelayMs": 0
            }
          ],
          "ElseSteps": null,
          "Note": "",
          "Disabled": false,
          "Collapsed": false,
          "DelayMs": 0
        }
      ],
      "ElseSteps": [
        {
          "StepRunnerKey": "sys:notify",
          "InputParams": {
            "msg": {
              "VarKey": null,
              "Value": "请在Photoshop中运行动作"
            },
            "maxLines": {
              "VarKey": null,
              "Value": "0"
            },
            "type": {
              "VarKey": null,
              "Value": "Info"
            },
            "clickAction": {
              "VarKey": null,
              "Value": ""
            },
            "style": {
              "VarKey": null,
              "Value": "Default"
            }
          },
          "OutputParams": {},
          "IfSteps": null,
          "ElseSteps": null,
          "Note": "",
          "Disabled": false,
          "Collapsed": false,
          "DelayMs": 0
        }
      ],
      "Note": "",
      "Disabled": false,
      "Collapsed": true,
      "DelayMs": 0
    }
  ]
}